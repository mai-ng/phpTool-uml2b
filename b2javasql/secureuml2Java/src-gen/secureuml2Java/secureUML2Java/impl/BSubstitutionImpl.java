/**
 * generated by Xtext 2.10.0
 */
package secureuml2Java.secureUML2Java.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import secureuml2Java.secureUML2Java.BSubstitution;
import secureuml2Java.secureUML2Java.SecureUML2JavaPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BSubstitution</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.BSubstitutionImpl#getSleft <em>Sleft</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.BSubstitutionImpl#getSright <em>Sright</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BSubstitutionImpl extends MinimalEObjectImpl.Container implements BSubstitution
{
  /**
   * The cached value of the '{@link #getSleft() <em>Sleft</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSleft()
   * @generated
   * @ordered
   */
  protected EObject sleft;

  /**
   * The default value of the '{@link #getSright() <em>Sright</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSright()
   * @generated
   * @ordered
   */
  protected static final String SRIGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSright() <em>Sright</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSright()
   * @generated
   * @ordered
   */
  protected String sright = SRIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BSubstitutionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2JavaPackage.Literals.BSUBSTITUTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getSleft()
  {
    return sleft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSleft(EObject newSleft, NotificationChain msgs)
  {
    EObject oldSleft = sleft;
    sleft = newSleft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BSUBSTITUTION__SLEFT, oldSleft, newSleft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSleft(EObject newSleft)
  {
    if (newSleft != sleft)
    {
      NotificationChain msgs = null;
      if (sleft != null)
        msgs = ((InternalEObject)sleft).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BSUBSTITUTION__SLEFT, null, msgs);
      if (newSleft != null)
        msgs = ((InternalEObject)newSleft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BSUBSTITUTION__SLEFT, null, msgs);
      msgs = basicSetSleft(newSleft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BSUBSTITUTION__SLEFT, newSleft, newSleft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSright()
  {
    return sright;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSright(String newSright)
  {
    String oldSright = sright;
    sright = newSright;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BSUBSTITUTION__SRIGHT, oldSright, sright));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BSUBSTITUTION__SLEFT:
        return basicSetSleft(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BSUBSTITUTION__SLEFT:
        return getSleft();
      case SecureUML2JavaPackage.BSUBSTITUTION__SRIGHT:
        return getSright();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BSUBSTITUTION__SLEFT:
        setSleft((EObject)newValue);
        return;
      case SecureUML2JavaPackage.BSUBSTITUTION__SRIGHT:
        setSright((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BSUBSTITUTION__SLEFT:
        setSleft((EObject)null);
        return;
      case SecureUML2JavaPackage.BSUBSTITUTION__SRIGHT:
        setSright(SRIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BSUBSTITUTION__SLEFT:
        return sleft != null;
      case SecureUML2JavaPackage.BSUBSTITUTION__SRIGHT:
        return SRIGHT_EDEFAULT == null ? sright != null : !SRIGHT_EDEFAULT.equals(sright);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sright: ");
    result.append(sright);
    result.append(')');
    return result.toString();
  }

} //BSubstitutionImpl
