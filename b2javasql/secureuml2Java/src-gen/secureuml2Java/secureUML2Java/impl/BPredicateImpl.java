/**
 * generated by Xtext 2.10.0
 */
package secureuml2Java.secureUML2Java.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import secureuml2Java.secureUML2Java.BPredicate;
import secureuml2Java.secureUML2Java.SecureUML2JavaPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BPredicate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.BPredicateImpl#getPleft <em>Pleft</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.BPredicateImpl#getPright <em>Pright</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BPredicateImpl extends MinimalEObjectImpl.Container implements BPredicate
{
  /**
   * The cached value of the '{@link #getPleft() <em>Pleft</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPleft()
   * @generated
   * @ordered
   */
  protected EObject pleft;

  /**
   * The cached value of the '{@link #getPright() <em>Pright</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPright()
   * @generated
   * @ordered
   */
  protected EObject pright;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BPredicateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2JavaPackage.Literals.BPREDICATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getPleft()
  {
    return pleft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPleft(EObject newPleft, NotificationChain msgs)
  {
    EObject oldPleft = pleft;
    pleft = newPleft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BPREDICATE__PLEFT, oldPleft, newPleft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPleft(EObject newPleft)
  {
    if (newPleft != pleft)
    {
      NotificationChain msgs = null;
      if (pleft != null)
        msgs = ((InternalEObject)pleft).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BPREDICATE__PLEFT, null, msgs);
      if (newPleft != null)
        msgs = ((InternalEObject)newPleft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BPREDICATE__PLEFT, null, msgs);
      msgs = basicSetPleft(newPleft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BPREDICATE__PLEFT, newPleft, newPleft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getPright()
  {
    return pright;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPright(EObject newPright, NotificationChain msgs)
  {
    EObject oldPright = pright;
    pright = newPright;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BPREDICATE__PRIGHT, oldPright, newPright);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPright(EObject newPright)
  {
    if (newPright != pright)
    {
      NotificationChain msgs = null;
      if (pright != null)
        msgs = ((InternalEObject)pright).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BPREDICATE__PRIGHT, null, msgs);
      if (newPright != null)
        msgs = ((InternalEObject)newPright).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.BPREDICATE__PRIGHT, null, msgs);
      msgs = basicSetPright(newPright, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.BPREDICATE__PRIGHT, newPright, newPright));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BPREDICATE__PLEFT:
        return basicSetPleft(null, msgs);
      case SecureUML2JavaPackage.BPREDICATE__PRIGHT:
        return basicSetPright(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BPREDICATE__PLEFT:
        return getPleft();
      case SecureUML2JavaPackage.BPREDICATE__PRIGHT:
        return getPright();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BPREDICATE__PLEFT:
        setPleft((EObject)newValue);
        return;
      case SecureUML2JavaPackage.BPREDICATE__PRIGHT:
        setPright((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BPREDICATE__PLEFT:
        setPleft((EObject)null);
        return;
      case SecureUML2JavaPackage.BPREDICATE__PRIGHT:
        setPright((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.BPREDICATE__PLEFT:
        return pleft != null;
      case SecureUML2JavaPackage.BPREDICATE__PRIGHT:
        return pright != null;
    }
    return super.eIsSet(featureID);
  }

} //BPredicateImpl
