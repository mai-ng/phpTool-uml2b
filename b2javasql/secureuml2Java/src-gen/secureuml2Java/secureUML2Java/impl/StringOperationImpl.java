/**
 * generated by Xtext 2.10.0
 */
package secureuml2Java.secureUML2Java.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import secureuml2Java.secureUML2Java.BParameter;
import secureuml2Java.secureUML2Java.BPredicate;
import secureuml2Java.secureUML2Java.BSubstitution;
import secureuml2Java.secureUML2Java.SecureUML2JavaPackage;
import secureuml2Java.secureUML2Java.StringOperation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>String Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getRes1 <em>Res1</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getOp_name <em>Op name</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getPList <em>PList</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getParams <em>Params</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getPres1 <em>Pres1</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getPres2 <em>Pres2</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getSubif <em>Subif</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getSubelse2 <em>Subelse2</em>}</li>
 *   <li>{@link secureuml2Java.secureUML2Java.impl.StringOperationImpl#getSubelse1 <em>Subelse1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StringOperationImpl extends MinimalEObjectImpl.Container implements StringOperation
{
  /**
   * The default value of the '{@link #getRes1() <em>Res1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRes1()
   * @generated
   * @ordered
   */
  protected static final String RES1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRes1() <em>Res1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRes1()
   * @generated
   * @ordered
   */
  protected String res1 = RES1_EDEFAULT;

  /**
   * The default value of the '{@link #getOp_name() <em>Op name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp_name()
   * @generated
   * @ordered
   */
  protected static final String OP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp_name() <em>Op name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp_name()
   * @generated
   * @ordered
   */
  protected String op_name = OP_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getPList() <em>PList</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPList()
   * @generated
   * @ordered
   */
  protected EList<String> pList;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<BParameter> params;

  /**
   * The cached value of the '{@link #getPres1() <em>Pres1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPres1()
   * @generated
   * @ordered
   */
  protected EList<BPredicate> pres1;

  /**
   * The cached value of the '{@link #getPres2() <em>Pres2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPres2()
   * @generated
   * @ordered
   */
  protected EList<BPredicate> pres2;

  /**
   * The cached value of the '{@link #getSubif() <em>Subif</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubif()
   * @generated
   * @ordered
   */
  protected BSubstitution subif;

  /**
   * The cached value of the '{@link #getSubelse2() <em>Subelse2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubelse2()
   * @generated
   * @ordered
   */
  protected BSubstitution subelse2;

  /**
   * The cached value of the '{@link #getSubelse1() <em>Subelse1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubelse1()
   * @generated
   * @ordered
   */
  protected BSubstitution subelse1;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StringOperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2JavaPackage.Literals.STRING_OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRes1()
  {
    return res1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRes1(String newRes1)
  {
    String oldRes1 = res1;
    res1 = newRes1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__RES1, oldRes1, res1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp_name()
  {
    return op_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp_name(String newOp_name)
  {
    String oldOp_name = op_name;
    op_name = newOp_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__OP_NAME, oldOp_name, op_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getPList()
  {
    if (pList == null)
    {
      pList = new EDataTypeEList<String>(String.class, this, SecureUML2JavaPackage.STRING_OPERATION__PLIST);
    }
    return pList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<BParameter> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<BParameter>(BParameter.class, this, SecureUML2JavaPackage.STRING_OPERATION__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<BPredicate> getPres1()
  {
    if (pres1 == null)
    {
      pres1 = new EObjectContainmentEList<BPredicate>(BPredicate.class, this, SecureUML2JavaPackage.STRING_OPERATION__PRES1);
    }
    return pres1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<BPredicate> getPres2()
  {
    if (pres2 == null)
    {
      pres2 = new EObjectContainmentEList<BPredicate>(BPredicate.class, this, SecureUML2JavaPackage.STRING_OPERATION__PRES2);
    }
    return pres2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubstitution getSubif()
  {
    return subif;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubif(BSubstitution newSubif, NotificationChain msgs)
  {
    BSubstitution oldSubif = subif;
    subif = newSubif;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBIF, oldSubif, newSubif);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubif(BSubstitution newSubif)
  {
    if (newSubif != subif)
    {
      NotificationChain msgs = null;
      if (subif != null)
        msgs = ((InternalEObject)subif).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBIF, null, msgs);
      if (newSubif != null)
        msgs = ((InternalEObject)newSubif).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBIF, null, msgs);
      msgs = basicSetSubif(newSubif, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBIF, newSubif, newSubif));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubstitution getSubelse2()
  {
    return subelse2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubelse2(BSubstitution newSubelse2, NotificationChain msgs)
  {
    BSubstitution oldSubelse2 = subelse2;
    subelse2 = newSubelse2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2, oldSubelse2, newSubelse2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubelse2(BSubstitution newSubelse2)
  {
    if (newSubelse2 != subelse2)
    {
      NotificationChain msgs = null;
      if (subelse2 != null)
        msgs = ((InternalEObject)subelse2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2, null, msgs);
      if (newSubelse2 != null)
        msgs = ((InternalEObject)newSubelse2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2, null, msgs);
      msgs = basicSetSubelse2(newSubelse2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2, newSubelse2, newSubelse2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubstitution getSubelse1()
  {
    return subelse1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubelse1(BSubstitution newSubelse1, NotificationChain msgs)
  {
    BSubstitution oldSubelse1 = subelse1;
    subelse1 = newSubelse1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1, oldSubelse1, newSubelse1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubelse1(BSubstitution newSubelse1)
  {
    if (newSubelse1 != subelse1)
    {
      NotificationChain msgs = null;
      if (subelse1 != null)
        msgs = ((InternalEObject)subelse1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1, null, msgs);
      if (newSubelse1 != null)
        msgs = ((InternalEObject)newSubelse1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1, null, msgs);
      msgs = basicSetSubelse1(newSubelse1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1, newSubelse1, newSubelse1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.STRING_OPERATION__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
      case SecureUML2JavaPackage.STRING_OPERATION__PRES1:
        return ((InternalEList<?>)getPres1()).basicRemove(otherEnd, msgs);
      case SecureUML2JavaPackage.STRING_OPERATION__PRES2:
        return ((InternalEList<?>)getPres2()).basicRemove(otherEnd, msgs);
      case SecureUML2JavaPackage.STRING_OPERATION__SUBIF:
        return basicSetSubif(null, msgs);
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2:
        return basicSetSubelse2(null, msgs);
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1:
        return basicSetSubelse1(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.STRING_OPERATION__RES1:
        return getRes1();
      case SecureUML2JavaPackage.STRING_OPERATION__OP_NAME:
        return getOp_name();
      case SecureUML2JavaPackage.STRING_OPERATION__PLIST:
        return getPList();
      case SecureUML2JavaPackage.STRING_OPERATION__PARAMS:
        return getParams();
      case SecureUML2JavaPackage.STRING_OPERATION__PRES1:
        return getPres1();
      case SecureUML2JavaPackage.STRING_OPERATION__PRES2:
        return getPres2();
      case SecureUML2JavaPackage.STRING_OPERATION__SUBIF:
        return getSubif();
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2:
        return getSubelse2();
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1:
        return getSubelse1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.STRING_OPERATION__RES1:
        setRes1((String)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__OP_NAME:
        setOp_name((String)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PLIST:
        getPList().clear();
        getPList().addAll((Collection<? extends String>)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends BParameter>)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PRES1:
        getPres1().clear();
        getPres1().addAll((Collection<? extends BPredicate>)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PRES2:
        getPres2().clear();
        getPres2().addAll((Collection<? extends BPredicate>)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBIF:
        setSubif((BSubstitution)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2:
        setSubelse2((BSubstitution)newValue);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1:
        setSubelse1((BSubstitution)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.STRING_OPERATION__RES1:
        setRes1(RES1_EDEFAULT);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__OP_NAME:
        setOp_name(OP_NAME_EDEFAULT);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PLIST:
        getPList().clear();
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PARAMS:
        getParams().clear();
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PRES1:
        getPres1().clear();
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__PRES2:
        getPres2().clear();
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBIF:
        setSubif((BSubstitution)null);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2:
        setSubelse2((BSubstitution)null);
        return;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1:
        setSubelse1((BSubstitution)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2JavaPackage.STRING_OPERATION__RES1:
        return RES1_EDEFAULT == null ? res1 != null : !RES1_EDEFAULT.equals(res1);
      case SecureUML2JavaPackage.STRING_OPERATION__OP_NAME:
        return OP_NAME_EDEFAULT == null ? op_name != null : !OP_NAME_EDEFAULT.equals(op_name);
      case SecureUML2JavaPackage.STRING_OPERATION__PLIST:
        return pList != null && !pList.isEmpty();
      case SecureUML2JavaPackage.STRING_OPERATION__PARAMS:
        return params != null && !params.isEmpty();
      case SecureUML2JavaPackage.STRING_OPERATION__PRES1:
        return pres1 != null && !pres1.isEmpty();
      case SecureUML2JavaPackage.STRING_OPERATION__PRES2:
        return pres2 != null && !pres2.isEmpty();
      case SecureUML2JavaPackage.STRING_OPERATION__SUBIF:
        return subif != null;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE2:
        return subelse2 != null;
      case SecureUML2JavaPackage.STRING_OPERATION__SUBELSE1:
        return subelse1 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (res1: ");
    result.append(res1);
    result.append(", op_name: ");
    result.append(op_name);
    result.append(", pList: ");
    result.append(pList);
    result.append(')');
    return result.toString();
  }

} //StringOperationImpl
