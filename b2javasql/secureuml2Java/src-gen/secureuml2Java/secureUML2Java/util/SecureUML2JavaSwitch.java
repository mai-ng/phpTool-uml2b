/**
 * generated by Xtext 2.10.0
 */
package secureuml2Java.secureUML2Java.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import secureuml2Java.secureUML2Java.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see secureuml2Java.secureUML2Java.SecureUML2JavaPackage
 * @generated
 */
public class SecureUML2JavaSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static SecureUML2JavaPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SecureUML2JavaSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = SecureUML2JavaPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case SecureUML2JavaPackage.SECURE_UML2_JAVA:
      {
        SecureUML2Java secureUML2Java = (SecureUML2Java)theEObject;
        T result = caseSecureUML2Java(secureUML2Java);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BMACHINE:
      {
        BMachine bMachine = (BMachine)theEObject;
        T result = caseBMachine(bMachine);
        if (result == null) result = caseSecureUML2Java(bMachine);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.VOID_OPERATION:
      {
        VoidOperation voidOperation = (VoidOperation)theEObject;
        T result = caseVoidOperation(voidOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.STRING_OPERATION:
      {
        StringOperation stringOperation = (StringOperation)theEObject;
        T result = caseStringOperation(stringOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BSUBSTITUTION:
      {
        BSubstitution bSubstitution = (BSubstitution)theEObject;
        T result = caseBSubstitution(bSubstitution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BPREDICATE:
      {
        BPredicate bPredicate = (BPredicate)theEObject;
        T result = caseBPredicate(bPredicate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BDOM:
      {
        BDom bDom = (BDom)theEObject;
        T result = caseBDom(bDom);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BPARAMETER:
      {
        BParameter bParameter = (BParameter)theEObject;
        T result = caseBParameter(bParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BTYPE:
      {
        BType bType = (BType)theEObject;
        T result = caseBType(bType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BINIT:
      {
        BInit bInit = (BInit)theEObject;
        T result = caseBInit(bInit);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BTUPLE:
      {
        BTuple bTuple = (BTuple)theEObject;
        T result = caseBTuple(bTuple);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BOPERATION_CALL:
      {
        BOperationCall bOperationCall = (BOperationCall)theEObject;
        T result = caseBOperationCall(bOperationCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BINVARIANT:
      {
        BInvariant bInvariant = (BInvariant)theEObject;
        T result = caseBInvariant(bInvariant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BFUNCTION:
      {
        BFunction bFunction = (BFunction)theEObject;
        T result = caseBFunction(bFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BVARIABLE:
      {
        BVariable bVariable = (BVariable)theEObject;
        T result = caseBVariable(bVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case SecureUML2JavaPackage.BSEES:
      {
        BSees bSees = (BSees)theEObject;
        T result = caseBSees(bSees);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Secure UML2 Java</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Secure UML2 Java</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSecureUML2Java(SecureUML2Java object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BMachine</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BMachine</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBMachine(BMachine object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Void Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Void Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoidOperation(VoidOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringOperation(StringOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSubstitution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSubstitution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSubstitution(BSubstitution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPredicate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPredicate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPredicate(BPredicate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BDom</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BDom</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBDom(BDom object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BParameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BParameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBParameter(BParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBType(BType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BInit</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BInit</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBInit(BInit object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BTuple</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BTuple</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBTuple(BTuple object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BOperation Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BOperation Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBOperationCall(BOperationCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BInvariant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BInvariant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBInvariant(BInvariant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BFunction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BFunction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBFunction(BFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BVariable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BVariable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBVariable(BVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSees</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSees</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSees(BSees object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //SecureUML2JavaSwitch
