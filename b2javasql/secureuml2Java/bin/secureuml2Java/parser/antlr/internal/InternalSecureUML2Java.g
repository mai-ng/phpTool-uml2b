/*
 * generated by Xtext 2.10.0
 */
grammar InternalSecureUML2Java;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package secureuml2Java.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package secureuml2Java.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import secureuml2Java.services.SecureUML2JavaGrammarAccess;

}

@parser::members {

 	private SecureUML2JavaGrammarAccess grammarAccess;

    public InternalSecureUML2JavaParser(TokenStream input, SecureUML2JavaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SecureUML2Java";
   	}

   	@Override
   	protected SecureUML2JavaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSecureUML2Java
entryRuleSecureUML2Java returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecureUML2JavaRule()); }
	iv_ruleSecureUML2Java=ruleSecureUML2Java
	{ $current=$iv_ruleSecureUML2Java.current; }
	EOF;

// Rule SecureUML2Java
ruleSecureUML2Java returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSecureUML2JavaAccess().getBMachineParserRuleCall());
	}
	this_BMachine_0=ruleBMachine
	{
		$current = $this_BMachine_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBMachine
entryRuleBMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBMachineRule()); }
	iv_ruleBMachine=ruleBMachine
	{ $current=$iv_ruleBMachine.current; }
	EOF;

// Rule BMachine
ruleBMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MACHINE'
		{
			newLeafNode(otherlv_0, grammarAccess.getBMachineAccess().getMACHINEKeyword_0());
		}
		(
			(
				lv_m_name_1_0=RULE_ID
				{
					newLeafNode(lv_m_name_1_0, grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBMachineRule());
					}
					setWithLastConsumed(
						$current,
						"m_name",
						lv_m_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='SEES'
		{
			newLeafNode(otherlv_2, grammarAccess.getBMachineAccess().getSEESKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_3_0());
				}
				lv_sees_3_0=ruleBSees
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"sees",
						lv_sees_3_0,
						"secureuml2Java.SecureUML2Java.BSees");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBMachineAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_4_1_0());
					}
					lv_sees_5_0=ruleBSees
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"sees",
							lv_sees_5_0,
							"secureuml2Java.SecureUML2Java.BSees");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='VARIABLES'
		{
			newLeafNode(otherlv_6, grammarAccess.getBMachineAccess().getVARIABLESKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_6_0());
				}
				lv_vars_7_0=ruleBVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"vars",
						lv_vars_7_0,
						"secureuml2Java.SecureUML2Java.BVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getBMachineAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_7_1_0());
					}
					lv_vars_9_0=ruleBVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"vars",
							lv_vars_9_0,
							"secureuml2Java.SecureUML2Java.BVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='INVARIANT'
		{
			newLeafNode(otherlv_10, grammarAccess.getBMachineAccess().getINVARIANTKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_9_0());
				}
				lv_invs_11_0=ruleBInvariant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"invs",
						lv_invs_11_0,
						"secureuml2Java.SecureUML2Java.BInvariant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12='&'
			{
				newLeafNode(otherlv_12, grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_10_1_0());
					}
					lv_invs_13_0=ruleBInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"invs",
							lv_invs_13_0,
							"secureuml2Java.SecureUML2Java.BInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='INITIALISATION'
		{
			newLeafNode(otherlv_14, grammarAccess.getBMachineAccess().getINITIALISATIONKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_12_0());
				}
				lv_inits_15_0=ruleBInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"inits",
						lv_inits_15_0,
						"secureuml2Java.SecureUML2Java.BInit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16='||'
			{
				newLeafNode(otherlv_16, grammarAccess.getBMachineAccess().getVerticalLineVerticalLineKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_13_1_0());
					}
					lv_inits_17_0=ruleBInit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"inits",
							lv_inits_17_0,
							"secureuml2Java.SecureUML2Java.BInit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='OPERATIONS'
		{
			newLeafNode(otherlv_18, grammarAccess.getBMachineAccess().getOPERATIONSKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_15_0());
				}
				lv_vops_19_0=ruleVoidOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"vops",
						lv_vops_19_0,
						"secureuml2Java.SecureUML2Java.VoidOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_20=';'
			{
				newLeafNode(otherlv_20, grammarAccess.getBMachineAccess().getSemicolonKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_16_1_0());
					}
					lv_vops_21_0=ruleVoidOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"vops",
							lv_vops_21_0,
							"secureuml2Java.SecureUML2Java.VoidOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_22=';'
		{
			newLeafNode(otherlv_22, grammarAccess.getBMachineAccess().getSemicolonKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_18_0());
				}
				lv_sops_23_0=ruleStringOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"sops",
						lv_sops_23_0,
						"secureuml2Java.SecureUML2Java.StringOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_24=';'
			{
				newLeafNode(otherlv_24, grammarAccess.getBMachineAccess().getSemicolonKeyword_19_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_19_1_0());
					}
					lv_sops_25_0=ruleStringOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"sops",
							lv_sops_25_0,
							"secureuml2Java.SecureUML2Java.StringOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_26='END'
		{
			newLeafNode(otherlv_26, grammarAccess.getBMachineAccess().getENDKeyword_20());
		}
	)
;

// Entry rule entryRuleVoidOperation
entryRuleVoidOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoidOperationRule()); }
	iv_ruleVoidOperation=ruleVoidOperation
	{ $current=$iv_ruleVoidOperation.current; }
	EOF;

// Rule VoidOperation
ruleVoidOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_name_0_0=RULE_ID
				{
					newLeafNode(lv_op_name_0_0, grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVoidOperationRule());
					}
					setWithLastConsumed(
						$current,
						"op_name",
						lv_op_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_pList_2_0=RULE_ID
					{
						newLeafNode(lv_pList_2_0, grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVoidOperationRule());
						}
						addWithLastConsumed(
							$current,
							"pList",
							lv_pList_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						lv_pList_4_0=RULE_ID
						{
							newLeafNode(lv_pList_4_0, grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVoidOperationRule());
							}
							addWithLastConsumed(
								$current,
								"pList",
								lv_pList_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4());
		}
		otherlv_7='PRE'
		{
			newLeafNode(otherlv_7, grammarAccess.getVoidOperationAccess().getPREKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_0_0());
					}
					lv_params_8_0=ruleBParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
						}
						add(
							$current,
							"params",
							lv_params_8_0,
							"secureuml2Java.SecureUML2Java.BParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9='&'
				{
					newLeafNode(otherlv_9, grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_1_1_0());
						}
						lv_params_10_0=ruleBParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
							}
							add(
								$current,
								"params",
								lv_params_10_0,
								"secureuml2Java.SecureUML2Java.BParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_11='&'
			{
				newLeafNode(otherlv_11, grammarAccess.getVoidOperationAccess().getAmpersandKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVoidOperationAccess().getPreBPredicateParserRuleCall_7_1_0());
					}
					lv_pre_12_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
						}
						add(
							$current,
							"pre",
							lv_pre_12_0,
							"secureuml2Java.SecureUML2Java.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='THEN'
		{
			newLeafNode(otherlv_13, grammarAccess.getVoidOperationAccess().getTHENKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_9_0());
				}
				lv_subs_14_0=ruleBSubstitution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
					}
					add(
						$current,
						"subs",
						lv_subs_14_0,
						"secureuml2Java.SecureUML2Java.BSubstitution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15='||'
			{
				newLeafNode(otherlv_15, grammarAccess.getVoidOperationAccess().getVerticalLineVerticalLineKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_10_1_0());
					}
					lv_subs_16_0=ruleBSubstitution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
						}
						add(
							$current,
							"subs",
							lv_subs_16_0,
							"secureuml2Java.SecureUML2Java.BSubstitution");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17='END'
		{
			newLeafNode(otherlv_17, grammarAccess.getVoidOperationAccess().getENDKeyword_11());
		}
	)
;

// Entry rule entryRuleStringOperation
entryRuleStringOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOperationRule()); }
	iv_ruleStringOperation=ruleStringOperation
	{ $current=$iv_ruleStringOperation.current; }
	EOF;

// Rule StringOperation
ruleStringOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_res1_0_0=RULE_ID
				{
					newLeafNode(lv_res1_0_0, grammarAccess.getStringOperationAccess().getRes1IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOperationRule());
					}
					setWithLastConsumed(
						$current,
						"res1",
						lv_res1_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='<--'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1());
		}
		(
			(
				lv_op_name_2_0=RULE_ID
				{
					newLeafNode(lv_op_name_2_0, grammarAccess.getStringOperationAccess().getOp_nameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOperationRule());
					}
					setWithLastConsumed(
						$current,
						"op_name",
						lv_op_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getStringOperationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					lv_pList_4_0=RULE_ID
					{
						newLeafNode(lv_pList_4_0, grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStringOperationRule());
						}
						addWithLastConsumed(
							$current,
							"pList",
							lv_pList_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getStringOperationAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						lv_pList_6_0=RULE_ID
						{
							newLeafNode(lv_pList_6_0, grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStringOperationRule());
							}
							addWithLastConsumed(
								$current,
								"pList",
								lv_pList_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getStringOperationAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getStringOperationAccess().getEqualsSignKeyword_6());
		}
		otherlv_9='PRE'
		{
			newLeafNode(otherlv_9, grammarAccess.getStringOperationAccess().getPREKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_0_0());
					}
					lv_params_10_0=ruleBParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringOperationRule());
						}
						add(
							$current,
							"params",
							lv_params_10_0,
							"secureuml2Java.SecureUML2Java.BParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11='&'
				{
					newLeafNode(otherlv_11, grammarAccess.getStringOperationAccess().getAmpersandKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_1_1_0());
						}
						lv_params_12_0=ruleBParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringOperationRule());
							}
							add(
								$current,
								"params",
								lv_params_12_0,
								"secureuml2Java.SecureUML2Java.BParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_13='THEN'
		{
			newLeafNode(otherlv_13, grammarAccess.getStringOperationAccess().getTHENKeyword_9());
		}
		otherlv_14='IF'
		{
			newLeafNode(otherlv_14, grammarAccess.getStringOperationAccess().getIFKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_11_0());
				}
				lv_pres1_15_0=ruleBPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					add(
						$current,
						"pres1",
						lv_pres1_15_0,
						"secureuml2Java.SecureUML2Java.BPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16='&'
			{
				newLeafNode(otherlv_16, grammarAccess.getStringOperationAccess().getAmpersandKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_12_1_0());
					}
					lv_pres1_17_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringOperationRule());
						}
						add(
							$current,
							"pres1",
							lv_pres1_17_0,
							"secureuml2Java.SecureUML2Java.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='THEN'
		{
			newLeafNode(otherlv_18, grammarAccess.getStringOperationAccess().getTHENKeyword_13());
		}
		otherlv_19='IF'
		{
			newLeafNode(otherlv_19, grammarAccess.getStringOperationAccess().getIFKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_15_0());
				}
				lv_pres2_20_0=ruleBPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					add(
						$current,
						"pres2",
						lv_pres2_20_0,
						"secureuml2Java.SecureUML2Java.BPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_21='&'
			{
				newLeafNode(otherlv_21, grammarAccess.getStringOperationAccess().getAmpersandKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_16_1_0());
					}
					lv_pres2_22_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringOperationRule());
						}
						add(
							$current,
							"pres2",
							lv_pres2_22_0,
							"secureuml2Java.SecureUML2Java.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_23='THEN'
		{
			newLeafNode(otherlv_23, grammarAccess.getStringOperationAccess().getTHENKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getSubifBSubstitutionParserRuleCall_18_0());
				}
				lv_subif_24_0=ruleBSubstitution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					set(
						$current,
						"subif",
						lv_subif_24_0,
						"secureuml2Java.SecureUML2Java.BSubstitution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_25='ELSE'
		{
			newLeafNode(otherlv_25, grammarAccess.getStringOperationAccess().getELSEKeyword_19());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getSubelse2BSubstitutionParserRuleCall_20_0());
				}
				lv_subelse2_26_0=ruleBSubstitution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					set(
						$current,
						"subelse2",
						lv_subelse2_26_0,
						"secureuml2Java.SecureUML2Java.BSubstitution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_27='END'
		{
			newLeafNode(otherlv_27, grammarAccess.getStringOperationAccess().getENDKeyword_21());
		}
		otherlv_28='ELSE'
		{
			newLeafNode(otherlv_28, grammarAccess.getStringOperationAccess().getELSEKeyword_22());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getSubelse1BSubstitutionParserRuleCall_23_0());
				}
				lv_subelse1_29_0=ruleBSubstitution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					set(
						$current,
						"subelse1",
						lv_subelse1_29_0,
						"secureuml2Java.SecureUML2Java.BSubstitution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_30='END'
		{
			newLeafNode(otherlv_30, grammarAccess.getStringOperationAccess().getENDKeyword_24());
		}
		otherlv_31='END'
		{
			newLeafNode(otherlv_31, grammarAccess.getStringOperationAccess().getENDKeyword_25());
		}
	)
;

// Entry rule entryRuleBSubstitution
entryRuleBSubstitution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSubstitutionRule()); }
	iv_ruleBSubstitution=ruleBSubstitution
	{ $current=$iv_ruleBSubstitution.current; }
	EOF;

// Rule BSubstitution
ruleBSubstitution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubstitutionAccess().getSleftBTypeParserRuleCall_0_0_0());
					}
					lv_sleft_0_1=ruleBType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubstitutionRule());
						}
						set(
							$current,
							"sleft",
							lv_sleft_0_1,
							"secureuml2Java.SecureUML2Java.BType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBSubstitutionAccess().getSleftBOperationCallParserRuleCall_0_0_1());
					}
					lv_sleft_0_2=ruleBOperationCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubstitutionRule());
						}
						set(
							$current,
							"sleft",
							lv_sleft_0_2,
							"secureuml2Java.SecureUML2Java.BOperationCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				lv_sright_2_0=RULE_ID
				{
					newLeafNode(lv_sright_2_0, grammarAccess.getBSubstitutionAccess().getSrightIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSubstitutionRule());
					}
					setWithLastConsumed(
						$current,
						"sright",
						lv_sright_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBPredicate
entryRuleBPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBPredicateRule()); }
	iv_ruleBPredicate=ruleBPredicate
	{ $current=$iv_ruleBPredicate.current; }
	EOF;

// Rule BPredicate
ruleBPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPleftBTypeParserRuleCall_0_0_0());
					}
					lv_pleft_0_1=ruleBType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"pleft",
							lv_pleft_0_1,
							"secureuml2Java.SecureUML2Java.BType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPleftBTupleParserRuleCall_0_0_1());
					}
					lv_pleft_0_2=ruleBTuple
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"pleft",
							lv_pleft_0_2,
							"secureuml2Java.SecureUML2Java.BTuple");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBPredicateAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPrightBDomParserRuleCall_2_0_0());
					}
					lv_pright_2_1=ruleBDom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"pright",
							lv_pright_2_1,
							"secureuml2Java.SecureUML2Java.BDom");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPrightBTypeParserRuleCall_2_0_1());
					}
					lv_pright_2_2=ruleBType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"pright",
							lv_pright_2_2,
							"secureuml2Java.SecureUML2Java.BType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBDom
entryRuleBDom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBDomRule()); }
	iv_ruleBDom=ruleBDom
	{ $current=$iv_ruleBDom.current; }
	EOF;

// Rule BDom
ruleBDom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dom'
		{
			newLeafNode(otherlv_0, grammarAccess.getBDomAccess().getDomKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBDomAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBDomAccess().getObjBTypeParserRuleCall_2_0());
				}
				lv_obj_2_0=ruleBType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBDomRule());
					}
					set(
						$current,
						"obj",
						lv_obj_2_0,
						"secureuml2Java.SecureUML2Java.BType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBDomAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleBParameter
entryRuleBParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBParameterRule()); }
	iv_ruleBParameter=ruleBParameter
	{ $current=$iv_ruleBParameter.current; }
	EOF;

// Rule BParameter
ruleBParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_p_name_0_0=RULE_ID
				{
					newLeafNode(lv_p_name_0_0, grammarAccess.getBParameterAccess().getP_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBParameterRule());
					}
					setWithLastConsumed(
						$current,
						"p_name",
						lv_p_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBParameterAccess().getTypeBTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleBType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"secureuml2Java.SecureUML2Java.BType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBType
entryRuleBType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTypeRule()); }
	iv_ruleBType=ruleBType
	{ $current=$iv_ruleBType.current; }
	EOF;

// Rule BType
ruleBType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_type_name_0_0=RULE_ID
			{
				newLeafNode(lv_type_name_0_0, grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBTypeRule());
				}
				setWithLastConsumed(
					$current,
					"type_name",
					lv_type_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBInit
entryRuleBInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBInitRule()); }
	iv_ruleBInit=ruleBInit
	{ $current=$iv_ruleBInit.current; }
	EOF;

// Rule BInit
ruleBInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_var_0_0=RULE_ID
				{
					newLeafNode(lv_var_0_0, grammarAccess.getBInitAccess().getVarIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBInitRule());
					}
					setWithLastConsumed(
						$current,
						"var",
						lv_var_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getBInitAccess().getColonEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBInitAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBInitAccess().getPairBTupleParserRuleCall_3_0());
				}
				lv_pair_3_0=ruleBTuple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBInitRule());
					}
					add(
						$current,
						"pair",
						lv_pair_3_0,
						"secureuml2Java.SecureUML2Java.BTuple");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBInitAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBTuple
entryRuleBTuple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTupleRule()); }
	iv_ruleBTuple=ruleBTuple
	{ $current=$iv_ruleBTuple.current; }
	EOF;

// Rule BTuple
ruleBTuple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBTupleAccess().getRanBTypeParserRuleCall_0_0_0());
					}
					lv_ran_0_1=ruleBType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBTupleRule());
						}
						set(
							$current,
							"ran",
							lv_ran_0_1,
							"secureuml2Java.SecureUML2Java.BType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBTupleAccess().getRanBOperationCallParserRuleCall_0_0_1());
					}
					lv_ran_0_2=ruleBOperationCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBTupleRule());
						}
						set(
							$current,
							"ran",
							lv_ran_0_2,
							"secureuml2Java.SecureUML2Java.BOperationCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1='|->'
		{
			newLeafNode(otherlv_1, grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				lv_dom_2_0=RULE_ID
				{
					newLeafNode(lv_dom_2_0, grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBTupleRule());
					}
					setWithLastConsumed(
						$current,
						"dom",
						lv_dom_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBOperationCall
entryRuleBOperationCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBOperationCallRule()); }
	iv_ruleBOperationCall=ruleBOperationCall
	{ $current=$iv_ruleBOperationCall.current; }
	EOF;

// Rule BOperationCall
ruleBOperationCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=RULE_ID
				{
					newLeafNode(lv_op_0_0, grammarAccess.getBOperationCallAccess().getOpIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBOperationCallRule());
					}
					setWithLastConsumed(
						$current,
						"op",
						lv_op_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBOperationCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_par_2_0=RULE_ID
				{
					newLeafNode(lv_par_2_0, grammarAccess.getBOperationCallAccess().getParIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBOperationCallRule());
					}
					setWithLastConsumed(
						$current,
						"par",
						lv_par_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBOperationCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleBInvariant
entryRuleBInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBInvariantRule()); }
	iv_ruleBInvariant=ruleBInvariant
	{ $current=$iv_ruleBInvariant.current; }
	EOF;

// Rule BInvariant
ruleBInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_var_0_0=RULE_ID
					{
						newLeafNode(lv_var_0_0, grammarAccess.getBInvariantAccess().getVarIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBInvariantRule());
						}
						setWithLastConsumed(
							$current,
							"var",
							lv_var_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getBInvariantAccess().getColonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBInvariantAccess().getVardifBFunctionParserRuleCall_0_2_0());
					}
					lv_vardif_2_0=ruleBFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBInvariantRule());
						}
						set(
							$current,
							"vardif",
							lv_vardif_2_0,
							"secureuml2Java.SecureUML2Java.BFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_dom_3_0=RULE_ID
					{
						newLeafNode(lv_dom_3_0, grammarAccess.getBInvariantAccess().getDomIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBInvariantRule());
						}
						setWithLastConsumed(
							$current,
							"dom",
							lv_dom_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_4='<:'
			{
				newLeafNode(otherlv_4, grammarAccess.getBInvariantAccess().getLessThanSignColonKeyword_1_1());
			}
			(
				(
					lv_ran_5_0=RULE_ID
					{
						newLeafNode(lv_ran_5_0, grammarAccess.getBInvariantAccess().getRanIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBInvariantRule());
						}
						setWithLastConsumed(
							$current,
							"ran",
							lv_ran_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBFunction
entryRuleBFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBFunctionRule()); }
	iv_ruleBFunction=ruleBFunction
	{ $current=$iv_ruleBFunction.current; }
	EOF;

// Rule BFunction
ruleBFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ran_0_0=RULE_ID
				{
					newLeafNode(lv_ran_0_0, grammarAccess.getBFunctionAccess().getRanIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"ran",
						lv_ran_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='-->'
			{
				newLeafNode(otherlv_1, grammarAccess.getBFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0());
			}
			    |
			otherlv_2='+->'
			{
				newLeafNode(otherlv_2, grammarAccess.getBFunctionAccess().getPlusSignHyphenMinusGreaterThanSignKeyword_1_1());
			}
			    |
			otherlv_3='<->'
			{
				newLeafNode(otherlv_3, grammarAccess.getBFunctionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_2());
			}
		)
		(
			(
				lv_dom_4_0=RULE_ID
				{
					newLeafNode(lv_dom_4_0, grammarAccess.getBFunctionAccess().getDomIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"dom",
						lv_dom_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBVariable
entryRuleBVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBVariableRule()); }
	iv_ruleBVariable=ruleBVariable
	{ $current=$iv_ruleBVariable.current; }
	EOF;

// Rule BVariable
ruleBVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_var_name_0_0=RULE_ID
			{
				newLeafNode(lv_var_name_0_0, grammarAccess.getBVariableAccess().getVar_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBVariableRule());
				}
				setWithLastConsumed(
					$current,
					"var_name",
					lv_var_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBSees
entryRuleBSees returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSeesRule()); }
	iv_ruleBSees=ruleBSees
	{ $current=$iv_ruleBSees.current; }
	EOF;

// Rule BSees
ruleBSees returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_m_name_0_0=RULE_ID
			{
				newLeafNode(lv_m_name_0_0, grammarAccess.getBSeesAccess().getM_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBSeesRule());
				}
				setWithLastConsumed(
					$current,
					"m_name",
					lv_m_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
