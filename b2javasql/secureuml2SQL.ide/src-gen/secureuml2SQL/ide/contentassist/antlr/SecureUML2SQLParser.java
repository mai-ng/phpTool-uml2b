/*
 * generated by Xtext 2.10.0
 */
package secureuml2SQL.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import secureuml2SQL.ide.contentassist.antlr.internal.InternalSecureUML2SQLParser;
import secureuml2SQL.services.SecureUML2SQLGrammarAccess;

public class SecureUML2SQLParser extends AbstractContentAssistParser {

	@Inject
	private SecureUML2SQLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSecureUML2SQLParser createParser() {
		InternalSecureUML2SQLParser result = new InternalSecureUML2SQLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBMachineAccess().getGroup(), "rule__BMachine__Group__0");
					put(grammarAccess.getBMachineAccess().getGroup_4(), "rule__BMachine__Group_4__0");
					put(grammarAccess.getBMachineAccess().getGroup_7(), "rule__BMachine__Group_7__0");
					put(grammarAccess.getBMachineAccess().getGroup_10(), "rule__BMachine__Group_10__0");
					put(grammarAccess.getBPropertiesAccess().getGroup(), "rule__BProperties__Group__0");
					put(grammarAccess.getBPropertiesAccess().getGroup_4(), "rule__BProperties__Group_4__0");
					put(grammarAccess.getBTupleAccess().getGroup(), "rule__BTuple__Group__0");
					put(grammarAccess.getBESetAccess().getGroup(), "rule__BESet__Group__0");
					put(grammarAccess.getBESetAccess().getGroup_4(), "rule__BESet__Group_4__0");
					put(grammarAccess.getBMachineAccess().getM_nameAssignment_1(), "rule__BMachine__M_nameAssignment_1");
					put(grammarAccess.getBMachineAccess().getEsetsAssignment_3(), "rule__BMachine__EsetsAssignment_3");
					put(grammarAccess.getBMachineAccess().getEsetsAssignment_4_1(), "rule__BMachine__EsetsAssignment_4_1");
					put(grammarAccess.getBMachineAccess().getConsAssignment_6(), "rule__BMachine__ConsAssignment_6");
					put(grammarAccess.getBMachineAccess().getConsAssignment_7_1(), "rule__BMachine__ConsAssignment_7_1");
					put(grammarAccess.getBMachineAccess().getProsAssignment_9(), "rule__BMachine__ProsAssignment_9");
					put(grammarAccess.getBMachineAccess().getProsAssignment_10_1(), "rule__BMachine__ProsAssignment_10_1");
					put(grammarAccess.getBPropertiesAccess().getConsAssignment_0(), "rule__BProperties__ConsAssignment_0");
					put(grammarAccess.getBPropertiesAccess().getPropAssignment_2(), "rule__BProperties__PropAssignment_2");
					put(grammarAccess.getBPropertiesAccess().getPairsAssignment_3(), "rule__BProperties__PairsAssignment_3");
					put(grammarAccess.getBPropertiesAccess().getPairsAssignment_4_1(), "rule__BProperties__PairsAssignment_4_1");
					put(grammarAccess.getBTupleAccess().getRanAssignment_0(), "rule__BTuple__RanAssignment_0");
					put(grammarAccess.getBTupleAccess().getDomAssignment_2(), "rule__BTuple__DomAssignment_2");
					put(grammarAccess.getBSetAccess().getSet_nameAssignment(), "rule__BSet__Set_nameAssignment");
					put(grammarAccess.getBESetAccess().getSet_nameAssignment_0(), "rule__BESet__Set_nameAssignment_0");
					put(grammarAccess.getBESetAccess().getValuesAssignment_3(), "rule__BESet__ValuesAssignment_3");
					put(grammarAccess.getBESetAccess().getValuesAssignment_4_1(), "rule__BESet__ValuesAssignment_4_1");
					put(grammarAccess.getBSetValueAccess().getValue_nameAssignment(), "rule__BSetValue__Value_nameAssignment");
					put(grammarAccess.getBConstantAccess().getConstant_nameAssignment(), "rule__BConstant__Constant_nameAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalSecureUML2SQLParser typedParser = (InternalSecureUML2SQLParser) parser;
			typedParser.entryRuleSecureUML2SQL();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SecureUML2SQLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SecureUML2SQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
