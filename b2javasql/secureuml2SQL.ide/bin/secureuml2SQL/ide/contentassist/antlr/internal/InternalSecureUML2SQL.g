/*
 * generated by Xtext 2.10.0
 */
grammar InternalSecureUML2SQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package secureuml2SQL.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package secureuml2SQL.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import secureuml2SQL.services.SecureUML2SQLGrammarAccess;

}
@parser::members {
	private SecureUML2SQLGrammarAccess grammarAccess;

	public void setGrammarAccess(SecureUML2SQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSecureUML2SQL
entryRuleSecureUML2SQL
:
{ before(grammarAccess.getSecureUML2SQLRule()); }
	 ruleSecureUML2SQL
{ after(grammarAccess.getSecureUML2SQLRule()); } 
	 EOF 
;

// Rule SecureUML2SQL
ruleSecureUML2SQL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSecureUML2SQLAccess().getBMachineParserRuleCall()); }
		ruleBMachine
		{ after(grammarAccess.getSecureUML2SQLAccess().getBMachineParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBMachine
entryRuleBMachine
:
{ before(grammarAccess.getBMachineRule()); }
	 ruleBMachine
{ after(grammarAccess.getBMachineRule()); } 
	 EOF 
;

// Rule BMachine
ruleBMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBMachineAccess().getGroup()); }
		(rule__BMachine__Group__0)
		{ after(grammarAccess.getBMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBProperties
entryRuleBProperties
:
{ before(grammarAccess.getBPropertiesRule()); }
	 ruleBProperties
{ after(grammarAccess.getBPropertiesRule()); } 
	 EOF 
;

// Rule BProperties
ruleBProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBPropertiesAccess().getGroup()); }
		(rule__BProperties__Group__0)
		{ after(grammarAccess.getBPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBTuple
entryRuleBTuple
:
{ before(grammarAccess.getBTupleRule()); }
	 ruleBTuple
{ after(grammarAccess.getBTupleRule()); } 
	 EOF 
;

// Rule BTuple
ruleBTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTupleAccess().getGroup()); }
		(rule__BTuple__Group__0)
		{ after(grammarAccess.getBTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBESet
entryRuleBESet
:
{ before(grammarAccess.getBESetRule()); }
	 ruleBESet
{ after(grammarAccess.getBESetRule()); } 
	 EOF 
;

// Rule BESet
ruleBESet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBESetAccess().getGroup()); }
		(rule__BESet__Group__0)
		{ after(grammarAccess.getBESetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSetValue
entryRuleBSetValue
:
{ before(grammarAccess.getBSetValueRule()); }
	 ruleBSetValue
{ after(grammarAccess.getBSetValueRule()); } 
	 EOF 
;

// Rule BSetValue
ruleBSetValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSetValueAccess().getValue_nameAssignment()); }
		(rule__BSetValue__Value_nameAssignment)
		{ after(grammarAccess.getBSetValueAccess().getValue_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBConstant
entryRuleBConstant
:
{ before(grammarAccess.getBConstantRule()); }
	 ruleBConstant
{ after(grammarAccess.getBConstantRule()); } 
	 EOF 
;

// Rule BConstant
ruleBConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBConstantAccess().getConstant_nameAssignment()); }
		(rule__BConstant__Constant_nameAssignment)
		{ after(grammarAccess.getBConstantAccess().getConstant_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__0__Impl
	rule__BMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getMACHINEKeyword_0()); }
	'MACHINE'
	{ after(grammarAccess.getBMachineAccess().getMACHINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__1__Impl
	rule__BMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getM_nameAssignment_1()); }
	(rule__BMachine__M_nameAssignment_1)
	{ after(grammarAccess.getBMachineAccess().getM_nameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__2__Impl
	rule__BMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSETSKeyword_2()); }
	'SETS'
	{ after(grammarAccess.getBMachineAccess().getSETSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__3__Impl
	rule__BMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getEsetsAssignment_3()); }
	(rule__BMachine__EsetsAssignment_3)
	{ after(grammarAccess.getBMachineAccess().getEsetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__4__Impl
	rule__BMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_4()); }
	(rule__BMachine__Group_4__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__5__Impl
	rule__BMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getCONSTANTSKeyword_5()); }
	'CONSTANTS'
	{ after(grammarAccess.getBMachineAccess().getCONSTANTSKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__6__Impl
	rule__BMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getConsAssignment_6()); }
	(rule__BMachine__ConsAssignment_6)
	{ after(grammarAccess.getBMachineAccess().getConsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__7__Impl
	rule__BMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_7()); }
	(rule__BMachine__Group_7__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__8__Impl
	rule__BMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getPROPERTIESKeyword_8()); }
	'PROPERTIES'
	{ after(grammarAccess.getBMachineAccess().getPROPERTIESKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__9__Impl
	rule__BMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getProsAssignment_9()); }
	(rule__BMachine__ProsAssignment_9)
	{ after(grammarAccess.getBMachineAccess().getProsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__10__Impl
	rule__BMachine__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_10()); }
	(rule__BMachine__Group_10__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getENDKeyword_11()); }
	'END'
	{ after(grammarAccess.getBMachineAccess().getENDKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_4__0__Impl
	rule__BMachine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSemicolonKeyword_4_0()); }
	';'
	{ after(grammarAccess.getBMachineAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getEsetsAssignment_4_1()); }
	(rule__BMachine__EsetsAssignment_4_1)
	{ after(grammarAccess.getBMachineAccess().getEsetsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_7__0__Impl
	rule__BMachine__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getBMachineAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getConsAssignment_7_1()); }
	(rule__BMachine__ConsAssignment_7_1)
	{ after(grammarAccess.getBMachineAccess().getConsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_10__0__Impl
	rule__BMachine__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0()); }
	'&'
	{ after(grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getProsAssignment_10_1()); }
	(rule__BMachine__ProsAssignment_10_1)
	{ after(grammarAccess.getBMachineAccess().getProsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__0__Impl
	rule__BProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getConsAssignment_0()); }
	(rule__BProperties__ConsAssignment_0)
	{ after(grammarAccess.getBPropertiesAccess().getConsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__1__Impl
	rule__BProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBPropertiesAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__2__Impl
	rule__BProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getPropAssignment_2()); }
	(rule__BProperties__PropAssignment_2)
	{ after(grammarAccess.getBPropertiesAccess().getPropAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__3__Impl
	rule__BProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getPairsAssignment_3()); }
	(rule__BProperties__PairsAssignment_3)
	{ after(grammarAccess.getBPropertiesAccess().getPairsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__4__Impl
	rule__BProperties__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getGroup_4()); }
	(rule__BProperties__Group_4__0)*
	{ after(grammarAccess.getBPropertiesAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getBPropertiesAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BProperties__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group_4__0__Impl
	rule__BProperties__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getBPropertiesAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BProperties__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPropertiesAccess().getPairsAssignment_4_1()); }
	(rule__BProperties__PairsAssignment_4_1)
	{ after(grammarAccess.getBPropertiesAccess().getPairsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BTuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__0__Impl
	rule__BTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getRanAssignment_0()); }
	(rule__BTuple__RanAssignment_0)
	{ after(grammarAccess.getBTupleAccess().getRanAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__1__Impl
	rule__BTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1()); }
	'|->'
	{ after(grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getDomAssignment_2()); }
	(rule__BTuple__DomAssignment_2)
	{ after(grammarAccess.getBTupleAccess().getDomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BESet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__0__Impl
	rule__BESet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getSet_nameAssignment_0()); }
	(rule__BESet__Set_nameAssignment_0)
	{ after(grammarAccess.getBESetAccess().getSet_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__1__Impl
	rule__BESet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBESetAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__2__Impl
	rule__BESet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBESetAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__3__Impl
	rule__BESet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getValuesAssignment_3()); }
	(rule__BESet__ValuesAssignment_3)
	{ after(grammarAccess.getBESetAccess().getValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__4__Impl
	rule__BESet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getGroup_4()); }
	(rule__BESet__Group_4__0)*
	{ after(grammarAccess.getBESetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getBESetAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BESet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group_4__0__Impl
	rule__BESet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getBESetAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BESet__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBESetAccess().getValuesAssignment_4_1()); }
	(rule__BESet__ValuesAssignment_4_1)
	{ after(grammarAccess.getBESetAccess().getValuesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__M_nameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__EsetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_3_0()); }
		ruleBESet
		{ after(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__EsetsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_4_1_0()); }
		ruleBESet
		{ after(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__ConsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_6_0()); }
		ruleBConstant
		{ after(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__ConsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_7_1_0()); }
		ruleBConstant
		{ after(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__ProsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_9_0()); }
		ruleBProperties
		{ after(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__ProsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_10_1_0()); }
		ruleBProperties
		{ after(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__ConsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPropertiesAccess().getConsIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBPropertiesAccess().getConsIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__PropAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPropertiesAccess().getPropLeftCurlyBracketKeyword_2_0()); }
		(
			{ before(grammarAccess.getBPropertiesAccess().getPropLeftCurlyBracketKeyword_2_0()); }
			'{'
			{ after(grammarAccess.getBPropertiesAccess().getPropLeftCurlyBracketKeyword_2_0()); }
		)
		{ after(grammarAccess.getBPropertiesAccess().getPropLeftCurlyBracketKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__PairsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_3_0()); }
		ruleBTuple
		{ after(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BProperties__PairsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_4_1_0()); }
		ruleBTuple
		{ after(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__RanAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTupleAccess().getRanIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBTupleAccess().getRanIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__DomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__Set_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBESetAccess().getSet_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBESetAccess().getSet_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__ValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_3_0()); }
		ruleBSetValue
		{ after(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BESet__ValuesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_4_1_0()); }
		ruleBSetValue
		{ after(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSetValue__Value_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSetValueAccess().getValue_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBSetValueAccess().getValue_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BConstant__Constant_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBConstantAccess().getConstant_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBConstantAccess().getConstant_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
