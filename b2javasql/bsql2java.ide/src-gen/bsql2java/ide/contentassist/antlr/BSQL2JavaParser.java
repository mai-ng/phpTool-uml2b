/*
 * generated by Xtext 2.10.0
 */
package bsql2java.ide.contentassist.antlr;

import bsql2java.ide.contentassist.antlr.internal.InternalBSQL2JavaParser;
import bsql2java.services.BSQL2JavaGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class BSQL2JavaParser extends AbstractContentAssistParser {

	@Inject
	private BSQL2JavaGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalBSQL2JavaParser createParser() {
		InternalBSQL2JavaParser result = new InternalBSQL2JavaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBValueAccess().getAlternatives(), "rule__BValue__Alternatives");
					put(grammarAccess.getBSOperationAccess().getAlternatives(), "rule__BSOperation__Alternatives");
					put(grammarAccess.getBSQLMachineAccess().getGroup(), "rule__BSQLMachine__Group__0");
					put(grammarAccess.getBTableAccess().getGroup(), "rule__BTable__Group__0");
					put(grammarAccess.getBTableAccess().getGroup_5(), "rule__BTable__Group_5__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getBoolOperationAccess().getGroup(), "rule__BoolOperation__Group__0");
					put(grammarAccess.getBoolOperationAccess().getGroup_4(), "rule__BoolOperation__Group_4__0");
					put(grammarAccess.getBoolOperationAccess().getGroup_4_1(), "rule__BoolOperation__Group_4_1__0");
					put(grammarAccess.getBoolOperationAccess().getGroup_8(), "rule__BoolOperation__Group_8__0");
					put(grammarAccess.getBoolOperationAccess().getGroup_8_1(), "rule__BoolOperation__Group_8_1__0");
					put(grammarAccess.getBoolOperationAccess().getGroup_17(), "rule__BoolOperation__Group_17__0");
					put(grammarAccess.getVoidOperationAccess().getGroup(), "rule__VoidOperation__Group__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_2(), "rule__VoidOperation__Group_2__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_2_1(), "rule__VoidOperation__Group_2_1__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_6(), "rule__VoidOperation__Group_6__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_6_1(), "rule__VoidOperation__Group_6_1__0");
					put(grammarAccess.getBPredicateAccess().getGroup(), "rule__BPredicate__Group__0");
					put(grammarAccess.getBPredicateAccess().getGroup_1(), "rule__BPredicate__Group_1__0");
					put(grammarAccess.getSQLCallAccess().getGroup(), "rule__SQLCall__Group__0");
					put(grammarAccess.getTableInstanceAccess().getGroup(), "rule__TableInstance__Group__0");
					put(grammarAccess.getTIAssignmentAccess().getGroup(), "rule__TIAssignment__Group__0");
					put(grammarAccess.getBParameterAccess().getGroup(), "rule__BParameter__Group__0");
					put(grammarAccess.getBSubstitutionAccess().getGroup(), "rule__BSubstitution__Group__0");
					put(grammarAccess.getBSQLMachineAccess().getM_nameAssignment_1(), "rule__BSQLMachine__M_nameAssignment_1");
					put(grammarAccess.getBSQLMachineAccess().getVarsAssignment_3(), "rule__BSQLMachine__VarsAssignment_3");
					put(grammarAccess.getBSQLMachineAccess().getInvAssignment_5(), "rule__BSQLMachine__InvAssignment_5");
					put(grammarAccess.getBSQLMachineAccess().getInitAssignment_7(), "rule__BSQLMachine__InitAssignment_7");
					put(grammarAccess.getBSQLMachineAccess().getOpsAssignment_11(), "rule__BSQLMachine__OpsAssignment_11");
					put(grammarAccess.getBTableAccess().getTable_nameAssignment_0(), "rule__BTable__Table_nameAssignment_0");
					put(grammarAccess.getBTableAccess().getAttributesAssignment_4(), "rule__BTable__AttributesAssignment_4");
					put(grammarAccess.getBTableAccess().getAttributesAssignment_5_1(), "rule__BTable__AttributesAssignment_5_1");
					put(grammarAccess.getAttributeAccess().getAtt_nameAssignment_0(), "rule__Attribute__Att_nameAssignment_0");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_2(), "rule__Attribute__TypeAssignment_2");
					put(grammarAccess.getBTypeAccess().getType_nameAssignment(), "rule__BType__Type_nameAssignment");
					put(grammarAccess.getBSOperationAccess().getBopAssignment_0(), "rule__BSOperation__BopAssignment_0");
					put(grammarAccess.getBSOperationAccess().getVopAssignment_1(), "rule__BSOperation__VopAssignment_1");
					put(grammarAccess.getBoolOperationAccess().getOp_nameAssignment_2(), "rule__BoolOperation__Op_nameAssignment_2");
					put(grammarAccess.getBoolOperationAccess().getPListAssignment_4_0(), "rule__BoolOperation__PListAssignment_4_0");
					put(grammarAccess.getBoolOperationAccess().getPListAssignment_4_1_1(), "rule__BoolOperation__PListAssignment_4_1_1");
					put(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_0(), "rule__BoolOperation__ParamsAssignment_8_0");
					put(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_1_1(), "rule__BoolOperation__ParamsAssignment_8_1_1");
					put(grammarAccess.getBoolOperationAccess().getObjTableAssignment_14(), "rule__BoolOperation__ObjTableAssignment_14");
					put(grammarAccess.getBoolOperationAccess().getPresAssignment_16(), "rule__BoolOperation__PresAssignment_16");
					put(grammarAccess.getBoolOperationAccess().getPresAssignment_17_1(), "rule__BoolOperation__PresAssignment_17_1");
					put(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0(), "rule__VoidOperation__Op_nameAssignment_0");
					put(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0(), "rule__VoidOperation__PListAssignment_2_0");
					put(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1(), "rule__VoidOperation__PListAssignment_2_1_1");
					put(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0(), "rule__VoidOperation__ParamsAssignment_6_0");
					put(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1(), "rule__VoidOperation__ParamsAssignment_6_1_1");
					put(grammarAccess.getVoidOperationAccess().getSubsAssignment_8(), "rule__VoidOperation__SubsAssignment_8");
					put(grammarAccess.getBPredicateAccess().getPLeftAssignment_1_0(), "rule__BPredicate__PLeftAssignment_1_0");
					put(grammarAccess.getBPredicateAccess().getPRightAssignment_1_2(), "rule__BPredicate__PRightAssignment_1_2");
					put(grammarAccess.getSQLCallAccess().getSLeftAssignment_0(), "rule__SQLCall__SLeftAssignment_0");
					put(grammarAccess.getSQLCallAccess().getSRightAssignment_2(), "rule__SQLCall__SRightAssignment_2");
					put(grammarAccess.getTableInstanceAccess().getTi_nameAssignment_0(), "rule__TableInstance__Ti_nameAssignment_0");
					put(grammarAccess.getTableInstanceAccess().getTi_typeAssignment_2(), "rule__TableInstance__Ti_typeAssignment_2");
					put(grammarAccess.getTIAssignmentAccess().getInstance_nameAssignment_0(), "rule__TIAssignment__Instance_nameAssignment_0");
					put(grammarAccess.getTIAssignmentAccess().getInstance_typeAssignment_2(), "rule__TIAssignment__Instance_typeAssignment_2");
					put(grammarAccess.getBParameterAccess().getP_nameAssignment_0(), "rule__BParameter__P_nameAssignment_0");
					put(grammarAccess.getBParameterAccess().getTypeAssignment_2(), "rule__BParameter__TypeAssignment_2");
					put(grammarAccess.getBSubstitutionAccess().getLeftAssignment_0(), "rule__BSubstitution__LeftAssignment_0");
					put(grammarAccess.getBSubstitutionAccess().getRightAssignment_2(), "rule__BSubstitution__RightAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalBSQL2JavaParser typedParser = (InternalBSQL2JavaParser) parser;
			typedParser.entryRuleBSQL2Java();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BSQL2JavaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BSQL2JavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
