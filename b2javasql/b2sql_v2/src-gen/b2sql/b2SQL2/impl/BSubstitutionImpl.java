/**
 * generated by Xtext 2.10.0
 */
package b2sql.b2SQL2.impl;

import b2sql.b2SQL2.B2SQL2Package;
import b2sql.b2SQL2.BPredicate;
import b2sql.b2SQL2.BSubstitution;
import b2sql.b2SQL2.BUnion;
import b2sql.b2SQL2.SQLCall;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BSubstitution</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link b2sql.b2SQL2.impl.BSubstitutionImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link b2sql.b2SQL2.impl.BSubstitutionImpl#getPright <em>Pright</em>}</li>
 *   <li>{@link b2sql.b2SQL2.impl.BSubstitutionImpl#getUright <em>Uright</em>}</li>
 *   <li>{@link b2sql.b2SQL2.impl.BSubstitutionImpl#getSright <em>Sright</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BSubstitutionImpl extends MinimalEObjectImpl.Container implements BSubstitution
{
  /**
   * The default value of the '{@link #getLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected static final String LEFT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected String left = LEFT_EDEFAULT;

  /**
   * The cached value of the '{@link #getPright() <em>Pright</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPright()
   * @generated
   * @ordered
   */
  protected BPredicate pright;

  /**
   * The cached value of the '{@link #getUright() <em>Uright</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUright()
   * @generated
   * @ordered
   */
  protected BUnion uright;

  /**
   * The cached value of the '{@link #getSright() <em>Sright</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSright()
   * @generated
   * @ordered
   */
  protected SQLCall sright;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BSubstitutionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return B2SQL2Package.Literals.BSUBSTITUTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(String newLeft)
  {
    String oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__LEFT, oldLeft, left));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BPredicate getPright()
  {
    return pright;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPright(BPredicate newPright, NotificationChain msgs)
  {
    BPredicate oldPright = pright;
    pright = newPright;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__PRIGHT, oldPright, newPright);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPright(BPredicate newPright)
  {
    if (newPright != pright)
    {
      NotificationChain msgs = null;
      if (pright != null)
        msgs = ((InternalEObject)pright).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__PRIGHT, null, msgs);
      if (newPright != null)
        msgs = ((InternalEObject)newPright).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__PRIGHT, null, msgs);
      msgs = basicSetPright(newPright, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__PRIGHT, newPright, newPright));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BUnion getUright()
  {
    return uright;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUright(BUnion newUright, NotificationChain msgs)
  {
    BUnion oldUright = uright;
    uright = newUright;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__URIGHT, oldUright, newUright);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUright(BUnion newUright)
  {
    if (newUright != uright)
    {
      NotificationChain msgs = null;
      if (uright != null)
        msgs = ((InternalEObject)uright).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__URIGHT, null, msgs);
      if (newUright != null)
        msgs = ((InternalEObject)newUright).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__URIGHT, null, msgs);
      msgs = basicSetUright(newUright, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__URIGHT, newUright, newUright));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SQLCall getSright()
  {
    return sright;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSright(SQLCall newSright, NotificationChain msgs)
  {
    SQLCall oldSright = sright;
    sright = newSright;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__SRIGHT, oldSright, newSright);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSright(SQLCall newSright)
  {
    if (newSright != sright)
    {
      NotificationChain msgs = null;
      if (sright != null)
        msgs = ((InternalEObject)sright).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__SRIGHT, null, msgs);
      if (newSright != null)
        msgs = ((InternalEObject)newSright).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.BSUBSTITUTION__SRIGHT, null, msgs);
      msgs = basicSetSright(newSright, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.BSUBSTITUTION__SRIGHT, newSright, newSright));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case B2SQL2Package.BSUBSTITUTION__PRIGHT:
        return basicSetPright(null, msgs);
      case B2SQL2Package.BSUBSTITUTION__URIGHT:
        return basicSetUright(null, msgs);
      case B2SQL2Package.BSUBSTITUTION__SRIGHT:
        return basicSetSright(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case B2SQL2Package.BSUBSTITUTION__LEFT:
        return getLeft();
      case B2SQL2Package.BSUBSTITUTION__PRIGHT:
        return getPright();
      case B2SQL2Package.BSUBSTITUTION__URIGHT:
        return getUright();
      case B2SQL2Package.BSUBSTITUTION__SRIGHT:
        return getSright();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case B2SQL2Package.BSUBSTITUTION__LEFT:
        setLeft((String)newValue);
        return;
      case B2SQL2Package.BSUBSTITUTION__PRIGHT:
        setPright((BPredicate)newValue);
        return;
      case B2SQL2Package.BSUBSTITUTION__URIGHT:
        setUright((BUnion)newValue);
        return;
      case B2SQL2Package.BSUBSTITUTION__SRIGHT:
        setSright((SQLCall)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case B2SQL2Package.BSUBSTITUTION__LEFT:
        setLeft(LEFT_EDEFAULT);
        return;
      case B2SQL2Package.BSUBSTITUTION__PRIGHT:
        setPright((BPredicate)null);
        return;
      case B2SQL2Package.BSUBSTITUTION__URIGHT:
        setUright((BUnion)null);
        return;
      case B2SQL2Package.BSUBSTITUTION__SRIGHT:
        setSright((SQLCall)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case B2SQL2Package.BSUBSTITUTION__LEFT:
        return LEFT_EDEFAULT == null ? left != null : !LEFT_EDEFAULT.equals(left);
      case B2SQL2Package.BSUBSTITUTION__PRIGHT:
        return pright != null;
      case B2SQL2Package.BSUBSTITUTION__URIGHT:
        return uright != null;
      case B2SQL2Package.BSUBSTITUTION__SRIGHT:
        return sright != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (left: ");
    result.append(left);
    result.append(')');
    return result.toString();
  }

} //BSubstitutionImpl
