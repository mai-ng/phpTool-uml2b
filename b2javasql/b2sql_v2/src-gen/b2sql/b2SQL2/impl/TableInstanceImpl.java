/**
 * generated by Xtext 2.10.0
 */
package b2sql.b2SQL2.impl;

import b2sql.b2SQL2.B2SQL2Package;
import b2sql.b2SQL2.TIAssignment;
import b2sql.b2SQL2.TableInstance;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Table Instance</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link b2sql.b2SQL2.impl.TableInstanceImpl#getTi_name <em>Ti name</em>}</li>
 *   <li>{@link b2sql.b2SQL2.impl.TableInstanceImpl#getTi_type <em>Ti type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TableInstanceImpl extends MinimalEObjectImpl.Container implements TableInstance
{
  /**
   * The default value of the '{@link #getTi_name() <em>Ti name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTi_name()
   * @generated
   * @ordered
   */
  protected static final String TI_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTi_name() <em>Ti name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTi_name()
   * @generated
   * @ordered
   */
  protected String ti_name = TI_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTi_type() <em>Ti type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTi_type()
   * @generated
   * @ordered
   */
  protected TIAssignment ti_type;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TableInstanceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return B2SQL2Package.Literals.TABLE_INSTANCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTi_name()
  {
    return ti_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTi_name(String newTi_name)
  {
    String oldTi_name = ti_name;
    ti_name = newTi_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.TABLE_INSTANCE__TI_NAME, oldTi_name, ti_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TIAssignment getTi_type()
  {
    return ti_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTi_type(TIAssignment newTi_type, NotificationChain msgs)
  {
    TIAssignment oldTi_type = ti_type;
    ti_type = newTi_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, B2SQL2Package.TABLE_INSTANCE__TI_TYPE, oldTi_type, newTi_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTi_type(TIAssignment newTi_type)
  {
    if (newTi_type != ti_type)
    {
      NotificationChain msgs = null;
      if (ti_type != null)
        msgs = ((InternalEObject)ti_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.TABLE_INSTANCE__TI_TYPE, null, msgs);
      if (newTi_type != null)
        msgs = ((InternalEObject)newTi_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - B2SQL2Package.TABLE_INSTANCE__TI_TYPE, null, msgs);
      msgs = basicSetTi_type(newTi_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, B2SQL2Package.TABLE_INSTANCE__TI_TYPE, newTi_type, newTi_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case B2SQL2Package.TABLE_INSTANCE__TI_TYPE:
        return basicSetTi_type(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case B2SQL2Package.TABLE_INSTANCE__TI_NAME:
        return getTi_name();
      case B2SQL2Package.TABLE_INSTANCE__TI_TYPE:
        return getTi_type();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case B2SQL2Package.TABLE_INSTANCE__TI_NAME:
        setTi_name((String)newValue);
        return;
      case B2SQL2Package.TABLE_INSTANCE__TI_TYPE:
        setTi_type((TIAssignment)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case B2SQL2Package.TABLE_INSTANCE__TI_NAME:
        setTi_name(TI_NAME_EDEFAULT);
        return;
      case B2SQL2Package.TABLE_INSTANCE__TI_TYPE:
        setTi_type((TIAssignment)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case B2SQL2Package.TABLE_INSTANCE__TI_NAME:
        return TI_NAME_EDEFAULT == null ? ti_name != null : !TI_NAME_EDEFAULT.equals(ti_name);
      case B2SQL2Package.TABLE_INSTANCE__TI_TYPE:
        return ti_type != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (ti_name: ");
    result.append(ti_name);
    result.append(')');
    return result.toString();
  }

} //TableInstanceImpl
