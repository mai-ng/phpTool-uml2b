/**
 * generated by Xtext 2.10.0
 */
package bsqllog2java.bSQLLog2Java.util;

import bsqllog2java.bSQLLog2Java.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see bsqllog2java.bSQLLog2Java.BSQLLog2JavaPackage
 * @generated
 */
public class BSQLLog2JavaSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BSQLLog2JavaPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSQLLog2JavaSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = BSQLLog2JavaPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case BSQLLog2JavaPackage.BSQL_LOG2_JAVA:
      {
        BSQLLog2Java bsqlLog2Java = (BSQLLog2Java)theEObject;
        T result = caseBSQLLog2Java(bsqlLog2Java);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BSQL_MACHINE:
      {
        BSQLMachine bsqlMachine = (BSQLMachine)theEObject;
        T result = caseBSQLMachine(bsqlMachine);
        if (result == null) result = caseBSQLLog2Java(bsqlMachine);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BOPERATION:
      {
        BOperation bOperation = (BOperation)theEObject;
        T result = caseBOperation(bOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BTABLE:
      {
        BTable bTable = (BTable)theEObject;
        T result = caseBTable(bTable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BTYPE:
      {
        BType bType = (BType)theEObject;
        T result = caseBType(bType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BOOL_OPERATION:
      {
        BoolOperation boolOperation = (BoolOperation)theEObject;
        T result = caseBoolOperation(boolOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BSUB_TRUE:
      {
        BSubTrue bSubTrue = (BSubTrue)theEObject;
        T result = caseBSubTrue(bSubTrue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BSUB_FALSE:
      {
        BSubFalse bSubFalse = (BSubFalse)theEObject;
        T result = caseBSubFalse(bSubFalse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.STRING_OPERATION:
      {
        StringOperation stringOperation = (StringOperation)theEObject;
        T result = caseStringOperation(stringOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BANY_BLOCK:
      {
        BAnyBlock bAnyBlock = (BAnyBlock)theEObject;
        T result = caseBAnyBlock(bAnyBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.VOID_OPERATION:
      {
        VoidOperation voidOperation = (VoidOperation)theEObject;
        T result = caseVoidOperation(voidOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BPREDICATE:
      {
        BPredicate bPredicate = (BPredicate)theEObject;
        T result = caseBPredicate(bPredicate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.SQL_CALL:
      {
        SQLCall sqlCall = (SQLCall)theEObject;
        T result = caseSQLCall(sqlCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.TABLE_INSTANCE:
      {
        TableInstance tableInstance = (TableInstance)theEObject;
        T result = caseTableInstance(tableInstance);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.TI_ASSIGNMENT:
      {
        TIAssignment tiAssignment = (TIAssignment)theEObject;
        T result = caseTIAssignment(tiAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BPARAMETER_TYPING:
      {
        BParameterTyping bParameterTyping = (BParameterTyping)theEObject;
        T result = caseBParameterTyping(bParameterTyping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BSUBSTITUTION:
      {
        BSubstitution bSubstitution = (BSubstitution)theEObject;
        T result = caseBSubstitution(bSubstitution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BUNION:
      {
        BUnion bUnion = (BUnion)theEObject;
        T result = caseBUnion(bUnion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BELEMENT_STRUCTURE:
      {
        BElementStructure bElementStructure = (BElementStructure)theEObject;
        T result = caseBElementStructure(bElementStructure);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BELEMENT:
      {
        BElement bElement = (BElement)theEObject;
        T result = caseBElement(bElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case BSQLLog2JavaPackage.BSET:
      {
        BSet bSet = (BSet)theEObject;
        T result = caseBSet(bSet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSQL Log2 Java</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSQL Log2 Java</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSQLLog2Java(BSQLLog2Java object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSQL Machine</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSQL Machine</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSQLMachine(BSQLMachine object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BOperation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BOperation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBOperation(BOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BTable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BTable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBTable(BTable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BType</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BType</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBType(BType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bool Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bool Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBoolOperation(BoolOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSub True</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSub True</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSubTrue(BSubTrue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSub False</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSub False</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSubFalse(BSubFalse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringOperation(StringOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BAny Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BAny Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBAnyBlock(BAnyBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Void Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Void Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoidOperation(VoidOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BPredicate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BPredicate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBPredicate(BPredicate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>SQL Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>SQL Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSQLCall(SQLCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Table Instance</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Table Instance</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTableInstance(TableInstance object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>TI Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>TI Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTIAssignment(TIAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BParameter Typing</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BParameter Typing</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBParameterTyping(BParameterTyping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSubstitution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSubstitution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSubstitution(BSubstitution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BUnion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BUnion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBUnion(BUnion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BElement Structure</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BElement Structure</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBElementStructure(BElementStructure object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BElement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BElement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBElement(BElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>BSet</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>BSet</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBSet(BSet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //BSQLLog2JavaSwitch
