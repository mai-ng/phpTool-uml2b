/**
 * generated by Xtext 2.10.0
 */
package bsql2java.bSQL2Java;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see bsql2java.bSQL2Java.BSQL2JavaPackage
 * @generated
 */
public interface BSQL2JavaFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  BSQL2JavaFactory eINSTANCE = bsql2java.bSQL2Java.impl.BSQL2JavaFactoryImpl.init();

  /**
   * Returns a new object of class '<em>BSQL2 Java</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BSQL2 Java</em>'.
   * @generated
   */
  BSQL2Java createBSQL2Java();

  /**
   * Returns a new object of class '<em>BSQL Machine</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BSQL Machine</em>'.
   * @generated
   */
  BSQLMachine createBSQLMachine();

  /**
   * Returns a new object of class '<em>BTable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BTable</em>'.
   * @generated
   */
  BTable createBTable();

  /**
   * Returns a new object of class '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Attribute</em>'.
   * @generated
   */
  Attribute createAttribute();

  /**
   * Returns a new object of class '<em>BType</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BType</em>'.
   * @generated
   */
  BType createBType();

  /**
   * Returns a new object of class '<em>BS Operation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BS Operation</em>'.
   * @generated
   */
  BSOperation createBSOperation();

  /**
   * Returns a new object of class '<em>Bool Operation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bool Operation</em>'.
   * @generated
   */
  BoolOperation createBoolOperation();

  /**
   * Returns a new object of class '<em>Void Operation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Void Operation</em>'.
   * @generated
   */
  VoidOperation createVoidOperation();

  /**
   * Returns a new object of class '<em>BPredicate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BPredicate</em>'.
   * @generated
   */
  BPredicate createBPredicate();

  /**
   * Returns a new object of class '<em>SQL Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>SQL Call</em>'.
   * @generated
   */
  SQLCall createSQLCall();

  /**
   * Returns a new object of class '<em>Table Instance</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Table Instance</em>'.
   * @generated
   */
  TableInstance createTableInstance();

  /**
   * Returns a new object of class '<em>TI Assignment</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>TI Assignment</em>'.
   * @generated
   */
  TIAssignment createTIAssignment();

  /**
   * Returns a new object of class '<em>BParameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BParameter</em>'.
   * @generated
   */
  BParameter createBParameter();

  /**
   * Returns a new object of class '<em>BSubstitution</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>BSubstitution</em>'.
   * @generated
   */
  BSubstitution createBSubstitution();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  BSQL2JavaPackage getBSQL2JavaPackage();

} //BSQL2JavaFactory
