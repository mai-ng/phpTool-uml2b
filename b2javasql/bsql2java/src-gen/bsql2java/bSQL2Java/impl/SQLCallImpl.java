/**
 * generated by Xtext 2.10.0
 */
package bsql2java.bSQL2Java.impl;

import bsql2java.bSQL2Java.BSQL2JavaPackage;
import bsql2java.bSQL2Java.SQLCall;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>SQL Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link bsql2java.bSQL2Java.impl.SQLCallImpl#getSLeft <em>SLeft</em>}</li>
 *   <li>{@link bsql2java.bSQL2Java.impl.SQLCallImpl#getSRight <em>SRight</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SQLCallImpl extends MinimalEObjectImpl.Container implements SQLCall
{
  /**
   * The default value of the '{@link #getSLeft() <em>SLeft</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLeft()
   * @generated
   * @ordered
   */
  protected static final String SLEFT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSLeft() <em>SLeft</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLeft()
   * @generated
   * @ordered
   */
  protected String sLeft = SLEFT_EDEFAULT;

  /**
   * The default value of the '{@link #getSRight() <em>SRight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSRight()
   * @generated
   * @ordered
   */
  protected static final String SRIGHT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSRight() <em>SRight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSRight()
   * @generated
   * @ordered
   */
  protected String sRight = SRIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SQLCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BSQL2JavaPackage.Literals.SQL_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSLeft()
  {
    return sLeft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSLeft(String newSLeft)
  {
    String oldSLeft = sLeft;
    sLeft = newSLeft;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BSQL2JavaPackage.SQL_CALL__SLEFT, oldSLeft, sLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSRight()
  {
    return sRight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSRight(String newSRight)
  {
    String oldSRight = sRight;
    sRight = newSRight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BSQL2JavaPackage.SQL_CALL__SRIGHT, oldSRight, sRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BSQL2JavaPackage.SQL_CALL__SLEFT:
        return getSLeft();
      case BSQL2JavaPackage.SQL_CALL__SRIGHT:
        return getSRight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BSQL2JavaPackage.SQL_CALL__SLEFT:
        setSLeft((String)newValue);
        return;
      case BSQL2JavaPackage.SQL_CALL__SRIGHT:
        setSRight((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BSQL2JavaPackage.SQL_CALL__SLEFT:
        setSLeft(SLEFT_EDEFAULT);
        return;
      case BSQL2JavaPackage.SQL_CALL__SRIGHT:
        setSRight(SRIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BSQL2JavaPackage.SQL_CALL__SLEFT:
        return SLEFT_EDEFAULT == null ? sLeft != null : !SLEFT_EDEFAULT.equals(sLeft);
      case BSQL2JavaPackage.SQL_CALL__SRIGHT:
        return SRIGHT_EDEFAULT == null ? sRight != null : !SRIGHT_EDEFAULT.equals(sRight);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (SLeft: ");
    result.append(sLeft);
    result.append(", SRight: ");
    result.append(sRight);
    result.append(')');
    return result.toString();
  }

} //SQLCallImpl
