/*
 * generated by Xtext 2.10.0
 */
grammar InternalBSQL2SQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package bsql2sql.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package bsql2sql.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import bsql2sql.services.BSQL2SQLGrammarAccess;

}
@parser::members {
	private BSQL2SQLGrammarAccess grammarAccess;

	public void setGrammarAccess(BSQL2SQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBSQL2SQL
entryRuleBSQL2SQL
:
{ before(grammarAccess.getBSQL2SQLRule()); }
	 ruleBSQL2SQL
{ after(grammarAccess.getBSQL2SQLRule()); } 
	 EOF 
;

// Rule BSQL2SQL
ruleBSQL2SQL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSQL2SQLAccess().getBSQLMachineParserRuleCall()); }
		ruleBSQLMachine
		{ after(grammarAccess.getBSQL2SQLAccess().getBSQLMachineParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSQLMachine
entryRuleBSQLMachine
:
{ before(grammarAccess.getBSQLMachineRule()); }
	 ruleBSQLMachine
{ after(grammarAccess.getBSQLMachineRule()); } 
	 EOF 
;

// Rule BSQLMachine
ruleBSQLMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getGroup()); }
		(rule__BSQLMachine__Group__0)
		{ after(grammarAccess.getBSQLMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBTable
entryRuleBTable
:
{ before(grammarAccess.getBTableRule()); }
	 ruleBTable
{ after(grammarAccess.getBTableRule()); } 
	 EOF 
;

// Rule BTable
ruleBTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTableAccess().getGroup()); }
		(rule__BTable__Group__0)
		{ after(grammarAccess.getBTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBType
entryRuleBType
:
{ before(grammarAccess.getBTypeRule()); }
	 ruleBType
{ after(grammarAccess.getBTypeRule()); } 
	 EOF 
;

// Rule BType
ruleBType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTypeAccess().getType_nameAssignment()); }
		(rule__BType__Type_nameAssignment)
		{ after(grammarAccess.getBTypeAccess().getType_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBValue
entryRuleBValue
:
{ before(grammarAccess.getBValueRule()); }
	 ruleBValue
{ after(grammarAccess.getBValueRule()); } 
	 EOF 
;

// Rule BValue
ruleBValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBValueAccess().getAlternatives()); }
		(rule__BValue__Alternatives)
		{ after(grammarAccess.getBValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSOperation
entryRuleBSOperation
:
{ before(grammarAccess.getBSOperationRule()); }
	 ruleBSOperation
{ after(grammarAccess.getBSOperationRule()); } 
	 EOF 
;

// Rule BSOperation
ruleBSOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSOperationAccess().getAlternatives()); }
		(rule__BSOperation__Alternatives)
		{ after(grammarAccess.getBSOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolOperation
entryRuleBoolOperation
:
{ before(grammarAccess.getBoolOperationRule()); }
	 ruleBoolOperation
{ after(grammarAccess.getBoolOperationRule()); } 
	 EOF 
;

// Rule BoolOperation
ruleBoolOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolOperationAccess().getGroup()); }
		(rule__BoolOperation__Group__0)
		{ after(grammarAccess.getBoolOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVoidOperation
entryRuleVoidOperation
:
{ before(grammarAccess.getVoidOperationRule()); }
	 ruleVoidOperation
{ after(grammarAccess.getVoidOperationRule()); } 
	 EOF 
;

// Rule VoidOperation
ruleVoidOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVoidOperationAccess().getGroup()); }
		(rule__VoidOperation__Group__0)
		{ after(grammarAccess.getVoidOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBPredicate
entryRuleBPredicate
:
{ before(grammarAccess.getBPredicateRule()); }
	 ruleBPredicate
{ after(grammarAccess.getBPredicateRule()); } 
	 EOF 
;

// Rule BPredicate
ruleBPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBPredicateAccess().getGroup()); }
		(rule__BPredicate__Group__0)
		{ after(grammarAccess.getBPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSQLCall
entryRuleSQLCall
:
{ before(grammarAccess.getSQLCallRule()); }
	 ruleSQLCall
{ after(grammarAccess.getSQLCallRule()); } 
	 EOF 
;

// Rule SQLCall
ruleSQLCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSQLCallAccess().getGroup()); }
		(rule__SQLCall__Group__0)
		{ after(grammarAccess.getSQLCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableInstance
entryRuleTableInstance
:
{ before(grammarAccess.getTableInstanceRule()); }
	 ruleTableInstance
{ after(grammarAccess.getTableInstanceRule()); } 
	 EOF 
;

// Rule TableInstance
ruleTableInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableInstanceAccess().getGroup()); }
		(rule__TableInstance__Group__0)
		{ after(grammarAccess.getTableInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIAssignment
entryRuleTIAssignment
:
{ before(grammarAccess.getTIAssignmentRule()); }
	 ruleTIAssignment
{ after(grammarAccess.getTIAssignmentRule()); } 
	 EOF 
;

// Rule TIAssignment
ruleTIAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIAssignmentAccess().getGroup()); }
		(rule__TIAssignment__Group__0)
		{ after(grammarAccess.getTIAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBParameter
entryRuleBParameter
:
{ before(grammarAccess.getBParameterRule()); }
	 ruleBParameter
{ after(grammarAccess.getBParameterRule()); } 
	 EOF 
;

// Rule BParameter
ruleBParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBParameterAccess().getGroup()); }
		(rule__BParameter__Group__0)
		{ after(grammarAccess.getBParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSubstitution
entryRuleBSubstitution
:
{ before(grammarAccess.getBSubstitutionRule()); }
	 ruleBSubstitution
{ after(grammarAccess.getBSubstitutionRule()); } 
	 EOF 
;

// Rule BSubstitution
ruleBSubstitution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getGroup()); }
		(rule__BSubstitution__Group__0)
		{ after(grammarAccess.getBSubstitutionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBValueAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBValueAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBValueAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getBValueAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBValueAccess().getFALSEKeyword_2()); }
		'FALSE'
		{ after(grammarAccess.getBValueAccess().getFALSEKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBValueAccess().getTRUEKeyword_3()); }
		'TRUE'
		{ after(grammarAccess.getBValueAccess().getTRUEKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSOperationAccess().getBopAssignment_0()); }
		(rule__BSOperation__BopAssignment_0)
		{ after(grammarAccess.getBSOperationAccess().getBopAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBSOperationAccess().getVopAssignment_1()); }
		(rule__BSOperation__VopAssignment_1)
		{ after(grammarAccess.getBSOperationAccess().getVopAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__0__Impl
	rule__BSQLMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getMACHINEKeyword_0()); }
	'MACHINE'
	{ after(grammarAccess.getBSQLMachineAccess().getMACHINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__1__Impl
	rule__BSQLMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getM_nameAssignment_1()); }
	(rule__BSQLMachine__M_nameAssignment_1)
	{ after(grammarAccess.getBSQLMachineAccess().getM_nameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__2__Impl
	rule__BSQLMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getVARIABLESKeyword_2()); }
	'VARIABLES'
	{ after(grammarAccess.getBSQLMachineAccess().getVARIABLESKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__3__Impl
	rule__BSQLMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getVarsAssignment_3()); }
	(rule__BSQLMachine__VarsAssignment_3)
	{ after(grammarAccess.getBSQLMachineAccess().getVarsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__4__Impl
	rule__BSQLMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getINVARIANTKeyword_4()); }
	'INVARIANT'
	{ after(grammarAccess.getBSQLMachineAccess().getINVARIANTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__5__Impl
	rule__BSQLMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getInvAssignment_5()); }
	(rule__BSQLMachine__InvAssignment_5)
	{ after(grammarAccess.getBSQLMachineAccess().getInvAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__6__Impl
	rule__BSQLMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getINITIALISATIONKeyword_6()); }
	'INITIALISATION'
	{ after(grammarAccess.getBSQLMachineAccess().getINITIALISATIONKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__7__Impl
	rule__BSQLMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getInitAssignment_7()); }
	(rule__BSQLMachine__InitAssignment_7)
	{ after(grammarAccess.getBSQLMachineAccess().getInitAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__8__Impl
	rule__BSQLMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getColonEqualsSignKeyword_8()); }
	':='
	{ after(grammarAccess.getBSQLMachineAccess().getColonEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__9__Impl
	rule__BSQLMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getLeftCurlyBracketRightCurlyBracketKeyword_9()); }
	'{}'
	{ after(grammarAccess.getBSQLMachineAccess().getLeftCurlyBracketRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__10__Impl
	rule__BSQLMachine__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSQLMachineAccess().getOPERATIONSKeyword_10()); }
	'OPERATIONS'
	{ after(grammarAccess.getBSQLMachineAccess().getOPERATIONSKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSQLMachine__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBSQLMachineAccess().getOpsAssignment_11()); }
		(rule__BSQLMachine__OpsAssignment_11)
		{ after(grammarAccess.getBSQLMachineAccess().getOpsAssignment_11()); }
	)
	(
		{ before(grammarAccess.getBSQLMachineAccess().getOpsAssignment_11()); }
		(rule__BSQLMachine__OpsAssignment_11)*
		{ after(grammarAccess.getBSQLMachineAccess().getOpsAssignment_11()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BTable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__0__Impl
	rule__BTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getTable_nameAssignment_0()); }
	(rule__BTable__Table_nameAssignment_0)
	{ after(grammarAccess.getBTableAccess().getTable_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__1__Impl
	rule__BTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getLessThanSignColonKeyword_1()); }
	'<:'
	{ after(grammarAccess.getBTableAccess().getLessThanSignColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__2__Impl
	rule__BTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getStructKeyword_2()); }
	'struct'
	{ after(grammarAccess.getBTableAccess().getStructKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__3__Impl
	rule__BTable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getBTableAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__4__Impl
	rule__BTable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getAttributesAssignment_4()); }
	(rule__BTable__AttributesAssignment_4)
	{ after(grammarAccess.getBTableAccess().getAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__5__Impl
	rule__BTable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getGroup_5()); }
	(rule__BTable__Group_5__0)*
	{ after(grammarAccess.getBTableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getBTableAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BTable__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group_5__0__Impl
	rule__BTable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getBTableAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTableAccess().getAttributesAssignment_5_1()); }
	(rule__BTable__AttributesAssignment_5_1)
	{ after(grammarAccess.getBTableAccess().getAttributesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAtt_nameAssignment_0()); }
	(rule__Attribute__Att_nameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getAtt_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__0__Impl
	rule__BoolOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getResKeyword_0()); }
	'res'
	{ after(grammarAccess.getBoolOperationAccess().getResKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__1__Impl
	rule__BoolOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1()); }
	'<--'
	{ after(grammarAccess.getBoolOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__2__Impl
	rule__BoolOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getOp_nameAssignment_2()); }
	(rule__BoolOperation__Op_nameAssignment_2)
	{ after(grammarAccess.getBoolOperationAccess().getOp_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__3__Impl
	rule__BoolOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getBoolOperationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__4__Impl
	rule__BoolOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getGroup_4()); }
	(rule__BoolOperation__Group_4__0)?
	{ after(grammarAccess.getBoolOperationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__5__Impl
	rule__BoolOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__6__Impl
	rule__BoolOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getBoolOperationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__7__Impl
	rule__BoolOperation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getPREKeyword_7()); }
	'PRE'
	{ after(grammarAccess.getBoolOperationAccess().getPREKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__8__Impl
	rule__BoolOperation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getGroup_8()); }
	(rule__BoolOperation__Group_8__0)
	{ after(grammarAccess.getBoolOperationAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__9__Impl
	rule__BoolOperation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getTHENKeyword_9()); }
	'THEN'
	{ after(grammarAccess.getBoolOperationAccess().getTHENKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__10__Impl
	rule__BoolOperation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getResKeyword_10()); }
	'res'
	{ after(grammarAccess.getBoolOperationAccess().getResKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__11__Impl
	rule__BoolOperation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getColonEqualsSignKeyword_11()); }
	':='
	{ after(grammarAccess.getBoolOperationAccess().getColonEqualsSignKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__12__Impl
	rule__BoolOperation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getBoolKeyword_12()); }
	'bool('
	{ after(grammarAccess.getBoolOperationAccess().getBoolKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__13__Impl
	rule__BoolOperation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getNumberSignKeyword_13()); }
	'#'
	{ after(grammarAccess.getBoolOperationAccess().getNumberSignKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__14__Impl
	rule__BoolOperation__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getObjTableAssignment_14()); }
	(rule__BoolOperation__ObjTableAssignment_14)
	{ after(grammarAccess.getBoolOperationAccess().getObjTableAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__15__Impl
	rule__BoolOperation__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_15()); }
	'&'
	{ after(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__16__Impl
	rule__BoolOperation__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getPresAssignment_16()); }
	(rule__BoolOperation__PresAssignment_16)
	{ after(grammarAccess.getBoolOperationAccess().getPresAssignment_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__17__Impl
	rule__BoolOperation__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getGroup_17()); }
	(rule__BoolOperation__Group_17__0)*
	{ after(grammarAccess.getBoolOperationAccess().getGroup_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__18__Impl
	rule__BoolOperation__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_18()); }
	')'
	{ after(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__19__Impl
	rule__BoolOperation__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_19()); }
	')'
	{ after(grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getENDKeyword_20()); }
	'END'
	{ after(grammarAccess.getBoolOperationAccess().getENDKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_4__0__Impl
	rule__BoolOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getPListAssignment_4_0()); }
	(rule__BoolOperation__PListAssignment_4_0)
	{ after(grammarAccess.getBoolOperationAccess().getPListAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getGroup_4_1()); }
	(rule__BoolOperation__Group_4_1__0)*
	{ after(grammarAccess.getBoolOperationAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_4_1__0__Impl
	rule__BoolOperation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getBoolOperationAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getPListAssignment_4_1_1()); }
	(rule__BoolOperation__PListAssignment_4_1_1)
	{ after(grammarAccess.getBoolOperationAccess().getPListAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_8__0__Impl
	rule__BoolOperation__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_0()); }
	(rule__BoolOperation__ParamsAssignment_8_0)
	{ after(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getGroup_8_1()); }
	(rule__BoolOperation__Group_8_1__0)*
	{ after(grammarAccess.getBoolOperationAccess().getGroup_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_8_1__0__Impl
	rule__BoolOperation__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_8_1_0()); }
	'&'
	{ after(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_1_1()); }
	(rule__BoolOperation__ParamsAssignment_8_1_1)
	{ after(grammarAccess.getBoolOperationAccess().getParamsAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolOperation__Group_17__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_17__0__Impl
	rule__BoolOperation__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_17__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_17_0()); }
	'&'
	{ after(grammarAccess.getBoolOperationAccess().getAmpersandKeyword_17_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_17__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolOperation__Group_17__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Group_17__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolOperationAccess().getPresAssignment_17_1()); }
	(rule__BoolOperation__PresAssignment_17_1)
	{ after(grammarAccess.getBoolOperationAccess().getPresAssignment_17_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__0__Impl
	rule__VoidOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0()); }
	(rule__VoidOperation__Op_nameAssignment_0)
	{ after(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__1__Impl
	rule__VoidOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__2__Impl
	rule__VoidOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_2()); }
	(rule__VoidOperation__Group_2__0)?
	{ after(grammarAccess.getVoidOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__3__Impl
	rule__VoidOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__4__Impl
	rule__VoidOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__5__Impl
	rule__VoidOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPREKeyword_5()); }
	'PRE'
	{ after(grammarAccess.getVoidOperationAccess().getPREKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__6__Impl
	rule__VoidOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_6()); }
	(rule__VoidOperation__Group_6__0)
	{ after(grammarAccess.getVoidOperationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__7__Impl
	rule__VoidOperation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getTHENKeyword_7()); }
	'THEN'
	{ after(grammarAccess.getVoidOperationAccess().getTHENKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__8__Impl
	rule__VoidOperation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getSubsAssignment_8()); }
	(rule__VoidOperation__SubsAssignment_8)*
	{ after(grammarAccess.getVoidOperationAccess().getSubsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getENDKeyword_9()); }
	'END'
	{ after(grammarAccess.getVoidOperationAccess().getENDKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2__0__Impl
	rule__VoidOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0()); }
	(rule__VoidOperation__PListAssignment_2_0)
	{ after(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_2_1()); }
	(rule__VoidOperation__Group_2_1__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2_1__0__Impl
	rule__VoidOperation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1()); }
	(rule__VoidOperation__PListAssignment_2_1_1)
	{ after(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6__0__Impl
	rule__VoidOperation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0()); }
	(rule__VoidOperation__ParamsAssignment_6_0)
	{ after(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_6_1()); }
	(rule__VoidOperation__Group_6_1__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6_1__0__Impl
	rule__VoidOperation__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0()); }
	'&'
	{ after(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1()); }
	(rule__VoidOperation__ParamsAssignment_6_1_1)
	{ after(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group__0__Impl
	rule__BPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getBPredicateAction_0()); }
	()
	{ after(grammarAccess.getBPredicateAccess().getBPredicateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getGroup_1()); }
	(rule__BPredicate__Group_1__0)
	{ after(grammarAccess.getBPredicateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BPredicate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group_1__0__Impl
	rule__BPredicate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getPLeftAssignment_1_0()); }
	(rule__BPredicate__PLeftAssignment_1_0)
	{ after(grammarAccess.getBPredicateAccess().getPLeftAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group_1__1__Impl
	rule__BPredicate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getBPredicateAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getPRightAssignment_1_2()); }
	(rule__BPredicate__PRightAssignment_1_2)
	{ after(grammarAccess.getBPredicateAccess().getPRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SQLCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SQLCall__Group__0__Impl
	rule__SQLCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSQLCallAccess().getSLeftAssignment_0()); }
	(rule__SQLCall__SLeftAssignment_0)
	{ after(grammarAccess.getSQLCallAccess().getSLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SQLCall__Group__1__Impl
	rule__SQLCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSQLCallAccess().getApostropheKeyword_1()); }
	'\''
	{ after(grammarAccess.getSQLCallAccess().getApostropheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SQLCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSQLCallAccess().getSRightAssignment_2()); }
	(rule__SQLCall__SRightAssignment_2)
	{ after(grammarAccess.getSQLCallAccess().getSRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableInstance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInstance__Group__0__Impl
	rule__TableInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInstanceAccess().getTi_nameAssignment_0()); }
	(rule__TableInstance__Ti_nameAssignment_0)
	{ after(grammarAccess.getTableInstanceAccess().getTi_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInstance__Group__1__Impl
	rule__TableInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInstanceAccess().getFullStopLeftParenthesisKeyword_1()); }
	'.('
	{ after(grammarAccess.getTableInstanceAccess().getFullStopLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInstanceAccess().getTi_typeAssignment_2()); }
	(rule__TableInstance__Ti_typeAssignment_2)
	{ after(grammarAccess.getTableInstanceAccess().getTi_typeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TIAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TIAssignment__Group__0__Impl
	rule__TIAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTIAssignmentAccess().getInstance_nameAssignment_0()); }
	(rule__TIAssignment__Instance_nameAssignment_0)
	{ after(grammarAccess.getTIAssignmentAccess().getInstance_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TIAssignment__Group__1__Impl
	rule__TIAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTIAssignmentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTIAssignmentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TIAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTIAssignmentAccess().getInstance_typeAssignment_2()); }
	(rule__TIAssignment__Instance_typeAssignment_2)
	{ after(grammarAccess.getTIAssignmentAccess().getInstance_typeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__0__Impl
	rule__BParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getP_nameAssignment_0()); }
	(rule__BParameter__P_nameAssignment_0)
	{ after(grammarAccess.getBParameterAccess().getP_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__1__Impl
	rule__BParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getTypeAssignment_2()); }
	(rule__BParameter__TypeAssignment_2)
	{ after(grammarAccess.getBParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BSubstitution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__0__Impl
	rule__BSubstitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getLeftAssignment_0()); }
	(rule__BSubstitution__LeftAssignment_0)
	{ after(grammarAccess.getBSubstitutionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__1__Impl
	rule__BSubstitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getRightAssignment_2()); }
	(rule__BSubstitution__RightAssignment_2)
	{ after(grammarAccess.getBSubstitutionAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BSQLMachine__M_nameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBSQLMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__VarsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getVarsIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getBSQLMachineAccess().getVarsIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__InvAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getInvBTableParserRuleCall_5_0()); }
		ruleBTable
		{ after(grammarAccess.getBSQLMachineAccess().getInvBTableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__InitAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getInitIDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getBSQLMachineAccess().getInitIDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSQLMachine__OpsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSQLMachineAccess().getOpsBSOperationParserRuleCall_11_0()); }
		ruleBSOperation
		{ after(grammarAccess.getBSQLMachineAccess().getOpsBSOperationParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__Table_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTableAccess().getTable_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBTableAccess().getTable_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__AttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_4_0()); }
		ruleAttribute
		{ after(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTable__AttributesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_5_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Att_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAtt_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getAtt_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeBTypeParserRuleCall_2_0()); }
		ruleBType
		{ after(grammarAccess.getAttributeAccess().getTypeBTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BType__Type_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSOperation__BopAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSOperationAccess().getBopBoolOperationParserRuleCall_0_0()); }
		ruleBoolOperation
		{ after(grammarAccess.getBSOperationAccess().getBopBoolOperationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSOperation__VopAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSOperationAccess().getVopVoidOperationParserRuleCall_1_0()); }
		ruleVoidOperation
		{ after(grammarAccess.getBSOperationAccess().getVopVoidOperationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__Op_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getOp_nameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBoolOperationAccess().getOp_nameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__PListAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__PListAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__ParamsAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getParamsBParameterParserRuleCall_8_0_0()); }
		ruleBParameter
		{ after(grammarAccess.getBoolOperationAccess().getParamsBParameterParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__ParamsAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getParamsBParameterParserRuleCall_8_1_1_0()); }
		ruleBParameter
		{ after(grammarAccess.getBoolOperationAccess().getParamsBParameterParserRuleCall_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__ObjTableAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getObjTableTableInstanceParserRuleCall_14_0()); }
		ruleTableInstance
		{ after(grammarAccess.getBoolOperationAccess().getObjTableTableInstanceParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__PresAssignment_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getPresBPredicateParserRuleCall_16_0()); }
		ruleBPredicate
		{ after(grammarAccess.getBoolOperationAccess().getPresBPredicateParserRuleCall_16_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolOperation__PresAssignment_17_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolOperationAccess().getPresBPredicateParserRuleCall_17_1_0()); }
		ruleBPredicate
		{ after(grammarAccess.getBoolOperationAccess().getPresBPredicateParserRuleCall_17_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Op_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__PListAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__PListAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__ParamsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_0_0()); }
		ruleBParameter
		{ after(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__ParamsAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_1_1_0()); }
		ruleBParameter
		{ after(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__SubsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_8_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PLeftAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPLeftSQLCallParserRuleCall_1_0_0()); }
		ruleSQLCall
		{ after(grammarAccess.getBPredicateAccess().getPLeftSQLCallParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PRightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPRightBValueParserRuleCall_1_2_0()); }
		ruleBValue
		{ after(grammarAccess.getBPredicateAccess().getPRightBValueParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__SLeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSQLCallAccess().getSLeftIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSQLCallAccess().getSLeftIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SQLCall__SRightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSQLCallAccess().getSRightIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSQLCallAccess().getSRightIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Ti_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableInstanceAccess().getTi_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTableInstanceAccess().getTi_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInstance__Ti_typeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableInstanceAccess().getTi_typeTIAssignmentParserRuleCall_2_0()); }
		ruleTIAssignment
		{ after(grammarAccess.getTableInstanceAccess().getTi_typeTIAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Instance_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIAssignmentAccess().getInstance_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTIAssignmentAccess().getInstance_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIAssignment__Instance_typeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIAssignmentAccess().getInstance_typeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTIAssignmentAccess().getInstance_typeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__P_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBParameterAccess().getP_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBParameterAccess().getP_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBParameterAccess().getTypeBTypeParserRuleCall_2_0()); }
		ruleBType
		{ after(grammarAccess.getBParameterAccess().getTypeBTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getLeftIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBSubstitutionAccess().getLeftIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getRightBPredicateParserRuleCall_2_0()); }
		ruleBPredicate
		{ after(grammarAccess.getBSubstitutionAccess().getRightBPredicateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_STRING : '#' '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
