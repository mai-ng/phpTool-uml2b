/**
 * generated by Xtext 2.10.0
 */
package secureuml2SQL.secureUML2SQL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import secureuml2SQL.secureUML2SQL.BConstant;
import secureuml2SQL.secureUML2SQL.BESet;
import secureuml2SQL.secureUML2SQL.BMachine;
import secureuml2SQL.secureUML2SQL.BProperties;
import secureuml2SQL.secureUML2SQL.SecureUML2SQLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BMachine</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BMachineImpl#getM_name <em>Mname</em>}</li>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BMachineImpl#getEsets <em>Esets</em>}</li>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BMachineImpl#getCons <em>Cons</em>}</li>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BMachineImpl#getPros <em>Pros</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BMachineImpl extends SecureUML2SQLImpl implements BMachine
{
  /**
   * The default value of the '{@link #getM_name() <em>Mname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM_name()
   * @generated
   * @ordered
   */
  protected static final String MNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getM_name() <em>Mname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM_name()
   * @generated
   * @ordered
   */
  protected String m_name = MNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEsets() <em>Esets</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEsets()
   * @generated
   * @ordered
   */
  protected EList<BESet> esets;

  /**
   * The cached value of the '{@link #getCons() <em>Cons</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCons()
   * @generated
   * @ordered
   */
  protected EList<BConstant> cons;

  /**
   * The cached value of the '{@link #getPros() <em>Pros</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPros()
   * @generated
   * @ordered
   */
  protected EList<BProperties> pros;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BMachineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2SQLPackage.Literals.BMACHINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public String getM_name()
  {
    return m_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public void setM_name(String newM_name)
  {
    String oldM_name = m_name;
    m_name = newM_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2SQLPackage.BMACHINE__MNAME, oldM_name, m_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public EList<BESet> getEsets()
  {
    if (esets == null)
    {
      esets = new EObjectContainmentEList<BESet>(BESet.class, this, SecureUML2SQLPackage.BMACHINE__ESETS);
    }
    return esets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public EList<BConstant> getCons()
  {
    if (cons == null)
    {
      cons = new EObjectContainmentEList<BConstant>(BConstant.class, this, SecureUML2SQLPackage.BMACHINE__CONS);
    }
    return cons;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public EList<BProperties> getPros()
  {
    if (pros == null)
    {
      pros = new EObjectContainmentEList<BProperties>(BProperties.class, this, SecureUML2SQLPackage.BMACHINE__PROS);
    }
    return pros;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BMACHINE__ESETS:
        return ((InternalEList<?>)getEsets()).basicRemove(otherEnd, msgs);
      case SecureUML2SQLPackage.BMACHINE__CONS:
        return ((InternalEList<?>)getCons()).basicRemove(otherEnd, msgs);
      case SecureUML2SQLPackage.BMACHINE__PROS:
        return ((InternalEList<?>)getPros()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BMACHINE__MNAME:
        return getM_name();
      case SecureUML2SQLPackage.BMACHINE__ESETS:
        return getEsets();
      case SecureUML2SQLPackage.BMACHINE__CONS:
        return getCons();
      case SecureUML2SQLPackage.BMACHINE__PROS:
        return getPros();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BMACHINE__MNAME:
        setM_name((String)newValue);
        return;
      case SecureUML2SQLPackage.BMACHINE__ESETS:
        getEsets().clear();
        getEsets().addAll((Collection<? extends BESet>)newValue);
        return;
      case SecureUML2SQLPackage.BMACHINE__CONS:
        getCons().clear();
        getCons().addAll((Collection<? extends BConstant>)newValue);
        return;
      case SecureUML2SQLPackage.BMACHINE__PROS:
        getPros().clear();
        getPros().addAll((Collection<? extends BProperties>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BMACHINE__MNAME:
        setM_name(MNAME_EDEFAULT);
        return;
      case SecureUML2SQLPackage.BMACHINE__ESETS:
        getEsets().clear();
        return;
      case SecureUML2SQLPackage.BMACHINE__CONS:
        getCons().clear();
        return;
      case SecureUML2SQLPackage.BMACHINE__PROS:
        getPros().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BMACHINE__MNAME:
        return MNAME_EDEFAULT == null ? m_name != null : !MNAME_EDEFAULT.equals(m_name);
      case SecureUML2SQLPackage.BMACHINE__ESETS:
        return esets != null && !esets.isEmpty();
      case SecureUML2SQLPackage.BMACHINE__CONS:
        return cons != null && !cons.isEmpty();
      case SecureUML2SQLPackage.BMACHINE__PROS:
        return pros != null && !pros.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (m_name: ");
    result.append(m_name);
    result.append(')');
    return result.toString();
  }

} //BMachineImpl
