/**
 * generated by Xtext 2.10.0
 */
package secureuml2SQL.secureUML2SQL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import secureuml2SQL.secureUML2SQL.BConstant;
import secureuml2SQL.secureUML2SQL.SecureUML2SQLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BConstant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BConstantImpl#getConstant_name <em>Constant name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BConstantImpl extends MinimalEObjectImpl.Container implements BConstant
{
  /**
   * The default value of the '{@link #getConstant_name() <em>Constant name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_name()
   * @generated
   * @ordered
   */
  protected static final String CONSTANT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConstant_name() <em>Constant name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_name()
   * @generated
   * @ordered
   */
  protected String constant_name = CONSTANT_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BConstantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2SQLPackage.Literals.BCONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public String getConstant_name()
  {
    return constant_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public void setConstant_name(String newConstant_name)
  {
    String oldConstant_name = constant_name;
    constant_name = newConstant_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2SQLPackage.BCONSTANT__CONSTANT_NAME, oldConstant_name, constant_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BCONSTANT__CONSTANT_NAME:
        return getConstant_name();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BCONSTANT__CONSTANT_NAME:
        setConstant_name((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BCONSTANT__CONSTANT_NAME:
        setConstant_name(CONSTANT_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BCONSTANT__CONSTANT_NAME:
        return CONSTANT_NAME_EDEFAULT == null ? constant_name != null : !CONSTANT_NAME_EDEFAULT.equals(constant_name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (constant_name: ");
    result.append(constant_name);
    result.append(')');
    return result.toString();
  }

} //BConstantImpl
