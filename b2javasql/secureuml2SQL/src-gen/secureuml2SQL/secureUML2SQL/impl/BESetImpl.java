/**
 * generated by Xtext 2.10.0
 */
package secureuml2SQL.secureUML2SQL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import secureuml2SQL.secureUML2SQL.BESet;
import secureuml2SQL.secureUML2SQL.BSetValue;
import secureuml2SQL.secureUML2SQL.SecureUML2SQLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BE Set</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BESetImpl#getSet_name <em>Set name</em>}</li>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BESetImpl#getValues <em>Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BESetImpl extends MinimalEObjectImpl.Container implements BESet
{
  /**
   * The default value of the '{@link #getSet_name() <em>Set name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSet_name()
   * @generated
   * @ordered
   */
  protected static final String SET_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSet_name() <em>Set name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSet_name()
   * @generated
   * @ordered
   */
  protected String set_name = SET_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getValues() <em>Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValues()
   * @generated
   * @ordered
   */
  protected EList<BSetValue> values;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BESetImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2SQLPackage.Literals.BE_SET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public String getSet_name()
  {
    return set_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public void setSet_name(String newSet_name)
  {
    String oldSet_name = set_name;
    set_name = newSet_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2SQLPackage.BE_SET__SET_NAME, oldSet_name, set_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public EList<BSetValue> getValues()
  {
    if (values == null)
    {
      values = new EObjectContainmentEList<BSetValue>(BSetValue.class, this, SecureUML2SQLPackage.BE_SET__VALUES);
    }
    return values;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BE_SET__VALUES:
        return ((InternalEList<?>)getValues()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BE_SET__SET_NAME:
        return getSet_name();
      case SecureUML2SQLPackage.BE_SET__VALUES:
        return getValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BE_SET__SET_NAME:
        setSet_name((String)newValue);
        return;
      case SecureUML2SQLPackage.BE_SET__VALUES:
        getValues().clear();
        getValues().addAll((Collection<? extends BSetValue>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BE_SET__SET_NAME:
        setSet_name(SET_NAME_EDEFAULT);
        return;
      case SecureUML2SQLPackage.BE_SET__VALUES:
        getValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BE_SET__SET_NAME:
        return SET_NAME_EDEFAULT == null ? set_name != null : !SET_NAME_EDEFAULT.equals(set_name);
      case SecureUML2SQLPackage.BE_SET__VALUES:
        return values != null && !values.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (set_name: ");
    result.append(set_name);
    result.append(')');
    return result.toString();
  }

} //BESetImpl
