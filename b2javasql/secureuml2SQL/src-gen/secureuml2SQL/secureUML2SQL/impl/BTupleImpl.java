/**
 * generated by Xtext 2.10.0
 */
package secureuml2SQL.secureUML2SQL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import secureuml2SQL.secureUML2SQL.BTuple;
import secureuml2SQL.secureUML2SQL.SecureUML2SQLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>BTuple</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BTupleImpl#getRan <em>Ran</em>}</li>
 *   <li>{@link secureuml2SQL.secureUML2SQL.impl.BTupleImpl#getDom <em>Dom</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BTupleImpl extends MinimalEObjectImpl.Container implements BTuple
{
  /**
   * The default value of the '{@link #getRan() <em>Ran</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRan()
   * @generated
   * @ordered
   */
  protected static final String RAN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRan() <em>Ran</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRan()
   * @generated
   * @ordered
   */
  protected String ran = RAN_EDEFAULT;

  /**
   * The default value of the '{@link #getDom() <em>Dom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDom()
   * @generated
   * @ordered
   */
  protected static final String DOM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDom() <em>Dom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDom()
   * @generated
   * @ordered
   */
  protected String dom = DOM_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BTupleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SecureUML2SQLPackage.Literals.BTUPLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public String getRan()
  {
    return ran;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public void setRan(String newRan)
  {
    String oldRan = ran;
    ran = newRan;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2SQLPackage.BTUPLE__RAN, oldRan, ran));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public String getDom()
  {
    return dom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
public void setDom(String newDom)
  {
    String oldDom = dom;
    dom = newDom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SecureUML2SQLPackage.BTUPLE__DOM, oldDom, dom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BTUPLE__RAN:
        return getRan();
      case SecureUML2SQLPackage.BTUPLE__DOM:
        return getDom();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BTUPLE__RAN:
        setRan((String)newValue);
        return;
      case SecureUML2SQLPackage.BTUPLE__DOM:
        setDom((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BTUPLE__RAN:
        setRan(RAN_EDEFAULT);
        return;
      case SecureUML2SQLPackage.BTUPLE__DOM:
        setDom(DOM_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SecureUML2SQLPackage.BTUPLE__RAN:
        return RAN_EDEFAULT == null ? ran != null : !RAN_EDEFAULT.equals(ran);
      case SecureUML2SQLPackage.BTUPLE__DOM:
        return DOM_EDEFAULT == null ? dom != null : !DOM_EDEFAULT.equals(dom);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (ran: ");
    result.append(ran);
    result.append(", dom: ");
    result.append(dom);
    result.append(')');
    return result.toString();
  }

} //BTupleImpl
