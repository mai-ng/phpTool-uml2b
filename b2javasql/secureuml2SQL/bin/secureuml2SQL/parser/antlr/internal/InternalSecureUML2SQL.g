/*
 * generated by Xtext 2.10.0
 */
grammar InternalSecureUML2SQL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package secureuml2SQL.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package secureuml2SQL.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import secureuml2SQL.services.SecureUML2SQLGrammarAccess;

}

@parser::members {

 	private SecureUML2SQLGrammarAccess grammarAccess;

    public InternalSecureUML2SQLParser(TokenStream input, SecureUML2SQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SecureUML2SQL";
   	}

   	@Override
   	protected SecureUML2SQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSecureUML2SQL
entryRuleSecureUML2SQL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecureUML2SQLRule()); }
	iv_ruleSecureUML2SQL=ruleSecureUML2SQL
	{ $current=$iv_ruleSecureUML2SQL.current; }
	EOF;

// Rule SecureUML2SQL
ruleSecureUML2SQL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSecureUML2SQLAccess().getBMachineParserRuleCall());
	}
	this_BMachine_0=ruleBMachine
	{
		$current = $this_BMachine_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBMachine
entryRuleBMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBMachineRule()); }
	iv_ruleBMachine=ruleBMachine
	{ $current=$iv_ruleBMachine.current; }
	EOF;

// Rule BMachine
ruleBMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MACHINE'
		{
			newLeafNode(otherlv_0, grammarAccess.getBMachineAccess().getMACHINEKeyword_0());
		}
		(
			(
				lv_m_name_1_0=RULE_ID
				{
					newLeafNode(lv_m_name_1_0, grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBMachineRule());
					}
					setWithLastConsumed(
						$current,
						"m_name",
						lv_m_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='SETS'
		{
			newLeafNode(otherlv_2, grammarAccess.getBMachineAccess().getSETSKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_3_0());
				}
				lv_esets_3_0=ruleBESet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"esets",
						lv_esets_3_0,
						"secureuml2SQL.SecureUML2SQL.BESet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getBMachineAccess().getSemicolonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getEsetsBESetParserRuleCall_4_1_0());
					}
					lv_esets_5_0=ruleBESet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"esets",
							lv_esets_5_0,
							"secureuml2SQL.SecureUML2SQL.BESet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='CONSTANTS'
		{
			newLeafNode(otherlv_6, grammarAccess.getBMachineAccess().getCONSTANTSKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_6_0());
				}
				lv_cons_7_0=ruleBConstant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"cons",
						lv_cons_7_0,
						"secureuml2SQL.SecureUML2SQL.BConstant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getBMachineAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getConsBConstantParserRuleCall_7_1_0());
					}
					lv_cons_9_0=ruleBConstant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"cons",
							lv_cons_9_0,
							"secureuml2SQL.SecureUML2SQL.BConstant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='PROPERTIES'
		{
			newLeafNode(otherlv_10, grammarAccess.getBMachineAccess().getPROPERTIESKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_9_0());
				}
				lv_pros_11_0=ruleBProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBMachineRule());
					}
					add(
						$current,
						"pros",
						lv_pros_11_0,
						"secureuml2SQL.SecureUML2SQL.BProperties");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12='&'
			{
				newLeafNode(otherlv_12, grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBMachineAccess().getProsBPropertiesParserRuleCall_10_1_0());
					}
					lv_pros_13_0=ruleBProperties
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBMachineRule());
						}
						add(
							$current,
							"pros",
							lv_pros_13_0,
							"secureuml2SQL.SecureUML2SQL.BProperties");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14='END'
		{
			newLeafNode(otherlv_14, grammarAccess.getBMachineAccess().getENDKeyword_11());
		}
	)
;

// Entry rule entryRuleBProperties
entryRuleBProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBPropertiesRule()); }
	iv_ruleBProperties=ruleBProperties
	{ $current=$iv_ruleBProperties.current; }
	EOF;

// Rule BProperties
ruleBProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_cons_0_0=RULE_ID
				{
					newLeafNode(lv_cons_0_0, grammarAccess.getBPropertiesAccess().getConsIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBPropertiesRule());
					}
					setWithLastConsumed(
						$current,
						"cons",
						lv_cons_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBPropertiesAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_prop_2_0='{'
				{
					newLeafNode(lv_prop_2_0, grammarAccess.getBPropertiesAccess().getPropLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBPropertiesRule());
					}
					setWithLastConsumed($current, "prop", lv_prop_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_3_0());
				}
				lv_pairs_3_0=ruleBTuple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBPropertiesRule());
					}
					add(
						$current,
						"pairs",
						lv_pairs_3_0,
						"secureuml2SQL.SecureUML2SQL.BTuple");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBPropertiesAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBPropertiesAccess().getPairsBTupleParserRuleCall_4_1_0());
					}
					lv_pairs_5_0=ruleBTuple
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPropertiesRule());
						}
						add(
							$current,
							"pairs",
							lv_pairs_5_0,
							"secureuml2SQL.SecureUML2SQL.BTuple");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBPropertiesAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleBTuple
entryRuleBTuple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTupleRule()); }
	iv_ruleBTuple=ruleBTuple
	{ $current=$iv_ruleBTuple.current; }
	EOF;

// Rule BTuple
ruleBTuple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ran_0_0=RULE_ID
				{
					newLeafNode(lv_ran_0_0, grammarAccess.getBTupleAccess().getRanIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBTupleRule());
					}
					setWithLastConsumed(
						$current,
						"ran",
						lv_ran_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='|->'
		{
			newLeafNode(otherlv_1, grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				lv_dom_2_0=RULE_ID
				{
					newLeafNode(lv_dom_2_0, grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBTupleRule());
					}
					setWithLastConsumed(
						$current,
						"dom",
						lv_dom_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBESet
entryRuleBESet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBESetRule()); }
	iv_ruleBESet=ruleBESet
	{ $current=$iv_ruleBESet.current; }
	EOF;

// Rule BESet
ruleBESet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_set_name_0_0=RULE_ID
				{
					newLeafNode(lv_set_name_0_0, grammarAccess.getBESetAccess().getSet_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBESetRule());
					}
					setWithLastConsumed(
						$current,
						"set_name",
						lv_set_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBESetAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBESetAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_3_0());
				}
				lv_values_3_0=ruleBSetValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBESetRule());
					}
					add(
						$current,
						"values",
						lv_values_3_0,
						"secureuml2SQL.SecureUML2SQL.BSetValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBESetAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBESetAccess().getValuesBSetValueParserRuleCall_4_1_0());
					}
					lv_values_5_0=ruleBSetValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBESetRule());
						}
						add(
							$current,
							"values",
							lv_values_5_0,
							"secureuml2SQL.SecureUML2SQL.BSetValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getBESetAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleBSetValue
entryRuleBSetValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSetValueRule()); }
	iv_ruleBSetValue=ruleBSetValue
	{ $current=$iv_ruleBSetValue.current; }
	EOF;

// Rule BSetValue
ruleBSetValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_name_0_0=RULE_ID
			{
				newLeafNode(lv_value_name_0_0, grammarAccess.getBSetValueAccess().getValue_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBSetValueRule());
				}
				setWithLastConsumed(
					$current,
					"value_name",
					lv_value_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBConstant
entryRuleBConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBConstantRule()); }
	iv_ruleBConstant=ruleBConstant
	{ $current=$iv_ruleBConstant.current; }
	EOF;

// Rule BConstant
ruleBConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_constant_name_0_0=RULE_ID
			{
				newLeafNode(lv_constant_name_0_0, grammarAccess.getBConstantAccess().getConstant_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBConstantRule());
				}
				setWithLastConsumed(
					$current,
					"constant_name",
					lv_constant_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
