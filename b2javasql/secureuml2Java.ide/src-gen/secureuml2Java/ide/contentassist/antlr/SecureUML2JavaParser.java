/*
 * generated by Xtext 2.10.0
 */
package secureuml2Java.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import secureuml2Java.ide.contentassist.antlr.internal.InternalSecureUML2JavaParser;
import secureuml2Java.services.SecureUML2JavaGrammarAccess;

public class SecureUML2JavaParser extends AbstractContentAssistParser {

	@Inject
	private SecureUML2JavaGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSecureUML2JavaParser createParser() {
		InternalSecureUML2JavaParser result = new InternalSecureUML2JavaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBSubstitutionAccess().getSleftAlternatives_0_0(), "rule__BSubstitution__SleftAlternatives_0_0");
					put(grammarAccess.getBPredicateAccess().getPleftAlternatives_0_0(), "rule__BPredicate__PleftAlternatives_0_0");
					put(grammarAccess.getBPredicateAccess().getPrightAlternatives_2_0(), "rule__BPredicate__PrightAlternatives_2_0");
					put(grammarAccess.getBTupleAccess().getRanAlternatives_0_0(), "rule__BTuple__RanAlternatives_0_0");
					put(grammarAccess.getBInvariantAccess().getAlternatives(), "rule__BInvariant__Alternatives");
					put(grammarAccess.getBFunctionAccess().getAlternatives_1(), "rule__BFunction__Alternatives_1");
					put(grammarAccess.getBMachineAccess().getGroup(), "rule__BMachine__Group__0");
					put(grammarAccess.getBMachineAccess().getGroup_4(), "rule__BMachine__Group_4__0");
					put(grammarAccess.getBMachineAccess().getGroup_7(), "rule__BMachine__Group_7__0");
					put(grammarAccess.getBMachineAccess().getGroup_10(), "rule__BMachine__Group_10__0");
					put(grammarAccess.getBMachineAccess().getGroup_13(), "rule__BMachine__Group_13__0");
					put(grammarAccess.getBMachineAccess().getGroup_16(), "rule__BMachine__Group_16__0");
					put(grammarAccess.getBMachineAccess().getGroup_19(), "rule__BMachine__Group_19__0");
					put(grammarAccess.getVoidOperationAccess().getGroup(), "rule__VoidOperation__Group__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_2(), "rule__VoidOperation__Group_2__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_2_1(), "rule__VoidOperation__Group_2_1__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_6(), "rule__VoidOperation__Group_6__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_6_1(), "rule__VoidOperation__Group_6_1__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_7(), "rule__VoidOperation__Group_7__0");
					put(grammarAccess.getVoidOperationAccess().getGroup_10(), "rule__VoidOperation__Group_10__0");
					put(grammarAccess.getStringOperationAccess().getGroup(), "rule__StringOperation__Group__0");
					put(grammarAccess.getStringOperationAccess().getGroup_4(), "rule__StringOperation__Group_4__0");
					put(grammarAccess.getStringOperationAccess().getGroup_4_1(), "rule__StringOperation__Group_4_1__0");
					put(grammarAccess.getStringOperationAccess().getGroup_8(), "rule__StringOperation__Group_8__0");
					put(grammarAccess.getStringOperationAccess().getGroup_8_1(), "rule__StringOperation__Group_8_1__0");
					put(grammarAccess.getStringOperationAccess().getGroup_12(), "rule__StringOperation__Group_12__0");
					put(grammarAccess.getStringOperationAccess().getGroup_16(), "rule__StringOperation__Group_16__0");
					put(grammarAccess.getBSubstitutionAccess().getGroup(), "rule__BSubstitution__Group__0");
					put(grammarAccess.getBPredicateAccess().getGroup(), "rule__BPredicate__Group__0");
					put(grammarAccess.getBDomAccess().getGroup(), "rule__BDom__Group__0");
					put(grammarAccess.getBParameterAccess().getGroup(), "rule__BParameter__Group__0");
					put(grammarAccess.getBInitAccess().getGroup(), "rule__BInit__Group__0");
					put(grammarAccess.getBTupleAccess().getGroup(), "rule__BTuple__Group__0");
					put(grammarAccess.getBOperationCallAccess().getGroup(), "rule__BOperationCall__Group__0");
					put(grammarAccess.getBInvariantAccess().getGroup_0(), "rule__BInvariant__Group_0__0");
					put(grammarAccess.getBInvariantAccess().getGroup_1(), "rule__BInvariant__Group_1__0");
					put(grammarAccess.getBFunctionAccess().getGroup(), "rule__BFunction__Group__0");
					put(grammarAccess.getBMachineAccess().getM_nameAssignment_1(), "rule__BMachine__M_nameAssignment_1");
					put(grammarAccess.getBMachineAccess().getSeesAssignment_3(), "rule__BMachine__SeesAssignment_3");
					put(grammarAccess.getBMachineAccess().getSeesAssignment_4_1(), "rule__BMachine__SeesAssignment_4_1");
					put(grammarAccess.getBMachineAccess().getVarsAssignment_6(), "rule__BMachine__VarsAssignment_6");
					put(grammarAccess.getBMachineAccess().getVarsAssignment_7_1(), "rule__BMachine__VarsAssignment_7_1");
					put(grammarAccess.getBMachineAccess().getInvsAssignment_9(), "rule__BMachine__InvsAssignment_9");
					put(grammarAccess.getBMachineAccess().getInvsAssignment_10_1(), "rule__BMachine__InvsAssignment_10_1");
					put(grammarAccess.getBMachineAccess().getInitsAssignment_12(), "rule__BMachine__InitsAssignment_12");
					put(grammarAccess.getBMachineAccess().getInitsAssignment_13_1(), "rule__BMachine__InitsAssignment_13_1");
					put(grammarAccess.getBMachineAccess().getVopsAssignment_15(), "rule__BMachine__VopsAssignment_15");
					put(grammarAccess.getBMachineAccess().getVopsAssignment_16_1(), "rule__BMachine__VopsAssignment_16_1");
					put(grammarAccess.getBMachineAccess().getSopsAssignment_18(), "rule__BMachine__SopsAssignment_18");
					put(grammarAccess.getBMachineAccess().getSopsAssignment_19_1(), "rule__BMachine__SopsAssignment_19_1");
					put(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0(), "rule__VoidOperation__Op_nameAssignment_0");
					put(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0(), "rule__VoidOperation__PListAssignment_2_0");
					put(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1(), "rule__VoidOperation__PListAssignment_2_1_1");
					put(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0(), "rule__VoidOperation__ParamsAssignment_6_0");
					put(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1(), "rule__VoidOperation__ParamsAssignment_6_1_1");
					put(grammarAccess.getVoidOperationAccess().getPreAssignment_7_1(), "rule__VoidOperation__PreAssignment_7_1");
					put(grammarAccess.getVoidOperationAccess().getSubsAssignment_9(), "rule__VoidOperation__SubsAssignment_9");
					put(grammarAccess.getVoidOperationAccess().getSubsAssignment_10_1(), "rule__VoidOperation__SubsAssignment_10_1");
					put(grammarAccess.getStringOperationAccess().getRes1Assignment_0(), "rule__StringOperation__Res1Assignment_0");
					put(grammarAccess.getStringOperationAccess().getOp_nameAssignment_2(), "rule__StringOperation__Op_nameAssignment_2");
					put(grammarAccess.getStringOperationAccess().getPListAssignment_4_0(), "rule__StringOperation__PListAssignment_4_0");
					put(grammarAccess.getStringOperationAccess().getPListAssignment_4_1_1(), "rule__StringOperation__PListAssignment_4_1_1");
					put(grammarAccess.getStringOperationAccess().getParamsAssignment_8_0(), "rule__StringOperation__ParamsAssignment_8_0");
					put(grammarAccess.getStringOperationAccess().getParamsAssignment_8_1_1(), "rule__StringOperation__ParamsAssignment_8_1_1");
					put(grammarAccess.getStringOperationAccess().getPres1Assignment_11(), "rule__StringOperation__Pres1Assignment_11");
					put(grammarAccess.getStringOperationAccess().getPres1Assignment_12_1(), "rule__StringOperation__Pres1Assignment_12_1");
					put(grammarAccess.getStringOperationAccess().getPres2Assignment_15(), "rule__StringOperation__Pres2Assignment_15");
					put(grammarAccess.getStringOperationAccess().getPres2Assignment_16_1(), "rule__StringOperation__Pres2Assignment_16_1");
					put(grammarAccess.getStringOperationAccess().getSubifAssignment_18(), "rule__StringOperation__SubifAssignment_18");
					put(grammarAccess.getStringOperationAccess().getSubelse2Assignment_20(), "rule__StringOperation__Subelse2Assignment_20");
					put(grammarAccess.getStringOperationAccess().getSubelse1Assignment_23(), "rule__StringOperation__Subelse1Assignment_23");
					put(grammarAccess.getBSubstitutionAccess().getSleftAssignment_0(), "rule__BSubstitution__SleftAssignment_0");
					put(grammarAccess.getBSubstitutionAccess().getSrightAssignment_2(), "rule__BSubstitution__SrightAssignment_2");
					put(grammarAccess.getBPredicateAccess().getPleftAssignment_0(), "rule__BPredicate__PleftAssignment_0");
					put(grammarAccess.getBPredicateAccess().getPrightAssignment_2(), "rule__BPredicate__PrightAssignment_2");
					put(grammarAccess.getBDomAccess().getObjAssignment_2(), "rule__BDom__ObjAssignment_2");
					put(grammarAccess.getBParameterAccess().getP_nameAssignment_0(), "rule__BParameter__P_nameAssignment_0");
					put(grammarAccess.getBParameterAccess().getTypeAssignment_2(), "rule__BParameter__TypeAssignment_2");
					put(grammarAccess.getBTypeAccess().getType_nameAssignment(), "rule__BType__Type_nameAssignment");
					put(grammarAccess.getBInitAccess().getVarAssignment_0(), "rule__BInit__VarAssignment_0");
					put(grammarAccess.getBInitAccess().getPairAssignment_3(), "rule__BInit__PairAssignment_3");
					put(grammarAccess.getBTupleAccess().getRanAssignment_0(), "rule__BTuple__RanAssignment_0");
					put(grammarAccess.getBTupleAccess().getDomAssignment_2(), "rule__BTuple__DomAssignment_2");
					put(grammarAccess.getBOperationCallAccess().getOpAssignment_0(), "rule__BOperationCall__OpAssignment_0");
					put(grammarAccess.getBOperationCallAccess().getParAssignment_2(), "rule__BOperationCall__ParAssignment_2");
					put(grammarAccess.getBInvariantAccess().getVarAssignment_0_0(), "rule__BInvariant__VarAssignment_0_0");
					put(grammarAccess.getBInvariantAccess().getVardifAssignment_0_2(), "rule__BInvariant__VardifAssignment_0_2");
					put(grammarAccess.getBInvariantAccess().getDomAssignment_1_0(), "rule__BInvariant__DomAssignment_1_0");
					put(grammarAccess.getBInvariantAccess().getRanAssignment_1_2(), "rule__BInvariant__RanAssignment_1_2");
					put(grammarAccess.getBFunctionAccess().getRanAssignment_0(), "rule__BFunction__RanAssignment_0");
					put(grammarAccess.getBFunctionAccess().getDomAssignment_2(), "rule__BFunction__DomAssignment_2");
					put(grammarAccess.getBVariableAccess().getVar_nameAssignment(), "rule__BVariable__Var_nameAssignment");
					put(grammarAccess.getBSeesAccess().getM_nameAssignment(), "rule__BSees__M_nameAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalSecureUML2JavaParser typedParser = (InternalSecureUML2JavaParser) parser;
			typedParser.entryRuleSecureUML2Java();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SecureUML2JavaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SecureUML2JavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
