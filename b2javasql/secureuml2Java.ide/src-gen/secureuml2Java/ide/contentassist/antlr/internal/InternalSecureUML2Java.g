/*
 * generated by Xtext 2.10.0
 */
grammar InternalSecureUML2Java;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package secureuml2Java.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package secureuml2Java.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import secureuml2Java.services.SecureUML2JavaGrammarAccess;

}
@parser::members {
	private SecureUML2JavaGrammarAccess grammarAccess;

	public void setGrammarAccess(SecureUML2JavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSecureUML2Java
entryRuleSecureUML2Java
:
{ before(grammarAccess.getSecureUML2JavaRule()); }
	 ruleSecureUML2Java
{ after(grammarAccess.getSecureUML2JavaRule()); } 
	 EOF 
;

// Rule SecureUML2Java
ruleSecureUML2Java 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSecureUML2JavaAccess().getBMachineParserRuleCall()); }
		ruleBMachine
		{ after(grammarAccess.getSecureUML2JavaAccess().getBMachineParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBMachine
entryRuleBMachine
:
{ before(grammarAccess.getBMachineRule()); }
	 ruleBMachine
{ after(grammarAccess.getBMachineRule()); } 
	 EOF 
;

// Rule BMachine
ruleBMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBMachineAccess().getGroup()); }
		(rule__BMachine__Group__0)
		{ after(grammarAccess.getBMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVoidOperation
entryRuleVoidOperation
:
{ before(grammarAccess.getVoidOperationRule()); }
	 ruleVoidOperation
{ after(grammarAccess.getVoidOperationRule()); } 
	 EOF 
;

// Rule VoidOperation
ruleVoidOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVoidOperationAccess().getGroup()); }
		(rule__VoidOperation__Group__0)
		{ after(grammarAccess.getVoidOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringOperation
entryRuleStringOperation
:
{ before(grammarAccess.getStringOperationRule()); }
	 ruleStringOperation
{ after(grammarAccess.getStringOperationRule()); } 
	 EOF 
;

// Rule StringOperation
ruleStringOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringOperationAccess().getGroup()); }
		(rule__StringOperation__Group__0)
		{ after(grammarAccess.getStringOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSubstitution
entryRuleBSubstitution
:
{ before(grammarAccess.getBSubstitutionRule()); }
	 ruleBSubstitution
{ after(grammarAccess.getBSubstitutionRule()); } 
	 EOF 
;

// Rule BSubstitution
ruleBSubstitution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getGroup()); }
		(rule__BSubstitution__Group__0)
		{ after(grammarAccess.getBSubstitutionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBPredicate
entryRuleBPredicate
:
{ before(grammarAccess.getBPredicateRule()); }
	 ruleBPredicate
{ after(grammarAccess.getBPredicateRule()); } 
	 EOF 
;

// Rule BPredicate
ruleBPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBPredicateAccess().getGroup()); }
		(rule__BPredicate__Group__0)
		{ after(grammarAccess.getBPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBDom
entryRuleBDom
:
{ before(grammarAccess.getBDomRule()); }
	 ruleBDom
{ after(grammarAccess.getBDomRule()); } 
	 EOF 
;

// Rule BDom
ruleBDom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBDomAccess().getGroup()); }
		(rule__BDom__Group__0)
		{ after(grammarAccess.getBDomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBParameter
entryRuleBParameter
:
{ before(grammarAccess.getBParameterRule()); }
	 ruleBParameter
{ after(grammarAccess.getBParameterRule()); } 
	 EOF 
;

// Rule BParameter
ruleBParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBParameterAccess().getGroup()); }
		(rule__BParameter__Group__0)
		{ after(grammarAccess.getBParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBType
entryRuleBType
:
{ before(grammarAccess.getBTypeRule()); }
	 ruleBType
{ after(grammarAccess.getBTypeRule()); } 
	 EOF 
;

// Rule BType
ruleBType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTypeAccess().getType_nameAssignment()); }
		(rule__BType__Type_nameAssignment)
		{ after(grammarAccess.getBTypeAccess().getType_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBInit
entryRuleBInit
:
{ before(grammarAccess.getBInitRule()); }
	 ruleBInit
{ after(grammarAccess.getBInitRule()); } 
	 EOF 
;

// Rule BInit
ruleBInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBInitAccess().getGroup()); }
		(rule__BInit__Group__0)
		{ after(grammarAccess.getBInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBTuple
entryRuleBTuple
:
{ before(grammarAccess.getBTupleRule()); }
	 ruleBTuple
{ after(grammarAccess.getBTupleRule()); } 
	 EOF 
;

// Rule BTuple
ruleBTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTupleAccess().getGroup()); }
		(rule__BTuple__Group__0)
		{ after(grammarAccess.getBTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOperationCall
entryRuleBOperationCall
:
{ before(grammarAccess.getBOperationCallRule()); }
	 ruleBOperationCall
{ after(grammarAccess.getBOperationCallRule()); } 
	 EOF 
;

// Rule BOperationCall
ruleBOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOperationCallAccess().getGroup()); }
		(rule__BOperationCall__Group__0)
		{ after(grammarAccess.getBOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBInvariant
entryRuleBInvariant
:
{ before(grammarAccess.getBInvariantRule()); }
	 ruleBInvariant
{ after(grammarAccess.getBInvariantRule()); } 
	 EOF 
;

// Rule BInvariant
ruleBInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBInvariantAccess().getAlternatives()); }
		(rule__BInvariant__Alternatives)
		{ after(grammarAccess.getBInvariantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBFunction
entryRuleBFunction
:
{ before(grammarAccess.getBFunctionRule()); }
	 ruleBFunction
{ after(grammarAccess.getBFunctionRule()); } 
	 EOF 
;

// Rule BFunction
ruleBFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBFunctionAccess().getGroup()); }
		(rule__BFunction__Group__0)
		{ after(grammarAccess.getBFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBVariable
entryRuleBVariable
:
{ before(grammarAccess.getBVariableRule()); }
	 ruleBVariable
{ after(grammarAccess.getBVariableRule()); } 
	 EOF 
;

// Rule BVariable
ruleBVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBVariableAccess().getVar_nameAssignment()); }
		(rule__BVariable__Var_nameAssignment)
		{ after(grammarAccess.getBVariableAccess().getVar_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBSees
entryRuleBSees
:
{ before(grammarAccess.getBSeesRule()); }
	 ruleBSees
{ after(grammarAccess.getBSeesRule()); } 
	 EOF 
;

// Rule BSees
ruleBSees 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBSeesAccess().getM_nameAssignment()); }
		(rule__BSees__M_nameAssignment)
		{ after(grammarAccess.getBSeesAccess().getM_nameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__SleftAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getSleftBTypeParserRuleCall_0_0_0()); }
		ruleBType
		{ after(grammarAccess.getBSubstitutionAccess().getSleftBTypeParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBSubstitutionAccess().getSleftBOperationCallParserRuleCall_0_0_1()); }
		ruleBOperationCall
		{ after(grammarAccess.getBSubstitutionAccess().getSleftBOperationCallParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PleftAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPleftBTypeParserRuleCall_0_0_0()); }
		ruleBType
		{ after(grammarAccess.getBPredicateAccess().getPleftBTypeParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBPredicateAccess().getPleftBTupleParserRuleCall_0_0_1()); }
		ruleBTuple
		{ after(grammarAccess.getBPredicateAccess().getPleftBTupleParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PrightAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPrightBDomParserRuleCall_2_0_0()); }
		ruleBDom
		{ after(grammarAccess.getBPredicateAccess().getPrightBDomParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBPredicateAccess().getPrightBTypeParserRuleCall_2_0_1()); }
		ruleBType
		{ after(grammarAccess.getBPredicateAccess().getPrightBTypeParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__RanAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTupleAccess().getRanBTypeParserRuleCall_0_0_0()); }
		ruleBType
		{ after(grammarAccess.getBTupleAccess().getRanBTypeParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBTupleAccess().getRanBOperationCallParserRuleCall_0_0_1()); }
		ruleBOperationCall
		{ after(grammarAccess.getBTupleAccess().getRanBOperationCallParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInvariantAccess().getGroup_0()); }
		(rule__BInvariant__Group_0__0)
		{ after(grammarAccess.getBInvariantAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBInvariantAccess().getGroup_1()); }
		(rule__BInvariant__Group_1__0)
		{ after(grammarAccess.getBInvariantAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0()); }
		'-->'
		{ after(grammarAccess.getBFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBFunctionAccess().getPlusSignHyphenMinusGreaterThanSignKeyword_1_1()); }
		'+->'
		{ after(grammarAccess.getBFunctionAccess().getPlusSignHyphenMinusGreaterThanSignKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBFunctionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_2()); }
		'<->'
		{ after(grammarAccess.getBFunctionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__0__Impl
	rule__BMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getMACHINEKeyword_0()); }
	'MACHINE'
	{ after(grammarAccess.getBMachineAccess().getMACHINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__1__Impl
	rule__BMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getM_nameAssignment_1()); }
	(rule__BMachine__M_nameAssignment_1)
	{ after(grammarAccess.getBMachineAccess().getM_nameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__2__Impl
	rule__BMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSEESKeyword_2()); }
	'SEES'
	{ after(grammarAccess.getBMachineAccess().getSEESKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__3__Impl
	rule__BMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSeesAssignment_3()); }
	(rule__BMachine__SeesAssignment_3)
	{ after(grammarAccess.getBMachineAccess().getSeesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__4__Impl
	rule__BMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_4()); }
	(rule__BMachine__Group_4__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__5__Impl
	rule__BMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVARIABLESKeyword_5()); }
	'VARIABLES'
	{ after(grammarAccess.getBMachineAccess().getVARIABLESKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__6__Impl
	rule__BMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVarsAssignment_6()); }
	(rule__BMachine__VarsAssignment_6)
	{ after(grammarAccess.getBMachineAccess().getVarsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__7__Impl
	rule__BMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_7()); }
	(rule__BMachine__Group_7__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__8__Impl
	rule__BMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getINVARIANTKeyword_8()); }
	'INVARIANT'
	{ after(grammarAccess.getBMachineAccess().getINVARIANTKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__9__Impl
	rule__BMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getInvsAssignment_9()); }
	(rule__BMachine__InvsAssignment_9)
	{ after(grammarAccess.getBMachineAccess().getInvsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__10__Impl
	rule__BMachine__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_10()); }
	(rule__BMachine__Group_10__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__11__Impl
	rule__BMachine__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getINITIALISATIONKeyword_11()); }
	'INITIALISATION'
	{ after(grammarAccess.getBMachineAccess().getINITIALISATIONKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__12__Impl
	rule__BMachine__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getInitsAssignment_12()); }
	(rule__BMachine__InitsAssignment_12)
	{ after(grammarAccess.getBMachineAccess().getInitsAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__13__Impl
	rule__BMachine__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_13()); }
	(rule__BMachine__Group_13__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__14__Impl
	rule__BMachine__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getOPERATIONSKeyword_14()); }
	'OPERATIONS'
	{ after(grammarAccess.getBMachineAccess().getOPERATIONSKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__15__Impl
	rule__BMachine__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVopsAssignment_15()); }
	(rule__BMachine__VopsAssignment_15)
	{ after(grammarAccess.getBMachineAccess().getVopsAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__16__Impl
	rule__BMachine__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_16()); }
	(rule__BMachine__Group_16__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__17__Impl
	rule__BMachine__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSemicolonKeyword_17()); }
	';'
	{ after(grammarAccess.getBMachineAccess().getSemicolonKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__18__Impl
	rule__BMachine__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSopsAssignment_18()); }
	(rule__BMachine__SopsAssignment_18)
	{ after(grammarAccess.getBMachineAccess().getSopsAssignment_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__19__Impl
	rule__BMachine__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getGroup_19()); }
	(rule__BMachine__Group_19__0)*
	{ after(grammarAccess.getBMachineAccess().getGroup_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getENDKeyword_20()); }
	'END'
	{ after(grammarAccess.getBMachineAccess().getENDKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_4__0__Impl
	rule__BMachine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getBMachineAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSeesAssignment_4_1()); }
	(rule__BMachine__SeesAssignment_4_1)
	{ after(grammarAccess.getBMachineAccess().getSeesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_7__0__Impl
	rule__BMachine__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getBMachineAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVarsAssignment_7_1()); }
	(rule__BMachine__VarsAssignment_7_1)
	{ after(grammarAccess.getBMachineAccess().getVarsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_10__0__Impl
	rule__BMachine__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0()); }
	'&'
	{ after(grammarAccess.getBMachineAccess().getAmpersandKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getInvsAssignment_10_1()); }
	(rule__BMachine__InvsAssignment_10_1)
	{ after(grammarAccess.getBMachineAccess().getInvsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_13__0__Impl
	rule__BMachine__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVerticalLineVerticalLineKeyword_13_0()); }
	'||'
	{ after(grammarAccess.getBMachineAccess().getVerticalLineVerticalLineKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getInitsAssignment_13_1()); }
	(rule__BMachine__InitsAssignment_13_1)
	{ after(grammarAccess.getBMachineAccess().getInitsAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_16__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_16__0__Impl
	rule__BMachine__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_16__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSemicolonKeyword_16_0()); }
	';'
	{ after(grammarAccess.getBMachineAccess().getSemicolonKeyword_16_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_16__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_16__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_16__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getVopsAssignment_16_1()); }
	(rule__BMachine__VopsAssignment_16_1)
	{ after(grammarAccess.getBMachineAccess().getVopsAssignment_16_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__Group_19__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_19__0__Impl
	rule__BMachine__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_19__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSemicolonKeyword_19_0()); }
	';'
	{ after(grammarAccess.getBMachineAccess().getSemicolonKeyword_19_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_19__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BMachine__Group_19__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__Group_19__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBMachineAccess().getSopsAssignment_19_1()); }
	(rule__BMachine__SopsAssignment_19_1)
	{ after(grammarAccess.getBMachineAccess().getSopsAssignment_19_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__0__Impl
	rule__VoidOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0()); }
	(rule__VoidOperation__Op_nameAssignment_0)
	{ after(grammarAccess.getVoidOperationAccess().getOp_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__1__Impl
	rule__VoidOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__2__Impl
	rule__VoidOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_2()); }
	(rule__VoidOperation__Group_2__0)?
	{ after(grammarAccess.getVoidOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__3__Impl
	rule__VoidOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__4__Impl
	rule__VoidOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__5__Impl
	rule__VoidOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPREKeyword_5()); }
	'PRE'
	{ after(grammarAccess.getVoidOperationAccess().getPREKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__6__Impl
	rule__VoidOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_6()); }
	(rule__VoidOperation__Group_6__0)
	{ after(grammarAccess.getVoidOperationAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__7__Impl
	rule__VoidOperation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_7()); }
	(rule__VoidOperation__Group_7__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__8__Impl
	rule__VoidOperation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getTHENKeyword_8()); }
	'THEN'
	{ after(grammarAccess.getVoidOperationAccess().getTHENKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__9__Impl
	rule__VoidOperation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getSubsAssignment_9()); }
	(rule__VoidOperation__SubsAssignment_9)
	{ after(grammarAccess.getVoidOperationAccess().getSubsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__10__Impl
	rule__VoidOperation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_10()); }
	(rule__VoidOperation__Group_10__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getENDKeyword_11()); }
	'END'
	{ after(grammarAccess.getVoidOperationAccess().getENDKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2__0__Impl
	rule__VoidOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0()); }
	(rule__VoidOperation__PListAssignment_2_0)
	{ after(grammarAccess.getVoidOperationAccess().getPListAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_2_1()); }
	(rule__VoidOperation__Group_2_1__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2_1__0__Impl
	rule__VoidOperation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1()); }
	(rule__VoidOperation__PListAssignment_2_1_1)
	{ after(grammarAccess.getVoidOperationAccess().getPListAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6__0__Impl
	rule__VoidOperation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0()); }
	(rule__VoidOperation__ParamsAssignment_6_0)
	{ after(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getGroup_6_1()); }
	(rule__VoidOperation__Group_6_1__0)*
	{ after(grammarAccess.getVoidOperationAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6_1__0__Impl
	rule__VoidOperation__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0()); }
	'&'
	{ after(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1()); }
	(rule__VoidOperation__ParamsAssignment_6_1_1)
	{ after(grammarAccess.getVoidOperationAccess().getParamsAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_7__0__Impl
	rule__VoidOperation__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_7_0()); }
	'&'
	{ after(grammarAccess.getVoidOperationAccess().getAmpersandKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getPreAssignment_7_1()); }
	(rule__VoidOperation__PreAssignment_7_1)
	{ after(grammarAccess.getVoidOperationAccess().getPreAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidOperation__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_10__0__Impl
	rule__VoidOperation__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getVerticalLineVerticalLineKeyword_10_0()); }
	'||'
	{ after(grammarAccess.getVoidOperationAccess().getVerticalLineVerticalLineKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidOperation__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidOperationAccess().getSubsAssignment_10_1()); }
	(rule__VoidOperation__SubsAssignment_10_1)
	{ after(grammarAccess.getVoidOperationAccess().getSubsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__0__Impl
	rule__StringOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getRes1Assignment_0()); }
	(rule__StringOperation__Res1Assignment_0)
	{ after(grammarAccess.getStringOperationAccess().getRes1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__1__Impl
	rule__StringOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1()); }
	'<--'
	{ after(grammarAccess.getStringOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__2__Impl
	rule__StringOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getOp_nameAssignment_2()); }
	(rule__StringOperation__Op_nameAssignment_2)
	{ after(grammarAccess.getStringOperationAccess().getOp_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__3__Impl
	rule__StringOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getStringOperationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__4__Impl
	rule__StringOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_4()); }
	(rule__StringOperation__Group_4__0)?
	{ after(grammarAccess.getStringOperationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__5__Impl
	rule__StringOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getStringOperationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__6__Impl
	rule__StringOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getStringOperationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__7__Impl
	rule__StringOperation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPREKeyword_7()); }
	'PRE'
	{ after(grammarAccess.getStringOperationAccess().getPREKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__8__Impl
	rule__StringOperation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_8()); }
	(rule__StringOperation__Group_8__0)
	{ after(grammarAccess.getStringOperationAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__9__Impl
	rule__StringOperation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getTHENKeyword_9()); }
	'THEN'
	{ after(grammarAccess.getStringOperationAccess().getTHENKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__10__Impl
	rule__StringOperation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getIFKeyword_10()); }
	'IF'
	{ after(grammarAccess.getStringOperationAccess().getIFKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__11__Impl
	rule__StringOperation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPres1Assignment_11()); }
	(rule__StringOperation__Pres1Assignment_11)
	{ after(grammarAccess.getStringOperationAccess().getPres1Assignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__12__Impl
	rule__StringOperation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_12()); }
	(rule__StringOperation__Group_12__0)*
	{ after(grammarAccess.getStringOperationAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__13__Impl
	rule__StringOperation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getTHENKeyword_13()); }
	'THEN'
	{ after(grammarAccess.getStringOperationAccess().getTHENKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__14__Impl
	rule__StringOperation__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getIFKeyword_14()); }
	'IF'
	{ after(grammarAccess.getStringOperationAccess().getIFKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__15__Impl
	rule__StringOperation__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPres2Assignment_15()); }
	(rule__StringOperation__Pres2Assignment_15)
	{ after(grammarAccess.getStringOperationAccess().getPres2Assignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__16__Impl
	rule__StringOperation__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_16()); }
	(rule__StringOperation__Group_16__0)*
	{ after(grammarAccess.getStringOperationAccess().getGroup_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__17__Impl
	rule__StringOperation__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getTHENKeyword_17()); }
	'THEN'
	{ after(grammarAccess.getStringOperationAccess().getTHENKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__18__Impl
	rule__StringOperation__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getSubifAssignment_18()); }
	(rule__StringOperation__SubifAssignment_18)
	{ after(grammarAccess.getStringOperationAccess().getSubifAssignment_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__19__Impl
	rule__StringOperation__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getELSEKeyword_19()); }
	'ELSE'
	{ after(grammarAccess.getStringOperationAccess().getELSEKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__20__Impl
	rule__StringOperation__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getSubelse2Assignment_20()); }
	(rule__StringOperation__Subelse2Assignment_20)
	{ after(grammarAccess.getStringOperationAccess().getSubelse2Assignment_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__21
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__21__Impl
	rule__StringOperation__Group__22
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__21__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getENDKeyword_21()); }
	'END'
	{ after(grammarAccess.getStringOperationAccess().getENDKeyword_21()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__22
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__22__Impl
	rule__StringOperation__Group__23
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__22__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getELSEKeyword_22()); }
	'ELSE'
	{ after(grammarAccess.getStringOperationAccess().getELSEKeyword_22()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__23
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__23__Impl
	rule__StringOperation__Group__24
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__23__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getSubelse1Assignment_23()); }
	(rule__StringOperation__Subelse1Assignment_23)
	{ after(grammarAccess.getStringOperationAccess().getSubelse1Assignment_23()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__24
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__24__Impl
	rule__StringOperation__Group__25
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__24__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getENDKeyword_24()); }
	'END'
	{ after(grammarAccess.getStringOperationAccess().getENDKeyword_24()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__25
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group__25__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group__25__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getENDKeyword_25()); }
	'END'
	{ after(grammarAccess.getStringOperationAccess().getENDKeyword_25()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_4__0__Impl
	rule__StringOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPListAssignment_4_0()); }
	(rule__StringOperation__PListAssignment_4_0)
	{ after(grammarAccess.getStringOperationAccess().getPListAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_4_1()); }
	(rule__StringOperation__Group_4_1__0)*
	{ after(grammarAccess.getStringOperationAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_4_1__0__Impl
	rule__StringOperation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getStringOperationAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPListAssignment_4_1_1()); }
	(rule__StringOperation__PListAssignment_4_1_1)
	{ after(grammarAccess.getStringOperationAccess().getPListAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_8__0__Impl
	rule__StringOperation__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getParamsAssignment_8_0()); }
	(rule__StringOperation__ParamsAssignment_8_0)
	{ after(grammarAccess.getStringOperationAccess().getParamsAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getGroup_8_1()); }
	(rule__StringOperation__Group_8_1__0)*
	{ after(grammarAccess.getStringOperationAccess().getGroup_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_8_1__0__Impl
	rule__StringOperation__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getAmpersandKeyword_8_1_0()); }
	'&'
	{ after(grammarAccess.getStringOperationAccess().getAmpersandKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getParamsAssignment_8_1_1()); }
	(rule__StringOperation__ParamsAssignment_8_1_1)
	{ after(grammarAccess.getStringOperationAccess().getParamsAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_12__0__Impl
	rule__StringOperation__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getAmpersandKeyword_12_0()); }
	'&'
	{ after(grammarAccess.getStringOperationAccess().getAmpersandKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPres1Assignment_12_1()); }
	(rule__StringOperation__Pres1Assignment_12_1)
	{ after(grammarAccess.getStringOperationAccess().getPres1Assignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringOperation__Group_16__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_16__0__Impl
	rule__StringOperation__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_16__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getAmpersandKeyword_16_0()); }
	'&'
	{ after(grammarAccess.getStringOperationAccess().getAmpersandKeyword_16_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_16__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringOperation__Group_16__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Group_16__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringOperationAccess().getPres2Assignment_16_1()); }
	(rule__StringOperation__Pres2Assignment_16_1)
	{ after(grammarAccess.getStringOperationAccess().getPres2Assignment_16_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BSubstitution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__0__Impl
	rule__BSubstitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getSleftAssignment_0()); }
	(rule__BSubstitution__SleftAssignment_0)
	{ after(grammarAccess.getBSubstitutionAccess().getSleftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__1__Impl
	rule__BSubstitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BSubstitution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBSubstitutionAccess().getSrightAssignment_2()); }
	(rule__BSubstitution__SrightAssignment_2)
	{ after(grammarAccess.getBSubstitutionAccess().getSrightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group__0__Impl
	rule__BPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getPleftAssignment_0()); }
	(rule__BPredicate__PleftAssignment_0)
	{ after(grammarAccess.getBPredicateAccess().getPleftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group__1__Impl
	rule__BPredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBPredicateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BPredicate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBPredicateAccess().getPrightAssignment_2()); }
	(rule__BPredicate__PrightAssignment_2)
	{ after(grammarAccess.getBPredicateAccess().getPrightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BDom__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BDom__Group__0__Impl
	rule__BDom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBDomAccess().getDomKeyword_0()); }
	'dom'
	{ after(grammarAccess.getBDomAccess().getDomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BDom__Group__1__Impl
	rule__BDom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBDomAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBDomAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BDom__Group__2__Impl
	rule__BDom__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBDomAccess().getObjAssignment_2()); }
	(rule__BDom__ObjAssignment_2)
	{ after(grammarAccess.getBDomAccess().getObjAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BDom__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBDomAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBDomAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__0__Impl
	rule__BParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getP_nameAssignment_0()); }
	(rule__BParameter__P_nameAssignment_0)
	{ after(grammarAccess.getBParameterAccess().getP_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__1__Impl
	rule__BParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBParameterAccess().getTypeAssignment_2()); }
	(rule__BParameter__TypeAssignment_2)
	{ after(grammarAccess.getBParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BInit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInit__Group__0__Impl
	rule__BInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInitAccess().getVarAssignment_0()); }
	(rule__BInit__VarAssignment_0)
	{ after(grammarAccess.getBInitAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInit__Group__1__Impl
	rule__BInit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInitAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getBInitAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInit__Group__2__Impl
	rule__BInit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInitAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBInitAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInit__Group__3__Impl
	rule__BInit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInitAccess().getPairAssignment_3()); }
	(rule__BInit__PairAssignment_3)
	{ after(grammarAccess.getBInitAccess().getPairAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInitAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBInitAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BTuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__0__Impl
	rule__BTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getRanAssignment_0()); }
	(rule__BTuple__RanAssignment_0)
	{ after(grammarAccess.getBTupleAccess().getRanAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__1__Impl
	rule__BTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1()); }
	'|->'
	{ after(grammarAccess.getBTupleAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTupleAccess().getDomAssignment_2()); }
	(rule__BTuple__DomAssignment_2)
	{ after(grammarAccess.getBTupleAccess().getDomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BOperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOperationCall__Group__0__Impl
	rule__BOperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOperationCallAccess().getOpAssignment_0()); }
	(rule__BOperationCall__OpAssignment_0)
	{ after(grammarAccess.getBOperationCallAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOperationCall__Group__1__Impl
	rule__BOperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOperationCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBOperationCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOperationCall__Group__2__Impl
	rule__BOperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOperationCallAccess().getParAssignment_2()); }
	(rule__BOperationCall__ParAssignment_2)
	{ after(grammarAccess.getBOperationCallAccess().getParAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BOperationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBOperationCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBOperationCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BInvariant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_0__0__Impl
	rule__BInvariant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getVarAssignment_0_0()); }
	(rule__BInvariant__VarAssignment_0_0)
	{ after(grammarAccess.getBInvariantAccess().getVarAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_0__1__Impl
	rule__BInvariant__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getBInvariantAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getVardifAssignment_0_2()); }
	(rule__BInvariant__VardifAssignment_0_2)
	{ after(grammarAccess.getBInvariantAccess().getVardifAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BInvariant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_1__0__Impl
	rule__BInvariant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getDomAssignment_1_0()); }
	(rule__BInvariant__DomAssignment_1_0)
	{ after(grammarAccess.getBInvariantAccess().getDomAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_1__1__Impl
	rule__BInvariant__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getLessThanSignColonKeyword_1_1()); }
	'<:'
	{ after(grammarAccess.getBInvariantAccess().getLessThanSignColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BInvariant__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBInvariantAccess().getRanAssignment_1_2()); }
	(rule__BInvariant__RanAssignment_1_2)
	{ after(grammarAccess.getBInvariantAccess().getRanAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BFunction__Group__0__Impl
	rule__BFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBFunctionAccess().getRanAssignment_0()); }
	(rule__BFunction__RanAssignment_0)
	{ after(grammarAccess.getBFunctionAccess().getRanAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BFunction__Group__1__Impl
	rule__BFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBFunctionAccess().getAlternatives_1()); }
	(rule__BFunction__Alternatives_1)
	{ after(grammarAccess.getBFunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBFunctionAccess().getDomAssignment_2()); }
	(rule__BFunction__DomAssignment_2)
	{ after(grammarAccess.getBFunctionAccess().getDomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BMachine__M_nameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBMachineAccess().getM_nameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__SeesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_3_0()); }
		ruleBSees
		{ after(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__SeesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_4_1_0()); }
		ruleBSees
		{ after(grammarAccess.getBMachineAccess().getSeesBSeesParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__VarsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_6_0()); }
		ruleBVariable
		{ after(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__VarsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_7_1_0()); }
		ruleBVariable
		{ after(grammarAccess.getBMachineAccess().getVarsBVariableParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__InvsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_9_0()); }
		ruleBInvariant
		{ after(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__InvsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_10_1_0()); }
		ruleBInvariant
		{ after(grammarAccess.getBMachineAccess().getInvsBInvariantParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__InitsAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_12_0()); }
		ruleBInit
		{ after(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__InitsAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_13_1_0()); }
		ruleBInit
		{ after(grammarAccess.getBMachineAccess().getInitsBInitParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__VopsAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_15_0()); }
		ruleVoidOperation
		{ after(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__VopsAssignment_16_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_16_1_0()); }
		ruleVoidOperation
		{ after(grammarAccess.getBMachineAccess().getVopsVoidOperationParserRuleCall_16_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__SopsAssignment_18
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_18_0()); }
		ruleStringOperation
		{ after(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_18_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BMachine__SopsAssignment_19_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_19_1_0()); }
		ruleStringOperation
		{ after(grammarAccess.getBMachineAccess().getSopsStringOperationParserRuleCall_19_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__Op_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__PListAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__PListAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__ParamsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_0_0()); }
		ruleBParameter
		{ after(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__ParamsAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_1_1_0()); }
		ruleBParameter
		{ after(grammarAccess.getVoidOperationAccess().getParamsBParameterParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__PreAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getPreBPredicateParserRuleCall_7_1_0()); }
		ruleBPredicate
		{ after(grammarAccess.getVoidOperationAccess().getPreBPredicateParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__SubsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_9_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidOperation__SubsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_10_1_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Res1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getRes1IDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStringOperationAccess().getRes1IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Op_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getOp_nameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStringOperationAccess().getOp_nameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__PListAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__PListAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__ParamsAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_0_0()); }
		ruleBParameter
		{ after(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__ParamsAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_1_1_0()); }
		ruleBParameter
		{ after(grammarAccess.getStringOperationAccess().getParamsBParameterParserRuleCall_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Pres1Assignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_11_0()); }
		ruleBPredicate
		{ after(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Pres1Assignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_12_1_0()); }
		ruleBPredicate
		{ after(grammarAccess.getStringOperationAccess().getPres1BPredicateParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Pres2Assignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_15_0()); }
		ruleBPredicate
		{ after(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Pres2Assignment_16_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_16_1_0()); }
		ruleBPredicate
		{ after(grammarAccess.getStringOperationAccess().getPres2BPredicateParserRuleCall_16_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__SubifAssignment_18
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getSubifBSubstitutionParserRuleCall_18_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getStringOperationAccess().getSubifBSubstitutionParserRuleCall_18_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Subelse2Assignment_20
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getSubelse2BSubstitutionParserRuleCall_20_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getStringOperationAccess().getSubelse2BSubstitutionParserRuleCall_20_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOperation__Subelse1Assignment_23
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringOperationAccess().getSubelse1BSubstitutionParserRuleCall_23_0()); }
		ruleBSubstitution
		{ after(grammarAccess.getStringOperationAccess().getSubelse1BSubstitutionParserRuleCall_23_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__SleftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getSleftAlternatives_0_0()); }
		(rule__BSubstitution__SleftAlternatives_0_0)
		{ after(grammarAccess.getBSubstitutionAccess().getSleftAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSubstitution__SrightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSubstitutionAccess().getSrightIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBSubstitutionAccess().getSrightIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PleftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPleftAlternatives_0_0()); }
		(rule__BPredicate__PleftAlternatives_0_0)
		{ after(grammarAccess.getBPredicateAccess().getPleftAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BPredicate__PrightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBPredicateAccess().getPrightAlternatives_2_0()); }
		(rule__BPredicate__PrightAlternatives_2_0)
		{ after(grammarAccess.getBPredicateAccess().getPrightAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BDom__ObjAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBDomAccess().getObjBTypeParserRuleCall_2_0()); }
		ruleBType
		{ after(grammarAccess.getBDomAccess().getObjBTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__P_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBParameterAccess().getP_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBParameterAccess().getP_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BParameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBParameterAccess().getTypeBTypeParserRuleCall_2_0()); }
		ruleBType
		{ after(grammarAccess.getBParameterAccess().getTypeBTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BType__Type_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInitAccess().getVarIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBInitAccess().getVarIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInit__PairAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInitAccess().getPairBTupleParserRuleCall_3_0()); }
		ruleBTuple
		{ after(grammarAccess.getBInitAccess().getPairBTupleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__RanAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTupleAccess().getRanAlternatives_0_0()); }
		(rule__BTuple__RanAlternatives_0_0)
		{ after(grammarAccess.getBTupleAccess().getRanAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTuple__DomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBTupleAccess().getDomIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOperationCallAccess().getOpIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBOperationCallAccess().getOpIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOperationCall__ParAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOperationCallAccess().getParIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBOperationCallAccess().getParIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__VarAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInvariantAccess().getVarIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBInvariantAccess().getVarIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__VardifAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInvariantAccess().getVardifBFunctionParserRuleCall_0_2_0()); }
		ruleBFunction
		{ after(grammarAccess.getBInvariantAccess().getVardifBFunctionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__DomAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInvariantAccess().getDomIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBInvariantAccess().getDomIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BInvariant__RanAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBInvariantAccess().getRanIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBInvariantAccess().getRanIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__RanAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBFunctionAccess().getRanIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBFunctionAccess().getRanIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BFunction__DomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBFunctionAccess().getDomIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBFunctionAccess().getDomIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BVariable__Var_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBVariableAccess().getVar_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBVariableAccess().getVar_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BSees__M_nameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBSeesAccess().getM_nameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getBSeesAccess().getM_nameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
