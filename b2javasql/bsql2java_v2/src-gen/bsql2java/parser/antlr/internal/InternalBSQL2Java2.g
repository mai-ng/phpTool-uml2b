/*
 * generated by Xtext 2.10.0
 */
grammar InternalBSQL2Java2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package bsql2java.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package bsql2java.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import bsql2java.services.BSQL2Java2GrammarAccess;

}

@parser::members {

 	private BSQL2Java2GrammarAccess grammarAccess;

    public InternalBSQL2Java2Parser(TokenStream input, BSQL2Java2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BSQL2Java2";
   	}

   	@Override
   	protected BSQL2Java2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBSQL2Java2
entryRuleBSQL2Java2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSQL2Java2Rule()); }
	iv_ruleBSQL2Java2=ruleBSQL2Java2
	{ $current=$iv_ruleBSQL2Java2.current; }
	EOF;

// Rule BSQL2Java2
ruleBSQL2Java2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBSQL2Java2Access().getBSQLMachineParserRuleCall());
	}
	this_BSQLMachine_0=ruleBSQLMachine
	{
		$current = $this_BSQLMachine_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBSQLMachine
entryRuleBSQLMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSQLMachineRule()); }
	iv_ruleBSQLMachine=ruleBSQLMachine
	{ $current=$iv_ruleBSQLMachine.current; }
	EOF;

// Rule BSQLMachine
ruleBSQLMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MACHINE'
		{
			newLeafNode(otherlv_0, grammarAccess.getBSQLMachineAccess().getMACHINEKeyword_0());
		}
		(
			(
				lv_m_name_1_0=RULE_ID
				{
					newLeafNode(lv_m_name_1_0, grammarAccess.getBSQLMachineAccess().getM_nameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSQLMachineRule());
					}
					setWithLastConsumed(
						$current,
						"m_name",
						lv_m_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='SEES'
			{
				newLeafNode(otherlv_2, grammarAccess.getBSQLMachineAccess().getSEESKeyword_2_0());
			}
			(
				(
					lv_seename_3_0=RULE_ID
					{
						newLeafNode(lv_seename_3_0, grammarAccess.getBSQLMachineAccess().getSeenameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBSQLMachineRule());
						}
						addWithLastConsumed(
							$current,
							"seename",
							lv_seename_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getBSQLMachineAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						lv_seename_5_0=RULE_ID
						{
							newLeafNode(lv_seename_5_0, grammarAccess.getBSQLMachineAccess().getSeenameIDTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBSQLMachineRule());
							}
							addWithLastConsumed(
								$current,
								"seename",
								lv_seename_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_6='VARIABLES'
		{
			newLeafNode(otherlv_6, grammarAccess.getBSQLMachineAccess().getVARIABLESKeyword_3());
		}
		(
			(
				lv_vars_7_0=RULE_ID
				{
					newLeafNode(lv_vars_7_0, grammarAccess.getBSQLMachineAccess().getVarsIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSQLMachineRule());
					}
					setWithLastConsumed(
						$current,
						"vars",
						lv_vars_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_8='INVARIANT'
		{
			newLeafNode(otherlv_8, grammarAccess.getBSQLMachineAccess().getINVARIANTKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSQLMachineAccess().getInvBTableParserRuleCall_6_0());
				}
				lv_inv_9_0=ruleBTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSQLMachineRule());
					}
					set(
						$current,
						"inv",
						lv_inv_9_0,
						"bsql2java.BSQL2Java2.BTable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='INITIALISATION'
		{
			newLeafNode(otherlv_10, grammarAccess.getBSQLMachineAccess().getINITIALISATIONKeyword_7());
		}
		(
			(
				lv_init_11_0=RULE_ID
				{
					newLeafNode(lv_init_11_0, grammarAccess.getBSQLMachineAccess().getInitIDTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSQLMachineRule());
					}
					setWithLastConsumed(
						$current,
						"init",
						lv_init_11_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_12=':='
		{
			newLeafNode(otherlv_12, grammarAccess.getBSQLMachineAccess().getColonEqualsSignKeyword_9());
		}
		otherlv_13='{}'
		{
			newLeafNode(otherlv_13, grammarAccess.getBSQLMachineAccess().getLeftCurlyBracketRightCurlyBracketKeyword_10());
		}
		otherlv_14='OPERATIONS'
		{
			newLeafNode(otherlv_14, grammarAccess.getBSQLMachineAccess().getOPERATIONSKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSQLMachineAccess().getBopsBOperationParserRuleCall_12_0());
				}
				lv_bops_15_0=ruleBOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSQLMachineRule());
					}
					add(
						$current,
						"bops",
						lv_bops_15_0,
						"bsql2java.BSQL2Java2.BOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=';'
			{
				newLeafNode(otherlv_16, grammarAccess.getBSQLMachineAccess().getSemicolonKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBSQLMachineAccess().getBopsBOperationParserRuleCall_13_1_0());
					}
					lv_bops_17_0=ruleBOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSQLMachineRule());
						}
						add(
							$current,
							"bops",
							lv_bops_17_0,
							"bsql2java.BSQL2Java2.BOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='END'
		{
			newLeafNode(otherlv_18, grammarAccess.getBSQLMachineAccess().getENDKeyword_14());
		}
	)
;

// Entry rule entryRuleBOperation
entryRuleBOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBOperationRule()); }
	iv_ruleBOperation=ruleBOperation
	{ $current=$iv_ruleBOperation.current; }
	EOF;

// Rule BOperation
ruleBOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBOperationAccess().getBopsBoolOperationParserRuleCall_0_0());
				}
				lv_bops_0_0=ruleBoolOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBOperationRule());
					}
					set(
						$current,
						"bops",
						lv_bops_0_0,
						"bsql2java.BSQL2Java2.BoolOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBOperationAccess().getVopsVoidOperationParserRuleCall_1_0());
				}
				lv_vops_1_0=ruleVoidOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBOperationRule());
					}
					set(
						$current,
						"vops",
						lv_vops_1_0,
						"bsql2java.BSQL2Java2.VoidOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBOperationAccess().getSopsStringOperationParserRuleCall_2_0());
				}
				lv_sops_2_0=ruleStringOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBOperationRule());
					}
					set(
						$current,
						"sops",
						lv_sops_2_0,
						"bsql2java.BSQL2Java2.StringOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBTable
entryRuleBTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTableRule()); }
	iv_ruleBTable=ruleBTable
	{ $current=$iv_ruleBTable.current; }
	EOF;

// Rule BTable
ruleBTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_table_name_0_0=RULE_ID
				{
					newLeafNode(lv_table_name_0_0, grammarAccess.getBTableAccess().getTable_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBTableRule());
					}
					setWithLastConsumed(
						$current,
						"table_name",
						lv_table_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='<:'
		{
			newLeafNode(otherlv_1, grammarAccess.getBTableAccess().getLessThanSignColonKeyword_1());
		}
		otherlv_2='struct'
		{
			newLeafNode(otherlv_2, grammarAccess.getBTableAccess().getStructKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getBTableAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_4_0());
				}
				lv_attributes_4_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBTableRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_4_0,
						"bsql2java.BSQL2Java2.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getBTableAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBTableAccess().getAttributesAttributeParserRuleCall_5_1_0());
					}
					lv_attributes_6_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBTableRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_6_0,
							"bsql2java.BSQL2Java2.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getBTableAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_att_name_0_0=RULE_ID
				{
					newLeafNode(lv_att_name_0_0, grammarAccess.getAttributeAccess().getAtt_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"att_name",
						lv_att_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeBTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleBType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"bsql2java.BSQL2Java2.BType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBType
entryRuleBType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBTypeRule()); }
	iv_ruleBType=ruleBType
	{ $current=$iv_ruleBType.current; }
	EOF;

// Rule BType
ruleBType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_type_name_0_0=RULE_ID
			{
				newLeafNode(lv_type_name_0_0, grammarAccess.getBTypeAccess().getType_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBTypeRule());
				}
				setWithLastConsumed(
					$current,
					"type_name",
					lv_type_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBValue
entryRuleBValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBValueRule()); }
	iv_ruleBValue=ruleBValue
	{ $current=$iv_ruleBValue.current.getText(); }
	EOF;

// Rule BValue
ruleBValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getBValueAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getBValueAccess().getINTTerminalRuleCall_1());
		}
		    |
		kw='FALSE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBValueAccess().getFALSEKeyword_2());
		}
		    |
		kw='TRUE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBValueAccess().getTRUEKeyword_3());
		}
	)
;

// Entry rule entryRuleBoolOperation
entryRuleBoolOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolOperationRule()); }
	iv_ruleBoolOperation=ruleBoolOperation
	{ $current=$iv_ruleBoolOperation.current; }
	EOF;

// Rule BoolOperation
ruleBoolOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_res_0_0=RULE_ID
				{
					newLeafNode(lv_res_0_0, grammarAccess.getBoolOperationAccess().getResIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolOperationRule());
					}
					setWithLastConsumed(
						$current,
						"res",
						lv_res_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='<--'
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1());
		}
		(
			(
				lv_op_name_2_0=RULE_ID
				{
					newLeafNode(lv_op_name_2_0, grammarAccess.getBoolOperationAccess().getOp_nameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolOperationRule());
					}
					setWithLastConsumed(
						$current,
						"op_name",
						lv_op_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getBoolOperationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					lv_pList_4_0=RULE_ID
					{
						newLeafNode(lv_pList_4_0, grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolOperationRule());
						}
						addWithLastConsumed(
							$current,
							"pList",
							lv_pList_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getBoolOperationAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						lv_pList_6_0=RULE_ID
						{
							newLeafNode(lv_pList_6_0, grammarAccess.getBoolOperationAccess().getPListIDTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBoolOperationRule());
							}
							addWithLastConsumed(
								$current,
								"pList",
								lv_pList_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getBoolOperationAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getBoolOperationAccess().getEqualsSignKeyword_6());
		}
		otherlv_9='PRE'
		{
			newLeafNode(otherlv_9, grammarAccess.getBoolOperationAccess().getPREKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolOperationAccess().getPTypingBParameterTypingParserRuleCall_8_0_0());
					}
					lv_pTyping_10_0=ruleBParameterTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolOperationRule());
						}
						add(
							$current,
							"pTyping",
							lv_pTyping_10_0,
							"bsql2java.BSQL2Java2.BParameterTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11='&'
				{
					newLeafNode(otherlv_11, grammarAccess.getBoolOperationAccess().getAmpersandKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBoolOperationAccess().getPTypingBParameterTypingParserRuleCall_8_1_1_0());
						}
						lv_pTyping_12_0=ruleBParameterTyping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBoolOperationRule());
							}
							add(
								$current,
								"pTyping",
								lv_pTyping_12_0,
								"bsql2java.BSQL2Java2.BParameterTyping");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_13='THEN'
		{
			newLeafNode(otherlv_13, grammarAccess.getBoolOperationAccess().getTHENKeyword_9());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolOperationAccess().getReshasBSubTrueParserRuleCall_10_0_0());
					}
					lv_reshas_14_0=ruleBSubTrue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolOperationRule());
						}
						set(
							$current,
							"reshas",
							lv_reshas_14_0,
							"bsql2java.BSQL2Java2.BSubTrue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolOperationAccess().getResnoBSubFalseParserRuleCall_10_1_0());
					}
					lv_resno_15_0=ruleBSubFalse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolOperationRule());
						}
						set(
							$current,
							"resno",
							lv_resno_15_0,
							"bsql2java.BSQL2Java2.BSubFalse");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_16='END'
		{
			newLeafNode(otherlv_16, grammarAccess.getBoolOperationAccess().getENDKeyword_11());
		}
	)
;

// Entry rule entryRuleBSubTrue
entryRuleBSubTrue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSubTrueRule()); }
	iv_ruleBSubTrue=ruleBSubTrue
	{ $current=$iv_ruleBSubTrue.current; }
	EOF;

// Rule BSubTrue
ruleBSubTrue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_res_0_0=RULE_ID
				{
					newLeafNode(lv_res_0_0, grammarAccess.getBSubTrueAccess().getResIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSubTrueRule());
					}
					setWithLastConsumed(
						$current,
						"res",
						lv_res_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getBSubTrueAccess().getColonEqualsSignKeyword_1());
		}
		otherlv_2='bool('
		{
			newLeafNode(otherlv_2, grammarAccess.getBSubTrueAccess().getBoolKeyword_2());
		}
		otherlv_3='#'
		{
			newLeafNode(otherlv_3, grammarAccess.getBSubTrueAccess().getNumberSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSubTrueAccess().getObjTableTableInstanceParserRuleCall_4_0());
				}
				lv_objTable_4_0=ruleTableInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSubTrueRule());
					}
					set(
						$current,
						"objTable",
						lv_objTable_4_0,
						"bsql2java.BSQL2Java2.TableInstance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='&'
		{
			newLeafNode(otherlv_5, grammarAccess.getBSubTrueAccess().getAmpersandKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSubTrueAccess().getPresBPredicateParserRuleCall_6_0());
				}
				lv_pres_6_0=ruleBPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSubTrueRule());
					}
					add(
						$current,
						"pres",
						lv_pres_6_0,
						"bsql2java.BSQL2Java2.BPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='&'
			{
				newLeafNode(otherlv_7, grammarAccess.getBSubTrueAccess().getAmpersandKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubTrueAccess().getPresBPredicateParserRuleCall_7_1_0());
					}
					lv_pres_8_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubTrueRule());
						}
						add(
							$current,
							"pres",
							lv_pres_8_0,
							"bsql2java.BSQL2Java2.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getBSubTrueAccess().getRightParenthesisKeyword_8());
		}
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getBSubTrueAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleBSubFalse
entryRuleBSubFalse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSubFalseRule()); }
	iv_ruleBSubFalse=ruleBSubFalse
	{ $current=$iv_ruleBSubFalse.current; }
	EOF;

// Rule BSubFalse
ruleBSubFalse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_res_0_0=RULE_ID
				{
					newLeafNode(lv_res_0_0, grammarAccess.getBSubFalseAccess().getResIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSubFalseRule());
					}
					setWithLastConsumed(
						$current,
						"res",
						lv_res_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getBSubFalseAccess().getColonEqualsSignKeyword_1());
		}
		otherlv_2='bool('
		{
			newLeafNode(otherlv_2, grammarAccess.getBSubFalseAccess().getBoolKeyword_2());
		}
		otherlv_3='not'
		{
			newLeafNode(otherlv_3, grammarAccess.getBSubFalseAccess().getNotKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getBSubFalseAccess().getLeftParenthesisKeyword_4());
		}
		otherlv_5='#'
		{
			newLeafNode(otherlv_5, grammarAccess.getBSubFalseAccess().getNumberSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSubFalseAccess().getObjTableTableInstanceParserRuleCall_6_0());
				}
				lv_objTable_6_0=ruleTableInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSubFalseRule());
					}
					set(
						$current,
						"objTable",
						lv_objTable_6_0,
						"bsql2java.BSQL2Java2.TableInstance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='&'
		{
			newLeafNode(otherlv_7, grammarAccess.getBSubFalseAccess().getAmpersandKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBSubFalseAccess().getPresBPredicateParserRuleCall_8_0());
				}
				lv_pres_8_0=ruleBPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBSubFalseRule());
					}
					add(
						$current,
						"pres",
						lv_pres_8_0,
						"bsql2java.BSQL2Java2.BPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='&'
			{
				newLeafNode(otherlv_9, grammarAccess.getBSubFalseAccess().getAmpersandKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubFalseAccess().getPresBPredicateParserRuleCall_9_1_0());
					}
					lv_pres_10_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubFalseRule());
						}
						add(
							$current,
							"pres",
							lv_pres_10_0,
							"bsql2java.BSQL2Java2.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getBSubFalseAccess().getRightParenthesisKeyword_10());
		}
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getBSubFalseAccess().getRightParenthesisKeyword_11());
		}
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getBSubFalseAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleStringOperation
entryRuleStringOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringOperationRule()); }
	iv_ruleStringOperation=ruleStringOperation
	{ $current=$iv_ruleStringOperation.current; }
	EOF;

// Rule StringOperation
ruleStringOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_res_0_0=RULE_ID
				{
					newLeafNode(lv_res_0_0, grammarAccess.getStringOperationAccess().getResIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOperationRule());
					}
					setWithLastConsumed(
						$current,
						"res",
						lv_res_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='<--'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringOperationAccess().getLessThanSignHyphenMinusHyphenMinusKeyword_1());
		}
		(
			(
				lv_op_name_2_0=RULE_ID
				{
					newLeafNode(lv_op_name_2_0, grammarAccess.getStringOperationAccess().getOp_nameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringOperationRule());
					}
					setWithLastConsumed(
						$current,
						"op_name",
						lv_op_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getStringOperationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					lv_pList_4_0=RULE_ID
					{
						newLeafNode(lv_pList_4_0, grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStringOperationRule());
						}
						addWithLastConsumed(
							$current,
							"pList",
							lv_pList_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getStringOperationAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						lv_pList_6_0=RULE_ID
						{
							newLeafNode(lv_pList_6_0, grammarAccess.getStringOperationAccess().getPListIDTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStringOperationRule());
							}
							addWithLastConsumed(
								$current,
								"pList",
								lv_pList_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getStringOperationAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getStringOperationAccess().getEqualsSignKeyword_6());
		}
		otherlv_9='PRE'
		{
			newLeafNode(otherlv_9, grammarAccess.getStringOperationAccess().getPREKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStringOperationAccess().getPTypingBParameterTypingParserRuleCall_8_0_0());
					}
					lv_pTyping_10_0=ruleBParameterTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringOperationRule());
						}
						add(
							$current,
							"pTyping",
							lv_pTyping_10_0,
							"bsql2java.BSQL2Java2.BParameterTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11='&'
				{
					newLeafNode(otherlv_11, grammarAccess.getStringOperationAccess().getAmpersandKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStringOperationAccess().getPTypingBParameterTypingParserRuleCall_8_1_1_0());
						}
						lv_pTyping_12_0=ruleBParameterTyping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStringOperationRule());
							}
							add(
								$current,
								"pTyping",
								lv_pTyping_12_0,
								"bsql2java.BSQL2Java2.BParameterTyping");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_13='THEN'
		{
			newLeafNode(otherlv_13, grammarAccess.getStringOperationAccess().getTHENKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringOperationAccess().getAnyblockBAnyBlockParserRuleCall_10_0());
				}
				lv_anyblock_14_0=ruleBAnyBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringOperationRule());
					}
					set(
						$current,
						"anyblock",
						lv_anyblock_14_0,
						"bsql2java.BSQL2Java2.BAnyBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15='END'
		{
			newLeafNode(otherlv_15, grammarAccess.getStringOperationAccess().getENDKeyword_11());
		}
	)
;

// Entry rule entryRuleBAnyBlock
entryRuleBAnyBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBAnyBlockRule()); }
	iv_ruleBAnyBlock=ruleBAnyBlock
	{ $current=$iv_ruleBAnyBlock.current; }
	EOF;

// Rule BAnyBlock
ruleBAnyBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ANY'
		{
			newLeafNode(otherlv_0, grammarAccess.getBAnyBlockAccess().getANYKeyword_0());
		}
		(
			(
				(
					lv_varList_1_0=RULE_ID
					{
						newLeafNode(lv_varList_1_0, grammarAccess.getBAnyBlockAccess().getVarListIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBAnyBlockRule());
						}
						addWithLastConsumed(
							$current,
							"varList",
							lv_varList_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getBAnyBlockAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						lv_varList_3_0=RULE_ID
						{
							newLeafNode(lv_varList_3_0, grammarAccess.getBAnyBlockAccess().getVarListIDTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBAnyBlockRule());
							}
							addWithLastConsumed(
								$current,
								"varList",
								lv_varList_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)
		otherlv_4='WHERE'
		{
			newLeafNode(otherlv_4, grammarAccess.getBAnyBlockAccess().getWHEREKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBAnyBlockAccess().getVarTypingBParameterTypingParserRuleCall_3_0_0());
					}
					lv_varTyping_5_0=ruleBParameterTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
						}
						add(
							$current,
							"varTyping",
							lv_varTyping_5_0,
							"bsql2java.BSQL2Java2.BParameterTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='&'
				{
					newLeafNode(otherlv_6, grammarAccess.getBAnyBlockAccess().getAmpersandKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBAnyBlockAccess().getVarTypingBParameterTypingParserRuleCall_3_1_1_0());
						}
						lv_varTyping_7_0=ruleBParameterTyping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
							}
							add(
								$current,
								"varTyping",
								lv_varTyping_7_0,
								"bsql2java.BSQL2Java2.BParameterTyping");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_8='&'
			{
				newLeafNode(otherlv_8, grammarAccess.getBAnyBlockAccess().getAmpersandKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBAnyBlockAccess().getPresBPredicateParserRuleCall_5_0());
				}
				lv_pres_9_0=ruleBPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
					}
					add(
						$current,
						"pres",
						lv_pres_9_0,
						"bsql2java.BSQL2Java2.BPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='&'
			{
				newLeafNode(otherlv_10, grammarAccess.getBAnyBlockAccess().getAmpersandKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBAnyBlockAccess().getPresBPredicateParserRuleCall_6_1_0());
					}
					lv_pres_11_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
						}
						add(
							$current,
							"pres",
							lv_pres_11_0,
							"bsql2java.BSQL2Java2.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='THEN'
		{
			newLeafNode(otherlv_12, grammarAccess.getBAnyBlockAccess().getTHENKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBAnyBlockAccess().getSubsBSubstitutionParserRuleCall_8_0_0());
					}
					lv_subs_13_0=ruleBSubstitution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
						}
						add(
							$current,
							"subs",
							lv_subs_13_0,
							"bsql2java.BSQL2Java2.BSubstitution");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14='||'
				{
					newLeafNode(otherlv_14, grammarAccess.getBAnyBlockAccess().getVerticalLineVerticalLineKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBAnyBlockAccess().getSubsBSubstitutionParserRuleCall_8_1_1_0());
						}
						lv_subs_15_0=ruleBSubstitution
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBAnyBlockRule());
							}
							add(
								$current,
								"subs",
								lv_subs_15_0,
								"bsql2java.BSQL2Java2.BSubstitution");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_16='END'
		{
			newLeafNode(otherlv_16, grammarAccess.getBAnyBlockAccess().getENDKeyword_9());
		}
	)
;

// Entry rule entryRuleVoidOperation
entryRuleVoidOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoidOperationRule()); }
	iv_ruleVoidOperation=ruleVoidOperation
	{ $current=$iv_ruleVoidOperation.current; }
	EOF;

// Rule VoidOperation
ruleVoidOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_name_0_0=RULE_ID
				{
					newLeafNode(lv_op_name_0_0, grammarAccess.getVoidOperationAccess().getOp_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVoidOperationRule());
					}
					setWithLastConsumed(
						$current,
						"op_name",
						lv_op_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getVoidOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_pList_2_0=RULE_ID
					{
						newLeafNode(lv_pList_2_0, grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVoidOperationRule());
						}
						addWithLastConsumed(
							$current,
							"pList",
							lv_pList_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getVoidOperationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						lv_pList_4_0=RULE_ID
						{
							newLeafNode(lv_pList_4_0, grammarAccess.getVoidOperationAccess().getPListIDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVoidOperationRule());
							}
							addWithLastConsumed(
								$current,
								"pList",
								lv_pList_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getVoidOperationAccess().getRightParenthesisKeyword_3());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getVoidOperationAccess().getEqualsSignKeyword_4());
		}
		otherlv_7='PRE'
		{
			newLeafNode(otherlv_7, grammarAccess.getVoidOperationAccess().getPREKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVoidOperationAccess().getPTypingBParameterTypingParserRuleCall_6_0_0());
					}
					lv_pTyping_8_0=ruleBParameterTyping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
						}
						add(
							$current,
							"pTyping",
							lv_pTyping_8_0,
							"bsql2java.BSQL2Java2.BParameterTyping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9='&'
				{
					newLeafNode(otherlv_9, grammarAccess.getVoidOperationAccess().getAmpersandKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVoidOperationAccess().getPTypingBParameterTypingParserRuleCall_6_1_1_0());
						}
						lv_pTyping_10_0=ruleBParameterTyping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
							}
							add(
								$current,
								"pTyping",
								lv_pTyping_10_0,
								"bsql2java.BSQL2Java2.BParameterTyping");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_11='THEN'
		{
			newLeafNode(otherlv_11, grammarAccess.getVoidOperationAccess().getTHENKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_8_0());
				}
				lv_subs_12_0=ruleBSubstitution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
					}
					add(
						$current,
						"subs",
						lv_subs_12_0,
						"bsql2java.BSQL2Java2.BSubstitution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13='||'
			{
				newLeafNode(otherlv_13, grammarAccess.getVoidOperationAccess().getVerticalLineVerticalLineKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVoidOperationAccess().getSubsBSubstitutionParserRuleCall_9_1_0());
					}
					lv_subs_14_0=ruleBSubstitution
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVoidOperationRule());
						}
						add(
							$current,
							"subs",
							lv_subs_14_0,
							"bsql2java.BSQL2Java2.BSubstitution");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15='END'
		{
			newLeafNode(otherlv_15, grammarAccess.getVoidOperationAccess().getENDKeyword_10());
		}
	)
;

// Entry rule entryRuleBPredicate
entryRuleBPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBPredicateRule()); }
	iv_ruleBPredicate=ruleBPredicate
	{ $current=$iv_ruleBPredicate.current; }
	EOF;

// Rule BPredicate
ruleBPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBPredicateAccess().getBPredicateAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPLeftSQLCallParserRuleCall_1_0_0());
					}
					lv_PLeft_1_0=ruleSQLCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"PLeft",
							lv_PLeft_1_0,
							"bsql2java.BSQL2Java2.SQLCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getBPredicateAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBPredicateAccess().getPRightBValueParserRuleCall_1_2_0());
					}
					lv_PRight_3_0=ruleBValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBPredicateRule());
						}
						set(
							$current,
							"PRight",
							lv_PRight_3_0,
							"bsql2java.BSQL2Java2.BValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSQLCall
entryRuleSQLCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSQLCallRule()); }
	iv_ruleSQLCall=ruleSQLCall
	{ $current=$iv_ruleSQLCall.current; }
	EOF;

// Rule SQLCall
ruleSQLCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_SLeft_0_0=RULE_ID
				{
					newLeafNode(lv_SLeft_0_0, grammarAccess.getSQLCallAccess().getSLeftIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSQLCallRule());
					}
					setWithLastConsumed(
						$current,
						"SLeft",
						lv_SLeft_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='\''
		{
			newLeafNode(otherlv_1, grammarAccess.getSQLCallAccess().getApostropheKeyword_1());
		}
		(
			(
				lv_SRight_2_0=RULE_ID
				{
					newLeafNode(lv_SRight_2_0, grammarAccess.getSQLCallAccess().getSRightIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSQLCallRule());
					}
					setWithLastConsumed(
						$current,
						"SRight",
						lv_SRight_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTableInstance
entryRuleTableInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableInstanceRule()); }
	iv_ruleTableInstance=ruleTableInstance
	{ $current=$iv_ruleTableInstance.current; }
	EOF;

// Rule TableInstance
ruleTableInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ti_name_0_0=RULE_ID
				{
					newLeafNode(lv_ti_name_0_0, grammarAccess.getTableInstanceAccess().getTi_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"ti_name",
						lv_ti_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='.('
		{
			newLeafNode(otherlv_1, grammarAccess.getTableInstanceAccess().getFullStopLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableInstanceAccess().getTi_typeTIAssignmentParserRuleCall_2_0());
				}
				lv_ti_type_2_0=ruleTIAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableInstanceRule());
					}
					set(
						$current,
						"ti_type",
						lv_ti_type_2_0,
						"bsql2java.BSQL2Java2.TIAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTIAssignment
entryRuleTIAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTIAssignmentRule()); }
	iv_ruleTIAssignment=ruleTIAssignment
	{ $current=$iv_ruleTIAssignment.current; }
	EOF;

// Rule TIAssignment
ruleTIAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_instance_name_0_0=RULE_ID
				{
					newLeafNode(lv_instance_name_0_0, grammarAccess.getTIAssignmentAccess().getInstance_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTIAssignmentRule());
					}
					setWithLastConsumed(
						$current,
						"instance_name",
						lv_instance_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTIAssignmentAccess().getColonKeyword_1());
		}
		(
			(
				lv_instance_type_2_0=RULE_ID
				{
					newLeafNode(lv_instance_type_2_0, grammarAccess.getTIAssignmentAccess().getInstance_typeIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTIAssignmentRule());
					}
					setWithLastConsumed(
						$current,
						"instance_type",
						lv_instance_type_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBParameterTyping
entryRuleBParameterTyping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBParameterTypingRule()); }
	iv_ruleBParameterTyping=ruleBParameterTyping
	{ $current=$iv_ruleBParameterTyping.current; }
	EOF;

// Rule BParameterTyping
ruleBParameterTyping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_p_name_0_0=RULE_ID
				{
					newLeafNode(lv_p_name_0_0, grammarAccess.getBParameterTypingAccess().getP_nameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBParameterTypingRule());
					}
					setWithLastConsumed(
						$current,
						"p_name",
						lv_p_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBParameterTypingAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBParameterTypingAccess().getTypeBTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleBType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBParameterTypingRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"bsql2java.BSQL2Java2.BType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBSubstitution
entryRuleBSubstitution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSubstitutionRule()); }
	iv_ruleBSubstitution=ruleBSubstitution
	{ $current=$iv_ruleBSubstitution.current; }
	EOF;

// Rule BSubstitution
ruleBSubstitution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_left_0_0=RULE_ID
				{
					newLeafNode(lv_left_0_0, grammarAccess.getBSubstitutionAccess().getLeftIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBSubstitutionRule());
					}
					setWithLastConsumed(
						$current,
						"left",
						lv_left_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getBSubstitutionAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubstitutionAccess().getPrightBPredicateParserRuleCall_2_0_0());
					}
					lv_pright_2_0=ruleBPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubstitutionRule());
						}
						set(
							$current,
							"pright",
							lv_pright_2_0,
							"bsql2java.BSQL2Java2.BPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubstitutionAccess().getUrightBUnionParserRuleCall_2_1_0());
					}
					lv_uright_3_0=ruleBUnion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubstitutionRule());
						}
						set(
							$current,
							"uright",
							lv_uright_3_0,
							"bsql2java.BSQL2Java2.BUnion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getBSubstitutionAccess().getSrightSQLCallParserRuleCall_2_2_0());
					}
					lv_sright_4_0=ruleSQLCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBSubstitutionRule());
						}
						set(
							$current,
							"sright",
							lv_sright_4_0,
							"bsql2java.BSQL2Java2.SQLCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBUnion
entryRuleBUnion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBUnionRule()); }
	iv_ruleBUnion=ruleBUnion
	{ $current=$iv_ruleBUnion.current; }
	EOF;

// Rule BUnion
ruleBUnion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBUnionAccess().getSetBSetParserRuleCall_0_0());
				}
				lv_set_0_0=ruleBSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBUnionRule());
					}
					set(
						$current,
						"set",
						lv_set_0_0,
						"bsql2java.BSQL2Java2.BSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='\\/'
		{
			newLeafNode(otherlv_1, grammarAccess.getBUnionAccess().getReverseSolidusSolidusKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBUnionAccess().getAddedSetBSetParserRuleCall_2_0_0());
					}
					lv_addedSet_2_0=ruleBSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBUnionRule());
						}
						set(
							$current,
							"addedSet",
							lv_addedSet_2_0,
							"bsql2java.BSQL2Java2.BSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getBUnionAccess().getAddedEBElementStructureParserRuleCall_2_1_0());
					}
					lv_addedE_3_0=ruleBElementStructure
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBUnionRule());
						}
						set(
							$current,
							"addedE",
							lv_addedE_3_0,
							"bsql2java.BSQL2Java2.BElementStructure");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBElementStructure
entryRuleBElementStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBElementStructureRule()); }
	iv_ruleBElementStructure=ruleBElementStructure
	{ $current=$iv_ruleBElementStructure.current; }
	EOF;

// Rule BElementStructure
ruleBElementStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBElementStructureAccess().getLeftCurlyBracketKeyword_0());
		}
		otherlv_1='rec('
		{
			newLeafNode(otherlv_1, grammarAccess.getBElementStructureAccess().getRecKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBElementStructureAccess().getEBElementParserRuleCall_2_0());
				}
				lv_e_2_0=ruleBElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBElementStructureRule());
					}
					add(
						$current,
						"e",
						lv_e_2_0,
						"bsql2java.BSQL2Java2.BElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getBElementStructureAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBElementStructureAccess().getEBElementParserRuleCall_3_1_0());
					}
					lv_e_4_0=ruleBElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBElementStructureRule());
						}
						add(
							$current,
							"e",
							lv_e_4_0,
							"bsql2java.BSQL2Java2.BElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')}'
		{
			newLeafNode(otherlv_5, grammarAccess.getBElementStructureAccess().getRightParenthesisRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBElement
entryRuleBElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBElementRule()); }
	iv_ruleBElement=ruleBElement
	{ $current=$iv_ruleBElement.current; }
	EOF;

// Rule BElement
ruleBElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_ename_0_0=RULE_ID
			{
				newLeafNode(lv_ename_0_0, grammarAccess.getBElementAccess().getEnameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBElementRule());
				}
				setWithLastConsumed(
					$current,
					"ename",
					lv_ename_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBSet
entryRuleBSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBSetRule()); }
	iv_ruleBSet=ruleBSet
	{ $current=$iv_ruleBSet.current; }
	EOF;

// Rule BSet
ruleBSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_set_name_0_0=RULE_ID
			{
				newLeafNode(lv_set_name_0_0, grammarAccess.getBSetAccess().getSet_nameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBSetRule());
				}
				setWithLastConsumed(
					$current,
					"set_name",
					lv_set_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

RULE_STRING : '#' '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
