/**
 * generated by Xtext 2.10.0
 */
package bsql2java.bSQL2Java2.impl;

import bsql2java.bSQL2Java2.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BSQL2Java2FactoryImpl extends EFactoryImpl implements BSQL2Java2Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BSQL2Java2Factory init()
  {
    try
    {
      BSQL2Java2Factory theBSQL2Java2Factory = (BSQL2Java2Factory)EPackage.Registry.INSTANCE.getEFactory(BSQL2Java2Package.eNS_URI);
      if (theBSQL2Java2Factory != null)
      {
        return theBSQL2Java2Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BSQL2Java2FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSQL2Java2FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BSQL2Java2Package.BSQL2_JAVA2: return createBSQL2Java2();
      case BSQL2Java2Package.BSQL_MACHINE: return createBSQLMachine();
      case BSQL2Java2Package.BOPERATION: return createBOperation();
      case BSQL2Java2Package.BTABLE: return createBTable();
      case BSQL2Java2Package.ATTRIBUTE: return createAttribute();
      case BSQL2Java2Package.BTYPE: return createBType();
      case BSQL2Java2Package.BOOL_OPERATION: return createBoolOperation();
      case BSQL2Java2Package.BSUB_TRUE: return createBSubTrue();
      case BSQL2Java2Package.BSUB_FALSE: return createBSubFalse();
      case BSQL2Java2Package.STRING_OPERATION: return createStringOperation();
      case BSQL2Java2Package.BANY_BLOCK: return createBAnyBlock();
      case BSQL2Java2Package.VOID_OPERATION: return createVoidOperation();
      case BSQL2Java2Package.BPREDICATE: return createBPredicate();
      case BSQL2Java2Package.SQL_CALL: return createSQLCall();
      case BSQL2Java2Package.TABLE_INSTANCE: return createTableInstance();
      case BSQL2Java2Package.TI_ASSIGNMENT: return createTIAssignment();
      case BSQL2Java2Package.BPARAMETER_TYPING: return createBParameterTyping();
      case BSQL2Java2Package.BSUBSTITUTION: return createBSubstitution();
      case BSQL2Java2Package.BUNION: return createBUnion();
      case BSQL2Java2Package.BELEMENT_STRUCTURE: return createBElementStructure();
      case BSQL2Java2Package.BELEMENT: return createBElement();
      case BSQL2Java2Package.BSET: return createBSet();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSQL2Java2 createBSQL2Java2()
  {
    BSQL2Java2Impl bsql2Java2 = new BSQL2Java2Impl();
    return bsql2Java2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSQLMachine createBSQLMachine()
  {
    BSQLMachineImpl bsqlMachine = new BSQLMachineImpl();
    return bsqlMachine;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BOperation createBOperation()
  {
    BOperationImpl bOperation = new BOperationImpl();
    return bOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BTable createBTable()
  {
    BTableImpl bTable = new BTableImpl();
    return bTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BType createBType()
  {
    BTypeImpl bType = new BTypeImpl();
    return bType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolOperation createBoolOperation()
  {
    BoolOperationImpl boolOperation = new BoolOperationImpl();
    return boolOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubTrue createBSubTrue()
  {
    BSubTrueImpl bSubTrue = new BSubTrueImpl();
    return bSubTrue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubFalse createBSubFalse()
  {
    BSubFalseImpl bSubFalse = new BSubFalseImpl();
    return bSubFalse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringOperation createStringOperation()
  {
    StringOperationImpl stringOperation = new StringOperationImpl();
    return stringOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BAnyBlock createBAnyBlock()
  {
    BAnyBlockImpl bAnyBlock = new BAnyBlockImpl();
    return bAnyBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VoidOperation createVoidOperation()
  {
    VoidOperationImpl voidOperation = new VoidOperationImpl();
    return voidOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BPredicate createBPredicate()
  {
    BPredicateImpl bPredicate = new BPredicateImpl();
    return bPredicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SQLCall createSQLCall()
  {
    SQLCallImpl sqlCall = new SQLCallImpl();
    return sqlCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableInstance createTableInstance()
  {
    TableInstanceImpl tableInstance = new TableInstanceImpl();
    return tableInstance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TIAssignment createTIAssignment()
  {
    TIAssignmentImpl tiAssignment = new TIAssignmentImpl();
    return tiAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BParameterTyping createBParameterTyping()
  {
    BParameterTypingImpl bParameterTyping = new BParameterTypingImpl();
    return bParameterTyping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSubstitution createBSubstitution()
  {
    BSubstitutionImpl bSubstitution = new BSubstitutionImpl();
    return bSubstitution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BUnion createBUnion()
  {
    BUnionImpl bUnion = new BUnionImpl();
    return bUnion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BElementStructure createBElementStructure()
  {
    BElementStructureImpl bElementStructure = new BElementStructureImpl();
    return bElementStructure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BElement createBElement()
  {
    BElementImpl bElement = new BElementImpl();
    return bElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSet createBSet()
  {
    BSetImpl bSet = new BSetImpl();
    return bSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BSQL2Java2Package getBSQL2Java2Package()
  {
    return (BSQL2Java2Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BSQL2Java2Package getPackage()
  {
    return BSQL2Java2Package.eINSTANCE;
  }

} //BSQL2Java2FactoryImpl
