«IMPORT b»

«DEFINE file FOR BSpec»
B Specification : «name»
	«FILE name + ".txt"-»
		«EXPAND machine FOREACH machines» 
	«ENDFILE»
END Specification
«ENDDEFINE»




«DEFINE machine  FOR BMachine »


MACHINE 
	«name»
«IF this.includes.size>0 » 
INCLUDES
«FOREACH this.includes AS inc SEPARATOR ','-»
	«inc.name-»
«ENDFOREACH»
«ENDIF -» 
«IF this.uses.size>0 -» 
USES
«FOREACH this.uses AS inc SEPARATOR ','-»
	«inc.name-»
«ENDFOREACH -»
«ENDIF »
SETS
«FOREACH data.typeSelect(BAbstractSet) AS dabs SEPARATOR ','-»
 «dabs.name-»
«ENDFOREACH»
«FOREACH data.typeSelect(BEnumSet) AS es -»
 ,«es.name-»={«FOREACH es.values AS value SEPARATOR ','»«value.name»«ENDFOREACH»}
«ENDFOREACH»
VARIABLES
«FOREACH data.typeSelect(BVariable) AS dvar SEPARATOR ','-»
 «dvar.name-»
«ENDFOREACH»
INVARIANT
«FOREACH data.typeSelect(BVariable) AS bvar SEPARATOR '&'-»  
 «bvar.typingPredicate.name.first()»
«ENDFOREACH-» 
«IF this.operations.size>0 -» 
OPERATIONS
«FOREACH this.operations AS op SEPARATOR ';' »

«IF (op.body!=null)&&(op.body.contains("out :"))»out <- «ENDIF»«op.name-»(«IF op.param.size>0 -»
«FOREACH op.param  AS p SEPARATOR ',' -»
«p.name-»
«ENDFOREACH -»
«ENDIF -»)==
	Pre
«FOREACH op.param AS p SEPARATOR '&'-»
		«p.typingPredicate.name.first()» 
«ENDFOREACH -»
«IF (op.substitution.precondition.body!=null)&&(op.substitution.precondition.body!="")-»
&		«op.substitution.precondition.body»«ENDIF-»
«FOREACH op.substitution.precondition.typingPredicate AS tp SEPARATOR '&'-» 
		«tp.name -»
«ENDFOREACH »
	then
		«op.body »
	end«ENDFOREACH -»
«ENDIF »
 END
«ENDDEFINE»
 «FOREACH AS » «ENDFOREACH »
  «IF »
  «ELSEIF »
  «ELSE »
  «ENDIF »
   « »
    « »